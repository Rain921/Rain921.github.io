!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(C,e){"use strict";function m(e){return null!=e&&e===e.window}var t=[],T=C.document,n=Object.getPrototypeOf,a=t.slice,g=t.concat,l=t.push,s=t.indexOf,i={},o=i.toString,v=i.hasOwnProperty,r=v.toString,d=r.call(Object),y={},w=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},c={type:!0,src:!0,nonce:!0,noModule:!0};function b(e,t,i){var n,s,o=(i=i||T).createElement("script");if(o.text=e,t)for(n in c)(s=t[n]||t.getAttribute&&t.getAttribute(n))&&o.setAttribute(n,s);i.head.appendChild(o).parentNode.removeChild(o)}function k(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?i[o.call(e)]||"object":typeof e}var u="3.4.1",S=function(e,t){return new S.fn.init(e,t)},p=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function h(e){var t=!!e&&"length"in e&&e.length,i=k(e);return!w(e)&&!m(e)&&("array"===i||0===t||"number"==typeof t&&0<t&&t-1 in e)}S.fn=S.prototype={jquery:u,constructor:S,length:0,toArray:function(){return a.call(this)},get:function(e){return null==e?a.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=S.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return S.each(this,e)},map:function(i){return this.pushStack(S.map(this,function(e,t){return i.call(e,t,e)}))},slice:function(){return this.pushStack(a.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,i=+e+(e<0?t:0);return this.pushStack(0<=i&&i<t?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:t.sort,splice:t.splice},S.extend=S.fn.extend=function(){var e,t,i,n,s,o,r=arguments[0]||{},a=1,l=arguments.length,d=!1;for("boolean"==typeof r&&(d=r,r=arguments[a]||{},a++),"object"==typeof r||w(r)||(r={}),a===l&&(r=this,a--);a<l;a++)if(null!=(e=arguments[a]))for(t in e)n=e[t],"__proto__"!==t&&r!==n&&(d&&n&&(S.isPlainObject(n)||(s=Array.isArray(n)))?(i=r[t],o=s&&!Array.isArray(i)?[]:s||S.isPlainObject(i)?i:{},s=!1,r[t]=S.extend(d,o,n)):void 0!==n&&(r[t]=n));return r},S.extend({expando:"jQuery"+(u+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,i;return!(!e||"[object Object]"!==o.call(e))&&(!(t=n(e))||"function"==typeof(i=v.call(t,"constructor")&&t.constructor)&&r.call(i)===d)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t){b(e,{nonce:t&&t.nonce})},each:function(e,t){var i,n=0;if(h(e))for(i=e.length;n<i&&!1!==t.call(e[n],n,e[n]);n++);else for(n in e)if(!1===t.call(e[n],n,e[n]))break;return e},trim:function(e){return null==e?"":(e+"").replace(p,"")},makeArray:function(e,t){var i=t||[];return null!=e&&(h(Object(e))?S.merge(i,"string"==typeof e?[e]:e):l.call(i,e)),i},inArray:function(e,t,i){return null==t?-1:s.call(t,e,i)},merge:function(e,t){for(var i=+t.length,n=0,s=e.length;n<i;n++)e[s++]=t[n];return e.length=s,e},grep:function(e,t,i){for(var n=[],s=0,o=e.length,r=!i;s<o;s++)!t(e[s],s)!=r&&n.push(e[s]);return n},map:function(e,t,i){var n,s,o=0,r=[];if(h(e))for(n=e.length;o<n;o++)null!=(s=t(e[o],o,i))&&r.push(s);else for(o in e)null!=(s=t(e[o],o,i))&&r.push(s);return g.apply([],r)},guid:1,support:y}),"function"==typeof Symbol&&(S.fn[Symbol.iterator]=t[Symbol.iterator]),S.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){i["[object "+t+"]"]=t.toLowerCase()});var f=function(i){function u(e,t,i){var n="0x"+t-65536;return n!=n||i?t:n<0?String.fromCharCode(65536+n):String.fromCharCode(n>>10|55296,1023&n|56320)}function s(){x()}var e,h,b,o,r,f,p,m,k,l,d,x,C,a,T,g,c,v,y,S="sizzle"+1*new Date,w=i.document,D=0,n=0,$=le(),_=le(),A=le(),M=le(),E=function(e,t){return e===t&&(d=!0),0},H={}.hasOwnProperty,t=[],j=t.pop,N=t.push,P=t.push,q=t.slice,O=function(e,t){for(var i=0,n=e.length;i<n;i++)if(e[i]===t)return i;return-1},L="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",I="[\\x20\\t\\r\\n\\f]",R="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",F="\\["+I+"*("+R+")(?:"+I+"*([*^$|!~]?=)"+I+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+R+"))|)"+I+"*\\]",B=":("+R+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+F+")*)|.*)\\)|)",z=new RegExp(I+"+","g"),W=new RegExp("^"+I+"+|((?:^|[^\\\\])(?:\\\\.)*)"+I+"+$","g"),U=new RegExp("^"+I+"*,"+I+"*"),V=new RegExp("^"+I+"*([>+~]|"+I+")"+I+"*"),Y=new RegExp(I+"|>"),X=new RegExp(B),K=new RegExp("^"+R+"$"),G={ID:new RegExp("^#("+R+")"),CLASS:new RegExp("^\\.("+R+")"),TAG:new RegExp("^("+R+"|[*])"),ATTR:new RegExp("^"+F),PSEUDO:new RegExp("^"+B),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+I+"*(even|odd|(([+-]|)(\\d*)n|)"+I+"*(?:([+-]|)"+I+"*(\\d+)|))"+I+"*\\)|)","i"),bool:new RegExp("^(?:"+L+")$","i"),needsContext:new RegExp("^"+I+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+I+"*((?:-\\d)?\\d*)"+I+"*\\)|)(?=[^-]|$)","i")},Q=/HTML$/i,J=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,ee=/^[^{]+\{\s*\[native \w/,te=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ie=/[+~]/,ne=new RegExp("\\\\([\\da-f]{1,6}"+I+"?|("+I+")|.)","ig"),se=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,oe=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},re=be(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{P.apply(t=q.call(w.childNodes),w.childNodes),t[w.childNodes.length].nodeType}catch(e){P={apply:t.length?function(e,t){N.apply(e,q.call(t))}:function(e,t){for(var i=e.length,n=0;e[i++]=t[n++];);e.length=i-1}}}function ae(t,e,i,n){var s,o,r,a,l,d,c,u=e&&e.ownerDocument,p=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return i;if(!n&&((e?e.ownerDocument||e:w)!==C&&x(e),e=e||C,T)){if(11!==p&&(l=te.exec(t)))if(s=l[1]){if(9===p){if(!(r=e.getElementById(s)))return i;if(r.id===s)return i.push(r),i}else if(u&&(r=u.getElementById(s))&&y(e,r)&&r.id===s)return i.push(r),i}else{if(l[2])return P.apply(i,e.getElementsByTagName(t)),i;if((s=l[3])&&h.getElementsByClassName&&e.getElementsByClassName)return P.apply(i,e.getElementsByClassName(s)),i}if(h.qsa&&!M[t+" "]&&(!g||!g.test(t))&&(1!==p||"object"!==e.nodeName.toLowerCase())){if(c=t,u=e,1===p&&Y.test(t)){for((a=e.getAttribute("id"))?a=a.replace(se,oe):e.setAttribute("id",a=S),o=(d=f(t)).length;o--;)d[o]="#"+a+" "+we(d[o]);c=d.join(","),u=ie.test(t)&&ve(e.parentNode)||e}try{return P.apply(i,u.querySelectorAll(c)),i}catch(e){M(t,!0)}finally{a===S&&e.removeAttribute("id")}}}return m(t.replace(W,"$1"),e,i,n)}function le(){var n=[];return function e(t,i){return n.push(t+" ")>b.cacheLength&&delete e[n.shift()],e[t+" "]=i}}function de(e){return e[S]=!0,e}function ce(e){var t=C.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function ue(e,t){for(var i=e.split("|"),n=i.length;n--;)b.attrHandle[i[n]]=t}function pe(e,t){var i=t&&e,n=i&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function he(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function fe(i){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===i}}function me(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&re(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function ge(r){return de(function(o){return o=+o,de(function(e,t){for(var i,n=r([],e.length,o),s=n.length;s--;)e[i=n[s]]&&(e[i]=!(t[i]=e[i]))})})}function ve(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in h=ae.support={},r=ae.isXML=function(e){var t=e.namespaceURI,i=(e.ownerDocument||e).documentElement;return!Q.test(t||i&&i.nodeName||"HTML")},x=ae.setDocument=function(e){var t,i,n=e?e.ownerDocument||e:w;return n!==C&&9===n.nodeType&&n.documentElement&&(a=(C=n).documentElement,T=!r(C),w!==C&&(i=C.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",s,!1):i.attachEvent&&i.attachEvent("onunload",s)),h.attributes=ce(function(e){return e.className="i",!e.getAttribute("className")}),h.getElementsByTagName=ce(function(e){return e.appendChild(C.createComment("")),!e.getElementsByTagName("*").length}),h.getElementsByClassName=ee.test(C.getElementsByClassName),h.getById=ce(function(e){return a.appendChild(e).id=S,!C.getElementsByName||!C.getElementsByName(S).length}),h.getById?(b.filter.ID=function(e){var t=e.replace(ne,u);return function(e){return e.getAttribute("id")===t}},b.find.ID=function(e,t){if(void 0!==t.getElementById&&T){var i=t.getElementById(e);return i?[i]:[]}}):(b.filter.ID=function(e){var i=e.replace(ne,u);return function(e){var t=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===i}},b.find.ID=function(e,t){if(void 0!==t.getElementById&&T){var i,n,s,o=t.getElementById(e);if(o){if((i=o.getAttributeNode("id"))&&i.value===e)return[o];for(s=t.getElementsByName(e),n=0;o=s[n++];)if((i=o.getAttributeNode("id"))&&i.value===e)return[o]}return[]}}),b.find.TAG=h.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):h.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,n=[],s=0,o=t.getElementsByTagName(e);if("*"!==e)return o;for(;i=o[s++];)1===i.nodeType&&n.push(i);return n},b.find.CLASS=h.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&T)return t.getElementsByClassName(e)},c=[],g=[],(h.qsa=ee.test(C.querySelectorAll))&&(ce(function(e){a.appendChild(e).innerHTML="<a id='"+S+"'></a><select id='"+S+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&g.push("[*^$]="+I+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||g.push("\\["+I+"*(?:value|"+L+")"),e.querySelectorAll("[id~="+S+"-]").length||g.push("~="),e.querySelectorAll(":checked").length||g.push(":checked"),e.querySelectorAll("a#"+S+"+*").length||g.push(".#.+[+~]")}),ce(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=C.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&g.push("name"+I+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&g.push(":enabled",":disabled"),a.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&g.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),g.push(",.*:")})),(h.matchesSelector=ee.test(v=a.matches||a.webkitMatchesSelector||a.mozMatchesSelector||a.oMatchesSelector||a.msMatchesSelector))&&ce(function(e){h.disconnectedMatch=v.call(e,"*"),v.call(e,"[s!='']:x"),c.push("!=",B)}),g=g.length&&new RegExp(g.join("|")),c=c.length&&new RegExp(c.join("|")),t=ee.test(a.compareDocumentPosition),y=t||ee.test(a.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},E=t?function(e,t){if(e===t)return d=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i||(1&(i=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!h.sortDetached&&t.compareDocumentPosition(e)===i?e===C||e.ownerDocument===w&&y(w,e)?-1:t===C||t.ownerDocument===w&&y(w,t)?1:l?O(l,e)-O(l,t):0:4&i?-1:1)}:function(e,t){if(e===t)return d=!0,0;var i,n=0,s=e.parentNode,o=t.parentNode,r=[e],a=[t];if(!s||!o)return e===C?-1:t===C?1:s?-1:o?1:l?O(l,e)-O(l,t):0;if(s===o)return pe(e,t);for(i=e;i=i.parentNode;)r.unshift(i);for(i=t;i=i.parentNode;)a.unshift(i);for(;r[n]===a[n];)n++;return n?pe(r[n],a[n]):r[n]===w?-1:a[n]===w?1:0}),C},ae.matches=function(e,t){return ae(e,null,null,t)},ae.matchesSelector=function(e,t){if((e.ownerDocument||e)!==C&&x(e),h.matchesSelector&&T&&!M[t+" "]&&(!c||!c.test(t))&&(!g||!g.test(t)))try{var i=v.call(e,t);if(i||h.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){M(t,!0)}return 0<ae(t,C,null,[e]).length},ae.contains=function(e,t){return(e.ownerDocument||e)!==C&&x(e),y(e,t)},ae.attr=function(e,t){(e.ownerDocument||e)!==C&&x(e);var i=b.attrHandle[t.toLowerCase()],n=i&&H.call(b.attrHandle,t.toLowerCase())?i(e,t,!T):void 0;return void 0!==n?n:h.attributes||!T?e.getAttribute(t):(n=e.getAttributeNode(t))&&n.specified?n.value:null},ae.escape=function(e){return(e+"").replace(se,oe)},ae.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},ae.uniqueSort=function(e){var t,i=[],n=0,s=0;if(d=!h.detectDuplicates,l=!h.sortStable&&e.slice(0),e.sort(E),d){for(;t=e[s++];)t===e[s]&&(n=i.push(s));for(;n--;)e.splice(i[n],1)}return l=null,e},o=ae.getText=function(e){var t,i="",n=0,s=e.nodeType;if(s){if(1===s||9===s||11===s){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=o(e)}else if(3===s||4===s)return e.nodeValue}else for(;t=e[n++];)i+=o(t);return i},(b=ae.selectors={cacheLength:50,createPseudo:de,match:G,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(ne,u),e[3]=(e[3]||e[4]||e[5]||"").replace(ne,u),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||ae.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&ae.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return G.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&X.test(i)&&(t=f(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(ne,u).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=$[e+" "];return t||(t=new RegExp("(^|"+I+")"+e+"("+I+"|$)"))&&$(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(i,n,s){return function(e){var t=ae.attr(e,i);return null==t?"!="===n:!n||(t+="","="===n?t===s:"!="===n?t!==s:"^="===n?s&&0===t.indexOf(s):"*="===n?s&&-1<t.indexOf(s):"$="===n?s&&t.slice(-s.length)===s:"~="===n?-1<(" "+t.replace(z," ")+" ").indexOf(s):"|="===n&&(t===s||t.slice(0,s.length+1)===s+"-"))}},CHILD:function(f,e,t,m,g){var v="nth"!==f.slice(0,3),y="last"!==f.slice(-4),w="of-type"===e;return 1===m&&0===g?function(e){return!!e.parentNode}:function(e,t,i){var n,s,o,r,a,l,d=v!=y?"nextSibling":"previousSibling",c=e.parentNode,u=w&&e.nodeName.toLowerCase(),p=!i&&!w,h=!1;if(c){if(v){for(;d;){for(r=e;r=r[d];)if(w?r.nodeName.toLowerCase()===u:1===r.nodeType)return!1;l=d="only"===f&&!l&&"nextSibling"}return!0}if(l=[y?c.firstChild:c.lastChild],y&&p){for(h=(a=(n=(s=(o=(r=c)[S]||(r[S]={}))[r.uniqueID]||(o[r.uniqueID]={}))[f]||[])[0]===D&&n[1])&&n[2],r=a&&c.childNodes[a];r=++a&&r&&r[d]||(h=a=0)||l.pop();)if(1===r.nodeType&&++h&&r===e){s[f]=[D,a,h];break}}else if(p&&(h=a=(n=(s=(o=(r=e)[S]||(r[S]={}))[r.uniqueID]||(o[r.uniqueID]={}))[f]||[])[0]===D&&n[1]),!1===h)for(;(r=++a&&r&&r[d]||(h=a=0)||l.pop())&&((w?r.nodeName.toLowerCase()!==u:1!==r.nodeType)||!++h||(p&&((s=(o=r[S]||(r[S]={}))[r.uniqueID]||(o[r.uniqueID]={}))[f]=[D,h]),r!==e)););return(h-=g)===m||h%m==0&&0<=h/m}}},PSEUDO:function(e,o){var t,r=b.pseudos[e]||b.setFilters[e.toLowerCase()]||ae.error("unsupported pseudo: "+e);return r[S]?r(o):1<r.length?(t=[e,e,"",o],b.setFilters.hasOwnProperty(e.toLowerCase())?de(function(e,t){for(var i,n=r(e,o),s=n.length;s--;)e[i=O(e,n[s])]=!(t[i]=n[s])}):function(e){return r(e,0,t)}):r}},pseudos:{not:de(function(e){var n=[],s=[],a=p(e.replace(W,"$1"));return a[S]?de(function(e,t,i,n){for(var s,o=a(e,null,n,[]),r=e.length;r--;)(s=o[r])&&(e[r]=!(t[r]=s))}):function(e,t,i){return n[0]=e,a(n,null,i,s),n[0]=null,!s.pop()}}),has:de(function(t){return function(e){return 0<ae(t,e).length}}),contains:de(function(t){return t=t.replace(ne,u),function(e){return-1<(e.textContent||o(e)).indexOf(t)}}),lang:de(function(i){return K.test(i||"")||ae.error("unsupported lang: "+i),i=i.replace(ne,u).toLowerCase(),function(e){var t;do{if(t=T?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===i||0===t.indexOf(i+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=i.location&&i.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===a},focus:function(e){return e===C.activeElement&&(!C.hasFocus||C.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:me(!1),disabled:me(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return Z.test(e.nodeName)},input:function(e){return J.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ge(function(){return[0]}),last:ge(function(e,t){return[t-1]}),eq:ge(function(e,t,i){return[i<0?i+t:i]}),even:ge(function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e}),odd:ge(function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e}),lt:ge(function(e,t,i){for(var n=i<0?i+t:t<i?t:i;0<=--n;)e.push(n);return e}),gt:ge(function(e,t,i){for(var n=i<0?i+t:i;++n<t;)e.push(n);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=he(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=fe(e);function ye(){}function we(e){for(var t=0,i=e.length,n="";t<i;t++)n+=e[t].value;return n}function be(a,e,t){var l=e.dir,d=e.next,c=d||l,u=t&&"parentNode"===c,p=n++;return e.first?function(e,t,i){for(;e=e[l];)if(1===e.nodeType||u)return a(e,t,i);return!1}:function(e,t,i){var n,s,o,r=[D,p];if(i){for(;e=e[l];)if((1===e.nodeType||u)&&a(e,t,i))return!0}else for(;e=e[l];)if(1===e.nodeType||u)if(s=(o=e[S]||(e[S]={}))[e.uniqueID]||(o[e.uniqueID]={}),d&&d===e.nodeName.toLowerCase())e=e[l]||e;else{if((n=s[c])&&n[0]===D&&n[1]===p)return r[2]=n[2];if((s[c]=r)[2]=a(e,t,i))return!0}return!1}}function ke(s){return 1<s.length?function(e,t,i){for(var n=s.length;n--;)if(!s[n](e,t,i))return!1;return!0}:s[0]}function xe(e,t,i,n,s){for(var o,r=[],a=0,l=e.length,d=null!=t;a<l;a++)(o=e[a])&&(i&&!i(o,n,s)||(r.push(o),d&&t.push(a)));return r}function Ce(h,f,m,g,v,e){return g&&!g[S]&&(g=Ce(g)),v&&!v[S]&&(v=Ce(v,e)),de(function(e,t,i,n){var s,o,r,a=[],l=[],d=t.length,c=e||function(e,t,i){for(var n=0,s=t.length;n<s;n++)ae(e,t[n],i);return i}(f||"*",i.nodeType?[i]:i,[]),u=!h||!e&&f?c:xe(c,a,h,i,n),p=m?v||(e?h:d||g)?[]:t:u;if(m&&m(u,p,i,n),g)for(s=xe(p,l),g(s,[],i,n),o=s.length;o--;)(r=s[o])&&(p[l[o]]=!(u[l[o]]=r));if(e){if(v||h){if(v){for(s=[],o=p.length;o--;)(r=p[o])&&s.push(u[o]=r);v(null,p=[],s,n)}for(o=p.length;o--;)(r=p[o])&&-1<(s=v?O(e,r):a[o])&&(e[s]=!(t[s]=r))}}else p=xe(p===t?p.splice(d,p.length):p),v?v(null,t,p,n):P.apply(t,p)})}function Te(e){for(var s,t,i,n=e.length,o=b.relative[e[0].type],r=o||b.relative[" "],a=o?1:0,l=be(function(e){return e===s},r,!0),d=be(function(e){return-1<O(s,e)},r,!0),c=[function(e,t,i){var n=!o&&(i||t!==k)||((s=t).nodeType?l(e,t,i):d(e,t,i));return s=null,n}];a<n;a++)if(t=b.relative[e[a].type])c=[be(ke(c),t)];else{if((t=b.filter[e[a].type].apply(null,e[a].matches))[S]){for(i=++a;i<n&&!b.relative[e[i].type];i++);return Ce(1<a&&ke(c),1<a&&we(e.slice(0,a-1).concat({value:" "===e[a-2].type?"*":""})).replace(W,"$1"),t,a<i&&Te(e.slice(a,i)),i<n&&Te(e=e.slice(i)),i<n&&we(e))}c.push(t)}return ke(c)}return ye.prototype=b.filters=b.pseudos,b.setFilters=new ye,f=ae.tokenize=function(e,t){var i,n,s,o,r,a,l,d=_[e+" "];if(d)return t?0:d.slice(0);for(r=e,a=[],l=b.preFilter;r;){for(o in i&&!(n=U.exec(r))||(n&&(r=r.slice(n[0].length)||r),a.push(s=[])),i=!1,(n=V.exec(r))&&(i=n.shift(),s.push({value:i,type:n[0].replace(W," ")}),r=r.slice(i.length)),b.filter)!(n=G[o].exec(r))||l[o]&&!(n=l[o](n))||(i=n.shift(),s.push({value:i,type:o,matches:n}),r=r.slice(i.length));if(!i)break}return t?r.length:r?ae.error(e):_(e,a).slice(0)},p=ae.compile=function(e,t){var i,n=[],s=[],o=A[e+" "];if(!o){for(i=(t=t||f(e)).length;i--;)(o=Te(t[i]))[S]?n.push(o):s.push(o);(o=A(e,function(g,v){function e(e,t,i,n,s){var o,r,a,l=0,d="0",c=e&&[],u=[],p=k,h=e||w&&b.find.TAG("*",s),f=D+=null==p?1:Math.random()||.1,m=h.length;for(s&&(k=t===C||t||s);d!==m&&null!=(o=h[d]);d++){if(w&&o){for(r=0,t||o.ownerDocument===C||(x(o),i=!T);a=g[r++];)if(a(o,t||C,i)){n.push(o);break}s&&(D=f)}y&&((o=!a&&o)&&l--,e&&c.push(o))}if(l+=d,y&&d!==l){for(r=0;a=v[r++];)a(c,u,t,i);if(e){if(0<l)for(;d--;)c[d]||u[d]||(u[d]=j.call(n));u=xe(u)}P.apply(n,u),s&&!e&&0<u.length&&1<l+v.length&&ae.uniqueSort(n)}return s&&(D=f,k=p),c}var y=0<v.length,w=0<g.length;return y?de(e):e}(s,n))).selector=e}return o},m=ae.select=function(e,t,i,n){var s,o,r,a,l,d="function"==typeof e&&e,c=!n&&f(e=d.selector||e);if(i=i||[],1===c.length){if(2<(o=c[0]=c[0].slice(0)).length&&"ID"===(r=o[0]).type&&9===t.nodeType&&T&&b.relative[o[1].type]){if(!(t=(b.find.ID(r.matches[0].replace(ne,u),t)||[])[0]))return i;d&&(t=t.parentNode),e=e.slice(o.shift().value.length)}for(s=G.needsContext.test(e)?0:o.length;s--&&(r=o[s],!b.relative[a=r.type]);)if((l=b.find[a])&&(n=l(r.matches[0].replace(ne,u),ie.test(o[0].type)&&ve(t.parentNode)||t))){if(o.splice(s,1),!(e=n.length&&we(o)))return P.apply(i,n),i;break}}return(d||p(e,c))(n,t,!T,i,!t||ie.test(e)&&ve(t.parentNode)||t),i},h.sortStable=S.split("").sort(E).join("")===S,h.detectDuplicates=!!d,x(),h.sortDetached=ce(function(e){return 1&e.compareDocumentPosition(C.createElement("fieldset"))}),ce(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||ue("type|href|height|width",function(e,t,i){if(!i)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),h.attributes&&ce(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||ue("value",function(e,t,i){if(!i&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),ce(function(e){return null==e.getAttribute("disabled")})||ue(L,function(e,t,i){var n;if(!i)return!0===e[t]?t.toLowerCase():(n=e.getAttributeNode(t))&&n.specified?n.value:null}),ae}(C);S.find=f,S.expr=f.selectors,S.expr[":"]=S.expr.pseudos,S.uniqueSort=S.unique=f.uniqueSort,S.text=f.getText,S.isXMLDoc=f.isXML,S.contains=f.contains,S.escapeSelector=f.escape;function x(e,t,i){for(var n=[],s=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(s&&S(e).is(i))break;n.push(e)}return n}function D(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i}var $=S.expr.match.needsContext;function _(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var A=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function M(e,i,n){return w(i)?S.grep(e,function(e,t){return!!i.call(e,t,e)!==n}):i.nodeType?S.grep(e,function(e){return e===i!==n}):"string"!=typeof i?S.grep(e,function(e){return-1<s.call(i,e)!==n}):S.filter(i,e,n)}S.filter=function(e,t,i){var n=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===n.nodeType?S.find.matchesSelector(n,e)?[n]:[]:S.find.matches(e,S.grep(t,function(e){return 1===e.nodeType}))},S.fn.extend({find:function(e){var t,i,n=this.length,s=this;if("string"!=typeof e)return this.pushStack(S(e).filter(function(){for(t=0;t<n;t++)if(S.contains(s[t],this))return!0}));for(i=this.pushStack([]),t=0;t<n;t++)S.find(e,s[t],i);return 1<n?S.uniqueSort(i):i},filter:function(e){return this.pushStack(M(this,e||[],!1))},not:function(e){return this.pushStack(M(this,e||[],!0))},is:function(e){return!!M(this,"string"==typeof e&&$.test(e)?S(e):e||[],!1).length}});var E,H=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(S.fn.init=function(e,t,i){var n,s;if(!e)return this;if(i=i||E,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):w(e)?void 0!==i.ready?i.ready(e):e(S):S.makeArray(e,this);if(!(n="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:H.exec(e))||!n[1]&&t)return!t||t.jquery?(t||i).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof S?t[0]:t,S.merge(this,S.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:T,!0)),A.test(n[1])&&S.isPlainObject(t))for(n in t)w(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return(s=T.getElementById(n[2]))&&(this[0]=s,this.length=1),this}).prototype=S.fn,E=S(T);var j=/^(?:parents|prev(?:Until|All))/,N={children:!0,contents:!0,next:!0,prev:!0};function P(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}S.fn.extend({has:function(e){var t=S(e,this),i=t.length;return this.filter(function(){for(var e=0;e<i;e++)if(S.contains(this,t[e]))return!0})},closest:function(e,t){var i,n=0,s=this.length,o=[],r="string"!=typeof e&&S(e);if(!$.test(e))for(;n<s;n++)for(i=this[n];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(r?-1<r.index(i):1===i.nodeType&&S.find.matchesSelector(i,e))){o.push(i);break}return this.pushStack(1<o.length?S.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?s.call(S(e),this[0]):s.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(S.uniqueSort(S.merge(this.get(),S(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),S.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return x(e,"parentNode")},parentsUntil:function(e,t,i){return x(e,"parentNode",i)},next:function(e){return P(e,"nextSibling")},prev:function(e){return P(e,"previousSibling")},nextAll:function(e){return x(e,"nextSibling")},prevAll:function(e){return x(e,"previousSibling")},nextUntil:function(e,t,i){return x(e,"nextSibling",i)},prevUntil:function(e,t,i){return x(e,"previousSibling",i)},siblings:function(e){return D((e.parentNode||{}).firstChild,e)},children:function(e){return D(e.firstChild)},contents:function(e){return void 0!==e.contentDocument?e.contentDocument:(_(e,"template")&&(e=e.content||e),S.merge([],e.childNodes))}},function(n,s){S.fn[n]=function(e,t){var i=S.map(this,s,e);return"Until"!==n.slice(-5)&&(t=e),t&&"string"==typeof t&&(i=S.filter(t,i)),1<this.length&&(N[n]||S.uniqueSort(i),j.test(n)&&i.reverse()),this.pushStack(i)}});var q=/[^\x20\t\r\n\f]+/g;function O(e){return e}function L(e){throw e}function I(e,t,i,n){var s;try{e&&w(s=e.promise)?s.call(e).done(t).fail(i):e&&w(s=e.then)?s.call(e,t,i):t.apply(void 0,[e].slice(n))}catch(e){i.apply(void 0,[e])}}S.Callbacks=function(n){n="string"==typeof n?function(e){var i={};return S.each(e.match(q)||[],function(e,t){i[t]=!0}),i}(n):S.extend({},n);function i(){for(o=o||n.once,t=s=!0;a.length;l=-1)for(e=a.shift();++l<r.length;)!1===r[l].apply(e[0],e[1])&&n.stopOnFalse&&(l=r.length,e=!1);n.memory||(e=!1),s=!1,o&&(r=e?[]:"")}var s,e,t,o,r=[],a=[],l=-1,d={add:function(){return r&&(e&&!s&&(l=r.length-1,a.push(e)),function i(e){S.each(e,function(e,t){w(t)?n.unique&&d.has(t)||r.push(t):t&&t.length&&"string"!==k(t)&&i(t)})}(arguments),e&&!s&&i()),this},remove:function(){return S.each(arguments,function(e,t){for(var i;-1<(i=S.inArray(t,r,i));)r.splice(i,1),i<=l&&l--}),this},has:function(e){return e?-1<S.inArray(e,r):0<r.length},empty:function(){return r=r&&[],this},disable:function(){return o=a=[],r=e="",this},disabled:function(){return!r},lock:function(){return o=a=[],e||s||(r=e=""),this},locked:function(){return!!o},fireWith:function(e,t){return o||(t=[e,(t=t||[]).slice?t.slice():t],a.push(t),s||i()),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!t}};return d},S.extend({Deferred:function(e){var o=[["notify","progress",S.Callbacks("memory"),S.Callbacks("memory"),2],["resolve","done",S.Callbacks("once memory"),S.Callbacks("once memory"),0,"resolved"],["reject","fail",S.Callbacks("once memory"),S.Callbacks("once memory"),1,"rejected"]],s="pending",r={state:function(){return s},always:function(){return a.done(arguments).fail(arguments),this},catch:function(e){return r.then(null,e)},pipe:function(){var s=arguments;return S.Deferred(function(n){S.each(o,function(e,t){var i=w(s[t[4]])&&s[t[4]];a[t[1]](function(){var e=i&&i.apply(this,arguments);e&&w(e.promise)?e.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[t[0]+"With"](this,i?[e]:arguments)})}),s=null}).promise()},then:function(t,i,n){var l=0;function d(s,o,r,a){return function(){function e(){var e,t;if(!(s<l)){if((e=r.apply(i,n))===o.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,w(t)?a?t.call(e,d(l,o,O,a),d(l,o,L,a)):(l++,t.call(e,d(l,o,O,a),d(l,o,L,a),d(l,o,O,o.notifyWith))):(r!==O&&(i=void 0,n=[e]),(a||o.resolveWith)(i,n))}}var i=this,n=arguments,t=a?e:function(){try{e()}catch(e){S.Deferred.exceptionHook&&S.Deferred.exceptionHook(e,t.stackTrace),l<=s+1&&(r!==L&&(i=void 0,n=[e]),o.rejectWith(i,n))}};s?t():(S.Deferred.getStackHook&&(t.stackTrace=S.Deferred.getStackHook()),C.setTimeout(t))}}return S.Deferred(function(e){o[0][3].add(d(0,e,w(n)?n:O,e.notifyWith)),o[1][3].add(d(0,e,w(t)?t:O)),o[2][3].add(d(0,e,w(i)?i:L))}).promise()},promise:function(e){return null!=e?S.extend(e,r):r}},a={};return S.each(o,function(e,t){var i=t[2],n=t[5];r[t[1]]=i.add,n&&i.add(function(){s=n},o[3-e][2].disable,o[3-e][3].disable,o[0][2].lock,o[0][3].lock),i.add(t[3].fire),a[t[0]]=function(){return a[t[0]+"With"](this===a?void 0:this,arguments),this},a[t[0]+"With"]=i.fireWith}),r.promise(a),e&&e.call(a,a),a},when:function(e){function t(t){return function(e){s[t]=this,o[t]=1<arguments.length?a.call(arguments):e,--i||r.resolveWith(s,o)}}var i=arguments.length,n=i,s=Array(n),o=a.call(arguments),r=S.Deferred();if(i<=1&&(I(e,r.done(t(n)).resolve,r.reject,!i),"pending"===r.state()||w(o[n]&&o[n].then)))return r.then();for(;n--;)I(o[n],t(n),r.reject);return r.promise()}});var R=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;S.Deferred.exceptionHook=function(e,t){C.console&&C.console.warn&&e&&R.test(e.name)&&C.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},S.readyException=function(e){C.setTimeout(function(){throw e})};var F=S.Deferred();function B(){T.removeEventListener("DOMContentLoaded",B),C.removeEventListener("load",B),S.ready()}S.fn.ready=function(e){return F.then(e).catch(function(e){S.readyException(e)}),this},S.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--S.readyWait:S.isReady)||(S.isReady=!0)!==e&&0<--S.readyWait||F.resolveWith(T,[S])}}),S.ready.then=F.then,"complete"===T.readyState||"loading"!==T.readyState&&!T.documentElement.doScroll?C.setTimeout(S.ready):(T.addEventListener("DOMContentLoaded",B),C.addEventListener("load",B));var z=function(e,t,i,n,s,o,r){var a=0,l=e.length,d=null==i;if("object"===k(i))for(a in s=!0,i)z(e,t,a,i[a],!0,o,r);else if(void 0!==n&&(s=!0,w(n)||(r=!0),d&&(t=r?(t.call(e,n),null):(d=t,function(e,t,i){return d.call(S(e),i)})),t))for(;a<l;a++)t(e[a],i,r?n:n.call(e[a],a,t(e[a],i)));return s?e:d?t.call(e):l?t(e[0],i):o},W=/^-ms-/,U=/-([a-z])/g;function V(e,t){return t.toUpperCase()}function Y(e){return e.replace(W,"ms-").replace(U,V)}function X(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function K(){this.expando=S.expando+K.uid++}K.uid=1,K.prototype={cache:function(e){var t=e[this.expando];return t||(t={},X(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,i){var n,s=this.cache(e);if("string"==typeof t)s[Y(t)]=i;else for(n in t)s[Y(n)]=t[n];return s},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][Y(t)]},access:function(e,t,i){return void 0===t||t&&"string"==typeof t&&void 0===i?this.get(e,t):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,n=e[this.expando];if(void 0!==n){if(void 0!==t){i=(t=Array.isArray(t)?t.map(Y):(t=Y(t))in n?[t]:t.match(q)||[]).length;for(;i--;)delete n[t[i]]}void 0!==t&&!S.isEmptyObject(n)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!S.isEmptyObject(t)}};var G=new K,Q=new K,J=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/[A-Z]/g;function ee(e,t,i){var n;if(void 0===i&&1===e.nodeType)if(n="data-"+t.replace(Z,"-$&").toLowerCase(),"string"==typeof(i=e.getAttribute(n))){try{i=function(e){return"true"===e||"false"!==e&&("null"===e?null:e===+e+""?+e:J.test(e)?JSON.parse(e):e)}(i)}catch(e){}Q.set(e,t,i)}else i=void 0;return i}S.extend({hasData:function(e){return Q.hasData(e)||G.hasData(e)},data:function(e,t,i){return Q.access(e,t,i)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,i){return G.access(e,t,i)},_removeData:function(e,t){G.remove(e,t)}}),S.fn.extend({data:function(i,e){var t,n,s,o=this[0],r=o&&o.attributes;if(void 0!==i)return"object"==typeof i?this.each(function(){Q.set(this,i)}):z(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.get(o,i))?t:void 0!==(t=ee(o,i))?t:void 0;this.each(function(){Q.set(this,i,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(s=Q.get(o),1===o.nodeType&&!G.get(o,"hasDataAttrs"))){for(t=r.length;t--;)r[t]&&0===(n=r[t].name).indexOf("data-")&&(n=Y(n.slice(5)),ee(o,n,s[n]));G.set(o,"hasDataAttrs",!0)}return s},removeData:function(e){return this.each(function(){Q.remove(this,e)})}}),S.extend({queue:function(e,t,i){var n;if(e)return t=(t||"fx")+"queue",n=G.get(e,t),i&&(!n||Array.isArray(i)?n=G.access(e,t,S.makeArray(i)):n.push(i)),n||[]},dequeue:function(e,t){t=t||"fx";var i=S.queue(e,t),n=i.length,s=i.shift(),o=S._queueHooks(e,t);"inprogress"===s&&(s=i.shift(),n--),s&&("fx"===t&&i.unshift("inprogress"),delete o.stop,s.call(e,function(){S.dequeue(e,t)},o)),!n&&o&&o.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return G.get(e,i)||G.access(e,i,{empty:S.Callbacks("once memory").add(function(){G.remove(e,[t+"queue",i])})})}}),S.fn.extend({queue:function(t,i){var e=2;return"string"!=typeof t&&(i=t,t="fx",e--),arguments.length<e?S.queue(this[0],t):void 0===i?this:this.each(function(){var e=S.queue(this,t,i);S._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&S.dequeue(this,t)})},dequeue:function(e){return this.each(function(){S.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function i(){--s||o.resolveWith(r,[r])}var n,s=1,o=S.Deferred(),r=this,a=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";a--;)(n=G.get(r[a],e+"queueHooks"))&&n.empty&&(s++,n.empty.add(i));return i(),o.promise(t)}});var te=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,ie=new RegExp("^(?:([+-])=|)("+te+")([a-z%]*)$","i"),ne=["Top","Right","Bottom","Left"],se=T.documentElement,oe=function(e){return S.contains(e.ownerDocument,e)},re={composed:!0};se.getRootNode&&(oe=function(e){return S.contains(e.ownerDocument,e)||e.getRootNode(re)===e.ownerDocument});function ae(e,t,i,n){var s,o,r={};for(o in t)r[o]=e.style[o],e.style[o]=t[o];for(o in s=i.apply(e,n||[]),t)e.style[o]=r[o];return s}var le=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&oe(e)&&"none"===S.css(e,"display")};function de(e,t,i,n){var s,o,r=20,a=n?function(){return n.cur()}:function(){return S.css(e,t,"")},l=a(),d=i&&i[3]||(S.cssNumber[t]?"":"px"),c=e.nodeType&&(S.cssNumber[t]||"px"!==d&&+l)&&ie.exec(S.css(e,t));if(c&&c[3]!==d){for(l/=2,d=d||c[3],c=+l||1;r--;)S.style(e,t,c+d),(1-o)*(1-(o=a()/l||.5))<=0&&(r=0),c/=o;c*=2,S.style(e,t,c+d),i=i||[]}return i&&(c=+c||+l||0,s=i[1]?c+(i[1]+1)*i[2]:+i[2],n&&(n.unit=d,n.start=c,n.end=s)),s}var ce={};function ue(e,t){for(var i,n,s,o,r,a,l,d=[],c=0,u=e.length;c<u;c++)(n=e[c]).style&&(i=n.style.display,t?("none"===i&&(d[c]=G.get(n,"display")||null,d[c]||(n.style.display="")),""===n.style.display&&le(n)&&(d[c]=(l=r=o=void 0,r=(s=n).ownerDocument,a=s.nodeName,(l=ce[a])||(o=r.body.appendChild(r.createElement(a)),l=S.css(o,"display"),o.parentNode.removeChild(o),"none"===l&&(l="block"),ce[a]=l)))):"none"!==i&&(d[c]="none",G.set(n,"display",i)));for(c=0;c<u;c++)null!=d[c]&&(e[c].style.display=d[c]);return e}S.fn.extend({show:function(){return ue(this,!0)},hide:function(){return ue(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){le(this)?S(this).show():S(this).hide()})}});var pe=/^(?:checkbox|radio)$/i,he=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,fe=/^$|^module$|\/(?:java|ecma)script/i,me={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function ge(e,t){var i;return i=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&_(e,t)?S.merge([e],i):i}function ve(e,t){for(var i=0,n=e.length;i<n;i++)G.set(e[i],"globalEval",!t||G.get(t[i],"globalEval"))}me.optgroup=me.option,me.tbody=me.tfoot=me.colgroup=me.caption=me.thead,me.th=me.td;var ye,we,be=/<|&#?\w+;/;function ke(e,t,i,n,s){for(var o,r,a,l,d,c,u=t.createDocumentFragment(),p=[],h=0,f=e.length;h<f;h++)if((o=e[h])||0===o)if("object"===k(o))S.merge(p,o.nodeType?[o]:o);else if(be.test(o)){for(r=r||u.appendChild(t.createElement("div")),a=(he.exec(o)||["",""])[1].toLowerCase(),l=me[a]||me._default,r.innerHTML=l[1]+S.htmlPrefilter(o)+l[2],c=l[0];c--;)r=r.lastChild;S.merge(p,r.childNodes),(r=u.firstChild).textContent=""}else p.push(t.createTextNode(o));for(u.textContent="",h=0;o=p[h++];)if(n&&-1<S.inArray(o,n))s&&s.push(o);else if(d=oe(o),r=ge(u.appendChild(o),"script"),d&&ve(r),i)for(c=0;o=r[c++];)fe.test(o.type||"")&&i.push(o);return u}ye=T.createDocumentFragment().appendChild(T.createElement("div")),(we=T.createElement("input")).setAttribute("type","radio"),we.setAttribute("checked","checked"),we.setAttribute("name","t"),ye.appendChild(we),y.checkClone=ye.cloneNode(!0).cloneNode(!0).lastChild.checked,ye.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!ye.cloneNode(!0).lastChild.defaultValue;var xe=/^key/,Ce=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Te=/^([^.]*)(?:\.(.+)|)/;function Se(){return!0}function De(){return!1}function $e(e,t){return e===function(){try{return T.activeElement}catch(e){}}()==("focus"===t)}function _e(e,t,i,n,s,o){var r,a;if("object"==typeof t){for(a in"string"!=typeof i&&(n=n||i,i=void 0),t)_e(e,a,i,n,t[a],o);return e}if(null==n&&null==s?(s=i,n=i=void 0):null==s&&("string"==typeof i?(s=n,n=void 0):(s=n,n=i,i=void 0)),!1===s)s=De;else if(!s)return e;return 1===o&&(r=s,(s=function(e){return S().off(e),r.apply(this,arguments)}).guid=r.guid||(r.guid=S.guid++)),e.each(function(){S.event.add(this,t,s,n,i)})}function Ae(e,s,o){o?(G.set(e,s,!1),S.event.add(e,s,{namespace:!1,handler:function(e){var t,i,n=G.get(this,s);if(1&e.isTrigger&&this[s]){if(n.length)(S.event.special[s]||{}).delegateType&&e.stopPropagation();else if(n=a.call(arguments),G.set(this,s,n),t=o(this,s),this[s](),n!==(i=G.get(this,s))||t?G.set(this,s,!1):i={},n!==i)return e.stopImmediatePropagation(),e.preventDefault(),i.value}else n.length&&(G.set(this,s,{value:S.event.trigger(S.extend(n[0],S.Event.prototype),n.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===G.get(e,s)&&S.event.add(e,s,Se)}S.event={global:{},add:function(t,e,i,n,s){var o,r,a,l,d,c,u,p,h,f,m,g=G.get(t);if(g)for(i.handler&&(i=(o=i).handler,s=o.selector),s&&S.find.matchesSelector(se,s),i.guid||(i.guid=S.guid++),(l=g.events)||(l=g.events={}),(r=g.handle)||(r=g.handle=function(e){return void 0!==S&&S.event.triggered!==e.type?S.event.dispatch.apply(t,arguments):void 0}),d=(e=(e||"").match(q)||[""]).length;d--;)h=m=(a=Te.exec(e[d])||[])[1],f=(a[2]||"").split(".").sort(),h&&(u=S.event.special[h]||{},h=(s?u.delegateType:u.bindType)||h,u=S.event.special[h]||{},c=S.extend({type:h,origType:m,data:n,handler:i,guid:i.guid,selector:s,needsContext:s&&S.expr.match.needsContext.test(s),namespace:f.join(".")},o),(p=l[h])||((p=l[h]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(t,n,f,r)||t.addEventListener&&t.addEventListener(h,r)),u.add&&(u.add.call(t,c),c.handler.guid||(c.handler.guid=i.guid)),s?p.splice(p.delegateCount++,0,c):p.push(c),S.event.global[h]=!0)},remove:function(e,t,i,n,s){var o,r,a,l,d,c,u,p,h,f,m,g=G.hasData(e)&&G.get(e);if(g&&(l=g.events)){for(d=(t=(t||"").match(q)||[""]).length;d--;)if(h=m=(a=Te.exec(t[d])||[])[1],f=(a[2]||"").split(".").sort(),h){for(u=S.event.special[h]||{},p=l[h=(n?u.delegateType:u.bindType)||h]||[],a=a[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=o=p.length;o--;)c=p[o],!s&&m!==c.origType||i&&i.guid!==c.guid||a&&!a.test(c.namespace)||n&&n!==c.selector&&("**"!==n||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,u.remove&&u.remove.call(e,c));r&&!p.length&&(u.teardown&&!1!==u.teardown.call(e,f,g.handle)||S.removeEvent(e,h,g.handle),delete l[h])}else for(h in l)S.event.remove(e,h+t[d],i,n,!0);S.isEmptyObject(l)&&G.remove(e,"handle events")}},dispatch:function(e){var t,i,n,s,o,r,a=S.event.fix(e),l=new Array(arguments.length),d=(G.get(this,"events")||{})[a.type]||[],c=S.event.special[a.type]||{};for(l[0]=a,t=1;t<arguments.length;t++)l[t]=arguments[t];if(a.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,a)){for(r=S.event.handlers.call(this,a,d),t=0;(s=r[t++])&&!a.isPropagationStopped();)for(a.currentTarget=s.elem,i=0;(o=s.handlers[i++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!1!==o.namespace&&!a.rnamespace.test(o.namespace)||(a.handleObj=o,a.data=o.data,void 0!==(n=((S.event.special[o.origType]||{}).handle||o.handler).apply(s.elem,l))&&!1===(a.result=n)&&(a.preventDefault(),a.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,a),a.result}},handlers:function(e,t){var i,n,s,o,r,a=[],l=t.delegateCount,d=e.target;if(l&&d.nodeType&&!("click"===e.type&&1<=e.button))for(;d!==this;d=d.parentNode||this)if(1===d.nodeType&&("click"!==e.type||!0!==d.disabled)){for(o=[],r={},i=0;i<l;i++)void 0===r[s=(n=t[i]).selector+" "]&&(r[s]=n.needsContext?-1<S(s,this).index(d):S.find(s,this,null,[d]).length),r[s]&&o.push(n);o.length&&a.push({elem:d,handlers:o})}return d=this,l<t.length&&a.push({elem:d,handlers:t.slice(l)}),a},addProp:function(t,e){Object.defineProperty(S.Event.prototype,t,{enumerable:!0,configurable:!0,get:w(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[S.expando]?e:new S.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&_(t,"input")&&Ae(t,"click",Se),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&_(t,"input")&&Ae(t,"click"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&_(t,"input")&&G.get(t,"click")||_(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},S.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)},S.Event=function(e,t){if(!(this instanceof S.Event))return new S.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Se:De,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&S.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[S.expando]=!0},S.Event.prototype={constructor:S.Event,isDefaultPrevented:De,isPropagationStopped:De,isImmediatePropagationStopped:De,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Se,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Se,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Se,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},S.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&xe.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Ce.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},S.event.addProp),S.each({focus:"focusin",blur:"focusout"},function(e,t){S.event.special[e]={setup:function(){return Ae(this,e,$e),!1},trigger:function(){return Ae(this,e),!0},delegateType:t}}),S.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,s){S.event.special[e]={delegateType:s,bindType:s,handle:function(e){var t,i=e.relatedTarget,n=e.handleObj;return i&&(i===this||S.contains(this,i))||(e.type=n.origType,t=n.handler.apply(this,arguments),e.type=s),t}}}),S.fn.extend({on:function(e,t,i,n){return _e(this,e,t,i,n)},one:function(e,t,i,n){return _e(this,e,t,i,n,1)},off:function(e,t,i){var n,s;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,S(e.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(i=t,t=void 0),!1===i&&(i=De),this.each(function(){S.event.remove(this,e,i,t)});for(s in e)this.off(s,t,e[s]);return this}});var Me=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Ee=/<script|<style|<link/i,He=/checked\s*(?:[^=]|=\s*.checked.)/i,je=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Ne(e,t){return _(e,"table")&&_(11!==t.nodeType?t:t.firstChild,"tr")&&S(e).children("tbody")[0]||e}function Pe(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function qe(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Oe(e,t){var i,n,s,o,r,a,l,d;if(1===t.nodeType){if(G.hasData(e)&&(o=G.access(e),r=G.set(t,o),d=o.events))for(s in delete r.handle,r.events={},d)for(i=0,n=d[s].length;i<n;i++)S.event.add(t,s,d[s][i]);Q.hasData(e)&&(a=Q.access(e),l=S.extend({},a),Q.set(t,l))}}function Le(i,n,s,o){n=g.apply([],n);var e,t,r,a,l,d,c=0,u=i.length,p=u-1,h=n[0],f=w(h);if(f||1<u&&"string"==typeof h&&!y.checkClone&&He.test(h))return i.each(function(e){var t=i.eq(e);f&&(n[0]=h.call(this,e,t.html())),Le(t,n,s,o)});if(u&&(t=(e=ke(n,i[0].ownerDocument,!1,i,o)).firstChild,1===e.childNodes.length&&(e=t),t||o)){for(a=(r=S.map(ge(e,"script"),Pe)).length;c<u;c++)l=e,c!==p&&(l=S.clone(l,!0,!0),a&&S.merge(r,ge(l,"script"))),s.call(i[c],l,c);if(a)for(d=r[r.length-1].ownerDocument,S.map(r,qe),c=0;c<a;c++)l=r[c],fe.test(l.type||"")&&!G.access(l,"globalEval")&&S.contains(d,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?S._evalUrl&&!l.noModule&&S._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")}):b(l.textContent.replace(je,""),l,d))}return i}function Ie(e,t,i){for(var n,s=t?S.filter(t,e):e,o=0;null!=(n=s[o]);o++)i||1!==n.nodeType||S.cleanData(ge(n)),n.parentNode&&(i&&oe(n)&&ve(ge(n,"script")),n.parentNode.removeChild(n));return e}S.extend({htmlPrefilter:function(e){return e.replace(Me,"<$1></$2>")},clone:function(e,t,i){var n,s,o,r,a,l,d,c=e.cloneNode(!0),u=oe(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||S.isXMLDoc(e)))for(r=ge(c),n=0,s=(o=ge(e)).length;n<s;n++)a=o[n],l=r[n],void 0,"input"===(d=l.nodeName.toLowerCase())&&pe.test(a.type)?l.checked=a.checked:"input"!==d&&"textarea"!==d||(l.defaultValue=a.defaultValue);if(t)if(i)for(o=o||ge(e),r=r||ge(c),n=0,s=o.length;n<s;n++)Oe(o[n],r[n]);else Oe(e,c);return 0<(r=ge(c,"script")).length&&ve(r,!u&&ge(e,"script")),c},cleanData:function(e){for(var t,i,n,s=S.event.special,o=0;void 0!==(i=e[o]);o++)if(X(i)){if(t=i[G.expando]){if(t.events)for(n in t.events)s[n]?S.event.remove(i,n):S.removeEvent(i,n,t.handle);i[G.expando]=void 0}i[Q.expando]&&(i[Q.expando]=void 0)}}}),S.fn.extend({detach:function(e){return Ie(this,e,!0)},remove:function(e){return Ie(this,e)},text:function(e){return z(this,function(e){return void 0===e?S.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Le(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Ne(this,e).appendChild(e)})},prepend:function(){return Le(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Ne(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return Le(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Le(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(S.cleanData(ge(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return S.clone(this,e,t)})},html:function(e){return z(this,function(e){var t=this[0]||{},i=0,n=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Ee.test(e)&&!me[(he.exec(e)||["",""])[1].toLowerCase()]){e=S.htmlPrefilter(e);try{for(;i<n;i++)1===(t=this[i]||{}).nodeType&&(S.cleanData(ge(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var i=[];return Le(this,arguments,function(e){var t=this.parentNode;S.inArray(this,i)<0&&(S.cleanData(ge(this)),t&&t.replaceChild(e,this))},i)}}),S.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,r){S.fn[e]=function(e){for(var t,i=[],n=S(e),s=n.length-1,o=0;o<=s;o++)t=o===s?this:this.clone(!0),S(n[o])[r](t),l.apply(i,t.get());return this.pushStack(i)}});var Re,Fe,Be,ze,We,Ue,Ve,Ye=new RegExp("^("+te+")(?!px)[a-z%]+$","i"),Xe=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=C),t.getComputedStyle(e)},Ke=new RegExp(ne.join("|"),"i");function Ge(){if(Ve){Ue.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",Ve.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",se.appendChild(Ue).appendChild(Ve);var e=C.getComputedStyle(Ve);Re="1%"!==e.top,We=12===Qe(e.marginLeft),Ve.style.right="60%",ze=36===Qe(e.right),Fe=36===Qe(e.width),Ve.style.position="absolute",Be=12===Qe(Ve.offsetWidth/3),se.removeChild(Ue),Ve=null}}function Qe(e){return Math.round(parseFloat(e))}function Je(e,t,i){var n,s,o,r,a=e.style;return(i=i||Xe(e))&&(""!==(r=i.getPropertyValue(t)||i[t])||oe(e)||(r=S.style(e,t)),!y.pixelBoxStyles()&&Ye.test(r)&&Ke.test(t)&&(n=a.width,s=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=r,r=i.width,a.width=n,a.minWidth=s,a.maxWidth=o)),void 0!==r?r+"":r}function Ze(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}Ue=T.createElement("div"),(Ve=T.createElement("div")).style&&(Ve.style.backgroundClip="content-box",Ve.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===Ve.style.backgroundClip,S.extend(y,{boxSizingReliable:function(){return Ge(),Fe},pixelBoxStyles:function(){return Ge(),ze},pixelPosition:function(){return Ge(),Re},reliableMarginLeft:function(){return Ge(),We},scrollboxSize:function(){return Ge(),Be}}));var et=["Webkit","Moz","ms"],tt=T.createElement("div").style,it={};function nt(e){var t=S.cssProps[e]||it[e];return t||(e in tt?e:it[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),i=et.length;i--;)if((e=et[i]+t)in tt)return e}(e)||e)}var st=/^(none|table(?!-c[ea]).+)/,ot=/^--/,rt={position:"absolute",visibility:"hidden",display:"block"},at={letterSpacing:"0",fontWeight:"400"};function lt(e,t,i){var n=ie.exec(t);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):t}function dt(e,t,i,n,s,o){var r="width"===t?1:0,a=0,l=0;if(i===(n?"border":"content"))return 0;for(;r<4;r+=2)"margin"===i&&(l+=S.css(e,i+ne[r],!0,s)),n?("content"===i&&(l-=S.css(e,"padding"+ne[r],!0,s)),"margin"!==i&&(l-=S.css(e,"border"+ne[r]+"Width",!0,s))):(l+=S.css(e,"padding"+ne[r],!0,s),"padding"!==i?l+=S.css(e,"border"+ne[r]+"Width",!0,s):a+=S.css(e,"border"+ne[r]+"Width",!0,s));return!n&&0<=o&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-o-l-a-.5))||0),l}function ct(e,t,i){var n=Xe(e),s=(!y.boxSizingReliable()||i)&&"border-box"===S.css(e,"boxSizing",!1,n),o=s,r=Je(e,t,n),a="offset"+t[0].toUpperCase()+t.slice(1);if(Ye.test(r)){if(!i)return r;r="auto"}return(!y.boxSizingReliable()&&s||"auto"===r||!parseFloat(r)&&"inline"===S.css(e,"display",!1,n))&&e.getClientRects().length&&(s="border-box"===S.css(e,"boxSizing",!1,n),(o=a in e)&&(r=e[a])),(r=parseFloat(r)||0)+dt(e,t,i||(s?"border":"content"),o,n,r)+"px"}function ut(e,t,i,n,s){return new ut.prototype.init(e,t,i,n,s)}S.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=Je(e,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,i,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var s,o,r,a=Y(t),l=ot.test(t),d=e.style;if(l||(t=nt(a)),r=S.cssHooks[t]||S.cssHooks[a],void 0===i)return r&&"get"in r&&void 0!==(s=r.get(e,!1,n))?s:d[t];"string"===(o=typeof i)&&(s=ie.exec(i))&&s[1]&&(i=de(e,t,s),o="number"),null!=i&&i==i&&("number"!==o||l||(i+=s&&s[3]||(S.cssNumber[a]?"":"px")),y.clearCloneStyle||""!==i||0!==t.indexOf("background")||(d[t]="inherit"),r&&"set"in r&&void 0===(i=r.set(e,i,n))||(l?d.setProperty(t,i):d[t]=i))}},css:function(e,t,i,n){var s,o,r,a=Y(t);return ot.test(t)||(t=nt(a)),(r=S.cssHooks[t]||S.cssHooks[a])&&"get"in r&&(s=r.get(e,!0,i)),void 0===s&&(s=Je(e,t,n)),"normal"===s&&t in at&&(s=at[t]),""===i||i?(o=parseFloat(s),!0===i||isFinite(o)?o||0:s):s}}),S.each(["height","width"],function(e,l){S.cssHooks[l]={get:function(e,t,i){if(t)return!st.test(S.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?ct(e,l,i):ae(e,rt,function(){return ct(e,l,i)})},set:function(e,t,i){var n,s=Xe(e),o=!y.scrollboxSize()&&"absolute"===s.position,r=(o||i)&&"border-box"===S.css(e,"boxSizing",!1,s),a=i?dt(e,l,i,r,s):0;return r&&o&&(a-=Math.ceil(e["offset"+l[0].toUpperCase()+l.slice(1)]-parseFloat(s[l])-dt(e,l,"border",!1,s)-.5)),a&&(n=ie.exec(t))&&"px"!==(n[3]||"px")&&(e.style[l]=t,t=S.css(e,l)),lt(0,t,a)}}}),S.cssHooks.marginLeft=Ze(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Je(e,"marginLeft"))||e.getBoundingClientRect().left-ae(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),S.each({margin:"",padding:"",border:"Width"},function(s,o){S.cssHooks[s+o]={expand:function(e){for(var t=0,i={},n="string"==typeof e?e.split(" "):[e];t<4;t++)i[s+ne[t]+o]=n[t]||n[t-2]||n[0];return i}},"margin"!==s&&(S.cssHooks[s+o].set=lt)}),S.fn.extend({css:function(e,t){return z(this,function(e,t,i){var n,s,o={},r=0;if(Array.isArray(t)){for(n=Xe(e),s=t.length;r<s;r++)o[t[r]]=S.css(e,t[r],!1,n);return o}return void 0!==i?S.style(e,t,i):S.css(e,t)},e,t,1<arguments.length)}}),((S.Tween=ut).prototype={constructor:ut,init:function(e,t,i,n,s,o){this.elem=e,this.prop=i,this.easing=s||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=n,this.unit=o||(S.cssNumber[i]?"":"px")},cur:function(){var e=ut.propHooks[this.prop];return e&&e.get?e.get(this):ut.propHooks._default.get(this)},run:function(e){var t,i=ut.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):ut.propHooks._default.set(this),this}}).init.prototype=ut.prototype,(ut.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=S.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){S.fx.step[e.prop]?S.fx.step[e.prop](e):1!==e.elem.nodeType||!S.cssHooks[e.prop]&&null==e.elem.style[nt(e.prop)]?e.elem[e.prop]=e.now:S.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=ut.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},S.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},S.fx=ut.prototype.init,S.fx.step={};var pt,ht,ft,mt,gt=/^(?:toggle|show|hide)$/,vt=/queueHooks$/;function yt(){ht&&(!1===T.hidden&&C.requestAnimationFrame?C.requestAnimationFrame(yt):C.setTimeout(yt,S.fx.interval),S.fx.tick())}function wt(){return C.setTimeout(function(){pt=void 0}),pt=Date.now()}function bt(e,t){var i,n=0,s={height:e};for(t=t?1:0;n<4;n+=2-t)s["margin"+(i=ne[n])]=s["padding"+i]=e;return t&&(s.opacity=s.width=e),s}function kt(e,t,i){for(var n,s=(xt.tweeners[t]||[]).concat(xt.tweeners["*"]),o=0,r=s.length;o<r;o++)if(n=s[o].call(i,t,e))return n}function xt(o,e,t){var i,r,n=0,s=xt.prefilters.length,a=S.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=pt||wt(),t=Math.max(0,d.startTime+d.duration-e),i=1-(t/d.duration||0),n=0,s=d.tweens.length;n<s;n++)d.tweens[n].run(i);return a.notifyWith(o,[d,i,t]),i<1&&s?t:(s||a.notifyWith(o,[d,1,0]),a.resolveWith(o,[d]),!1)},d=a.promise({elem:o,props:S.extend({},e),opts:S.extend(!0,{specialEasing:{},easing:S.easing._default},t),originalProperties:e,originalOptions:t,startTime:pt||wt(),duration:t.duration,tweens:[],createTween:function(e,t){var i=S.Tween(o,d.opts,e,t,d.opts.specialEasing[e]||d.opts.easing);return d.tweens.push(i),i},stop:function(e){var t=0,i=e?d.tweens.length:0;if(r)return this;for(r=!0;t<i;t++)d.tweens[t].run(1);return e?(a.notifyWith(o,[d,1,0]),a.resolveWith(o,[d,e])):a.rejectWith(o,[d,e]),this}}),c=d.props;for(!function(e,t){var i,n,s,o,r;for(i in e)if(s=t[n=Y(i)],o=e[i],Array.isArray(o)&&(s=o[1],o=e[i]=o[0]),i!==n&&(e[n]=o,delete e[i]),(r=S.cssHooks[n])&&"expand"in r)for(i in o=r.expand(o),delete e[n],o)i in e||(e[i]=o[i],t[i]=s);else t[n]=s}(c,d.opts.specialEasing);n<s;n++)if(i=xt.prefilters[n].call(d,o,c,d.opts))return w(i.stop)&&(S._queueHooks(d.elem,d.opts.queue).stop=i.stop.bind(i)),i;return S.map(c,kt,d),w(d.opts.start)&&d.opts.start.call(o,d),d.progress(d.opts.progress).done(d.opts.done,d.opts.complete).fail(d.opts.fail).always(d.opts.always),S.fx.timer(S.extend(l,{elem:o,anim:d,queue:d.opts.queue})),d}S.Animation=S.extend(xt,{tweeners:{"*":[function(e,t){var i=this.createTween(e,t);return de(i.elem,e,ie.exec(t),i),i}]},tweener:function(e,t){for(var i,n=0,s=(e=w(e)?(t=e,["*"]):e.match(q)).length;n<s;n++)i=e[n],xt.tweeners[i]=xt.tweeners[i]||[],xt.tweeners[i].unshift(t)},prefilters:[function(e,t,i){var n,s,o,r,a,l,d,c,u="width"in t||"height"in t,p=this,h={},f=e.style,m=e.nodeType&&le(e),g=G.get(e,"fxshow");for(n in i.queue||(null==(r=S._queueHooks(e,"fx")).unqueued&&(r.unqueued=0,a=r.empty.fire,r.empty.fire=function(){r.unqueued||a()}),r.unqueued++,p.always(function(){p.always(function(){r.unqueued--,S.queue(e,"fx").length||r.empty.fire()})})),t)if(s=t[n],gt.test(s)){if(delete t[n],o=o||"toggle"===s,s===(m?"hide":"show")){if("show"!==s||!g||void 0===g[n])continue;m=!0}h[n]=g&&g[n]||S.style(e,n)}if((l=!S.isEmptyObject(t))||!S.isEmptyObject(h))for(n in u&&1===e.nodeType&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],null==(d=g&&g.display)&&(d=G.get(e,"display")),"none"===(c=S.css(e,"display"))&&(d?c=d:(ue([e],!0),d=e.style.display||d,c=S.css(e,"display"),ue([e]))),("inline"===c||"inline-block"===c&&null!=d)&&"none"===S.css(e,"float")&&(l||(p.done(function(){f.display=d}),null==d&&(c=f.display,d="none"===c?"":c)),f.display="inline-block")),i.overflow&&(f.overflow="hidden",p.always(function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]})),l=!1,h)l||(g?"hidden"in g&&(m=g.hidden):g=G.access(e,"fxshow",{display:d}),o&&(g.hidden=!m),m&&ue([e],!0),p.done(function(){for(n in m||ue([e]),G.remove(e,"fxshow"),h)S.style(e,n,h[n])})),l=kt(m?g[n]:0,n,p),n in g||(g[n]=l.start,m&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?xt.prefilters.unshift(e):xt.prefilters.push(e)}}),S.speed=function(e,t,i){var n=e&&"object"==typeof e?S.extend({},e):{complete:i||!i&&t||w(e)&&e,duration:e,easing:i&&t||t&&!w(t)&&t};return S.fx.off?n.duration=0:"number"!=typeof n.duration&&(n.duration in S.fx.speeds?n.duration=S.fx.speeds[n.duration]:n.duration=S.fx.speeds._default),null!=n.queue&&!0!==n.queue||(n.queue="fx"),n.old=n.complete,n.complete=function(){w(n.old)&&n.old.call(this),n.queue&&S.dequeue(this,n.queue)},n},S.fn.extend({fadeTo:function(e,t,i,n){return this.filter(le).css("opacity",0).show().end().animate({opacity:t},e,i,n)},animate:function(t,e,i,n){function s(){var e=xt(this,S.extend({},t),r);(o||G.get(this,"finish"))&&e.stop(!0)}var o=S.isEmptyObject(t),r=S.speed(e,i,n);return s.finish=s,o||!1===r.queue?this.each(s):this.queue(r.queue,s)},stop:function(s,e,o){function r(e){var t=e.stop;delete e.stop,t(o)}return"string"!=typeof s&&(o=e,e=s,s=void 0),e&&!1!==s&&this.queue(s||"fx",[]),this.each(function(){var e=!0,t=null!=s&&s+"queueHooks",i=S.timers,n=G.get(this);if(t)n[t]&&n[t].stop&&r(n[t]);else for(t in n)n[t]&&n[t].stop&&vt.test(t)&&r(n[t]);for(t=i.length;t--;)i[t].elem!==this||null!=s&&i[t].queue!==s||(i[t].anim.stop(o),e=!1,i.splice(t,1));!e&&o||S.dequeue(this,s)})},finish:function(r){return!1!==r&&(r=r||"fx"),this.each(function(){var e,t=G.get(this),i=t[r+"queue"],n=t[r+"queueHooks"],s=S.timers,o=i?i.length:0;for(t.finish=!0,S.queue(this,r,[]),n&&n.stop&&n.stop.call(this,!0),e=s.length;e--;)s[e].elem===this&&s[e].queue===r&&(s[e].anim.stop(!0),s.splice(e,1));for(e=0;e<o;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete t.finish})}}),S.each(["toggle","show","hide"],function(e,n){var s=S.fn[n];S.fn[n]=function(e,t,i){return null==e||"boolean"==typeof e?s.apply(this,arguments):this.animate(bt(n,!0),e,t,i)}}),S.each({slideDown:bt("show"),slideUp:bt("hide"),slideToggle:bt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,n){S.fn[e]=function(e,t,i){return this.animate(n,e,t,i)}}),S.timers=[],S.fx.tick=function(){var e,t=0,i=S.timers;for(pt=Date.now();t<i.length;t++)(e=i[t])()||i[t]!==e||i.splice(t--,1);i.length||S.fx.stop(),pt=void 0},S.fx.timer=function(e){S.timers.push(e),S.fx.start()},S.fx.interval=13,S.fx.start=function(){ht||(ht=!0,yt())},S.fx.stop=function(){ht=null},S.fx.speeds={slow:600,fast:200,_default:400},S.fn.delay=function(n,e){return n=S.fx&&S.fx.speeds[n]||n,e=e||"fx",this.queue(e,function(e,t){var i=C.setTimeout(e,n);t.stop=function(){C.clearTimeout(i)}})},ft=T.createElement("input"),mt=T.createElement("select").appendChild(T.createElement("option")),ft.type="checkbox",y.checkOn=""!==ft.value,y.optSelected=mt.selected,(ft=T.createElement("input")).value="t",ft.type="radio",y.radioValue="t"===ft.value;var Ct,Tt=S.expr.attrHandle;S.fn.extend({attr:function(e,t){return z(this,S.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){S.removeAttr(this,e)})}}),S.extend({attr:function(e,t,i){var n,s,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return void 0===e.getAttribute?S.prop(e,t,i):(1===o&&S.isXMLDoc(e)||(s=S.attrHooks[t.toLowerCase()]||(S.expr.match.bool.test(t)?Ct:void 0)),void 0!==i?null===i?void S.removeAttr(e,t):s&&"set"in s&&void 0!==(n=s.set(e,i,t))?n:(e.setAttribute(t,i+""),i):s&&"get"in s&&null!==(n=s.get(e,t))?n:null==(n=S.find.attr(e,t))?void 0:n)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&_(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,n=0,s=t&&t.match(q);if(s&&1===e.nodeType)for(;i=s[n++];)e.removeAttribute(i)}}),Ct={set:function(e,t,i){return!1===t?S.removeAttr(e,i):e.setAttribute(i,i),i}},S.each(S.expr.match.bool.source.match(/\w+/g),function(e,t){var r=Tt[t]||S.find.attr;Tt[t]=function(e,t,i){var n,s,o=t.toLowerCase();return i||(s=Tt[o],Tt[o]=n,n=null!=r(e,t,i)?o:null,Tt[o]=s),n}});var St=/^(?:input|select|textarea|button)$/i,Dt=/^(?:a|area)$/i;function $t(e){return(e.match(q)||[]).join(" ")}function _t(e){return e.getAttribute&&e.getAttribute("class")||""}function At(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(q)||[]}S.fn.extend({prop:function(e,t){return z(this,S.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[S.propFix[e]||e]})}}),S.extend({prop:function(e,t,i){var n,s,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&S.isXMLDoc(e)||(t=S.propFix[t]||t,s=S.propHooks[t]),void 0!==i?s&&"set"in s&&void 0!==(n=s.set(e,i,t))?n:e[t]=i:s&&"get"in s&&null!==(n=s.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=S.find.attr(e,"tabindex");return t?parseInt(t,10):St.test(e.nodeName)||Dt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),y.optSelected||(S.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),S.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){S.propFix[this.toLowerCase()]=this}),S.fn.extend({addClass:function(t){var e,i,n,s,o,r,a,l=0;if(w(t))return this.each(function(e){S(this).addClass(t.call(this,e,_t(this)))});if((e=At(t)).length)for(;i=this[l++];)if(s=_t(i),n=1===i.nodeType&&" "+$t(s)+" "){for(r=0;o=e[r++];)n.indexOf(" "+o+" ")<0&&(n+=o+" ");s!==(a=$t(n))&&i.setAttribute("class",a)}return this},removeClass:function(t){var e,i,n,s,o,r,a,l=0;if(w(t))return this.each(function(e){S(this).removeClass(t.call(this,e,_t(this)))});if(!arguments.length)return this.attr("class","");if((e=At(t)).length)for(;i=this[l++];)if(s=_t(i),n=1===i.nodeType&&" "+$t(s)+" "){for(r=0;o=e[r++];)for(;-1<n.indexOf(" "+o+" ");)n=n.replace(" "+o+" "," ");s!==(a=$t(n))&&i.setAttribute("class",a)}return this},toggleClass:function(s,t){var o=typeof s,r="string"==o||Array.isArray(s);return"boolean"==typeof t&&r?t?this.addClass(s):this.removeClass(s):w(s)?this.each(function(e){S(this).toggleClass(s.call(this,e,_t(this),t),t)}):this.each(function(){var e,t,i,n;if(r)for(t=0,i=S(this),n=At(s);e=n[t++];)i.hasClass(e)?i.removeClass(e):i.addClass(e);else void 0!==s&&"boolean"!=o||((e=_t(this))&&G.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===s?"":G.get(this,"__className__")||""))})},hasClass:function(e){var t,i,n=0;for(t=" "+e+" ";i=this[n++];)if(1===i.nodeType&&-1<(" "+$t(_t(i))+" ").indexOf(t))return!0;return!1}});var Mt=/\r/g;S.fn.extend({val:function(i){var n,e,s,t=this[0];return arguments.length?(s=w(i),this.each(function(e){var t;1===this.nodeType&&(null==(t=s?i.call(this,e,S(this).val()):i)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=S.map(t,function(e){return null==e?"":e+""})),(n=S.valHooks[this.type]||S.valHooks[this.nodeName.toLowerCase()])&&"set"in n&&void 0!==n.set(this,t,"value")||(this.value=t))})):t?(n=S.valHooks[t.type]||S.valHooks[t.nodeName.toLowerCase()])&&"get"in n&&void 0!==(e=n.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(Mt,""):null==e?"":e:void 0}}),S.extend({valHooks:{option:{get:function(e){var t=S.find.attr(e,"value");return null!=t?t:$t(S.text(e))}},select:{get:function(e){var t,i,n,s=e.options,o=e.selectedIndex,r="select-one"===e.type,a=r?null:[],l=r?o+1:s.length;for(n=o<0?l:r?o:0;n<l;n++)if(((i=s[n]).selected||n===o)&&!i.disabled&&(!i.parentNode.disabled||!_(i.parentNode,"optgroup"))){if(t=S(i).val(),r)return t;a.push(t)}return a},set:function(e,t){for(var i,n,s=e.options,o=S.makeArray(t),r=s.length;r--;)((n=s[r]).selected=-1<S.inArray(S.valHooks.option.get(n),o))&&(i=!0);return i||(e.selectedIndex=-1),o}}}}),S.each(["radio","checkbox"],function(){S.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<S.inArray(S(e).val(),t)}},y.checkOn||(S.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in C;function Et(e){e.stopPropagation()}var Ht=/^(?:focusinfocus|focusoutblur)$/;S.extend(S.event,{trigger:function(e,t,i,n){var s,o,r,a,l,d,c,u,p=[i||T],h=v.call(e,"type")?e.type:e,f=v.call(e,"namespace")?e.namespace.split("."):[];if(o=u=r=i=i||T,3!==i.nodeType&&8!==i.nodeType&&!Ht.test(h+S.event.triggered)&&(-1<h.indexOf(".")&&(h=(f=h.split(".")).shift(),f.sort()),l=h.indexOf(":")<0&&"on"+h,(e=e[S.expando]?e:new S.Event(h,"object"==typeof e&&e)).isTrigger=n?2:3,e.namespace=f.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),t=null==t?[e]:S.makeArray(t,[e]),c=S.event.special[h]||{},n||!c.trigger||!1!==c.trigger.apply(i,t))){if(!n&&!c.noBubble&&!m(i)){for(a=c.delegateType||h,Ht.test(a+h)||(o=o.parentNode);o;o=o.parentNode)p.push(o),r=o;r===(i.ownerDocument||T)&&p.push(r.defaultView||r.parentWindow||C)}for(s=0;(o=p[s++])&&!e.isPropagationStopped();)u=o,e.type=1<s?a:c.bindType||h,(d=(G.get(o,"events")||{})[e.type]&&G.get(o,"handle"))&&d.apply(o,t),(d=l&&o[l])&&d.apply&&X(o)&&(e.result=d.apply(o,t),!1===e.result&&e.preventDefault());return e.type=h,n||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!X(i)||l&&w(i[h])&&!m(i)&&((r=i[l])&&(i[l]=null),S.event.triggered=h,e.isPropagationStopped()&&u.addEventListener(h,Et),i[h](),e.isPropagationStopped()&&u.removeEventListener(h,Et),S.event.triggered=void 0,r&&(i[l]=r)),e.result}},simulate:function(e,t,i){var n=S.extend(new S.Event,i,{type:e,isSimulated:!0});S.event.trigger(n,null,t)}}),S.fn.extend({trigger:function(e,t){return this.each(function(){S.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];if(i)return S.event.trigger(e,t,i,!0)}}),y.focusin||S.each({focus:"focusin",blur:"focusout"},function(i,n){function s(e){S.event.simulate(n,e.target,S.event.fix(e))}S.event.special[n]={setup:function(){var e=this.ownerDocument||this,t=G.access(e,n);t||e.addEventListener(i,s,!0),G.access(e,n,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this,t=G.access(e,n)-1;t?G.access(e,n,t):(e.removeEventListener(i,s,!0),G.remove(e,n))}}});var jt=C.location,Nt=Date.now(),Pt=/\?/;S.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new C.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||S.error("Invalid XML: "+e),t};var qt=/\[\]$/,Ot=/\r?\n/g,Lt=/^(?:submit|button|image|reset|file)$/i,It=/^(?:input|select|textarea|keygen)/i;function Rt(i,e,n,s){var t;if(Array.isArray(e))S.each(e,function(e,t){n||qt.test(i)?s(i,t):Rt(i+"["+("object"==typeof t&&null!=t?e:"")+"]",t,n,s)});else if(n||"object"!==k(e))s(i,e);else for(t in e)Rt(i+"["+t+"]",e[t],n,s)}S.param=function(e,t){function i(e,t){var i=w(t)?t():t;s[s.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==i?"":i)}var n,s=[];if(null==e)return"";if(Array.isArray(e)||e.jquery&&!S.isPlainObject(e))S.each(e,function(){i(this.name,this.value)});else for(n in e)Rt(n,e[n],t,i);return s.join("&")},S.fn.extend({serialize:function(){return S.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=S.prop(this,"elements");return e?S.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!S(this).is(":disabled")&&It.test(this.nodeName)&&!Lt.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var i=S(this).val();return null==i?null:Array.isArray(i)?S.map(i,function(e){return{name:t.name,value:e.replace(Ot,"\r\n")}}):{name:t.name,value:i.replace(Ot,"\r\n")}}).get()}});var Ft=/%20/g,Bt=/#.*$/,zt=/([?&])_=[^&]*/,Wt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Ut=/^(?:GET|HEAD)$/,Vt=/^\/\//,Yt={},Xt={},Kt="*/".concat("*"),Gt=T.createElement("a");function Qt(o){return function(e,t){"string"!=typeof e&&(t=e,e="*");var i,n=0,s=e.toLowerCase().match(q)||[];if(w(t))for(;i=s[n++];)"+"===i[0]?(i=i.slice(1)||"*",(o[i]=o[i]||[]).unshift(t)):(o[i]=o[i]||[]).push(t)}}function Jt(t,s,o,r){var a={},l=t===Xt;function d(e){var n;return a[e]=!0,S.each(t[e]||[],function(e,t){var i=t(s,o,r);return"string"!=typeof i||l||a[i]?l?!(n=i):void 0:(s.dataTypes.unshift(i),d(i),!1)}),n}return d(s.dataTypes[0])||!a["*"]&&d("*")}function Zt(e,t){var i,n,s=S.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((s[i]?e:n=n||{})[i]=t[i]);return n&&S.extend(!0,e,n),e}Gt.href=jt.href,S.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:jt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(jt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Kt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":S.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Zt(Zt(e,S.ajaxSettings),t):Zt(S.ajaxSettings,e)},ajaxPrefilter:Qt(Yt),ajaxTransport:Qt(Xt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var c,u,p,i,h,n,f,m,s,o,g=S.ajaxSetup({},t),v=g.context||g,y=g.context&&(v.nodeType||v.jquery)?S(v):S.event,w=S.Deferred(),b=S.Callbacks("once memory"),k=g.statusCode||{},r={},a={},l="canceled",x={readyState:0,getResponseHeader:function(e){var t;if(f){if(!i)for(i={};t=Wt.exec(p);)i[t[1].toLowerCase()+" "]=(i[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=i[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return f?p:null},setRequestHeader:function(e,t){return null==f&&(e=a[e.toLowerCase()]=a[e.toLowerCase()]||e,r[e]=t),this},overrideMimeType:function(e){return null==f&&(g.mimeType=e),this},statusCode:function(e){var t;if(e)if(f)x.always(e[x.status]);else for(t in e)k[t]=[k[t],e[t]];return this},abort:function(e){var t=e||l;return c&&c.abort(t),d(0,t),this}};if(w.promise(x),g.url=((e||g.url||jt.href)+"").replace(Vt,jt.protocol+"//"),g.type=t.method||t.type||g.method||g.type,g.dataTypes=(g.dataType||"*").toLowerCase().match(q)||[""],null==g.crossDomain){n=T.createElement("a");try{n.href=g.url,n.href=n.href,g.crossDomain=Gt.protocol+"//"+Gt.host!=n.protocol+"//"+n.host}catch(e){g.crossDomain=!0}}if(g.data&&g.processData&&"string"!=typeof g.data&&(g.data=S.param(g.data,g.traditional)),Jt(Yt,g,t,x),f)return x;for(s in(m=S.event&&g.global)&&0==S.active++&&S.event.trigger("ajaxStart"),g.type=g.type.toUpperCase(),g.hasContent=!Ut.test(g.type),u=g.url.replace(Bt,""),g.hasContent?g.data&&g.processData&&0===(g.contentType||"").indexOf("application/x-www-form-urlencoded")&&(g.data=g.data.replace(Ft,"+")):(o=g.url.slice(u.length),g.data&&(g.processData||"string"==typeof g.data)&&(u+=(Pt.test(u)?"&":"?")+g.data,delete g.data),!1===g.cache&&(u=u.replace(zt,"$1"),o=(Pt.test(u)?"&":"?")+"_="+Nt+++o),g.url=u+o),g.ifModified&&(S.lastModified[u]&&x.setRequestHeader("If-Modified-Since",S.lastModified[u]),S.etag[u]&&x.setRequestHeader("If-None-Match",S.etag[u])),(g.data&&g.hasContent&&!1!==g.contentType||t.contentType)&&x.setRequestHeader("Content-Type",g.contentType),x.setRequestHeader("Accept",g.dataTypes[0]&&g.accepts[g.dataTypes[0]]?g.accepts[g.dataTypes[0]]+("*"!==g.dataTypes[0]?", "+Kt+"; q=0.01":""):g.accepts["*"]),g.headers)x.setRequestHeader(s,g.headers[s]);if(g.beforeSend&&(!1===g.beforeSend.call(v,x,g)||f))return x.abort();if(l="abort",b.add(g.complete),x.done(g.success),x.fail(g.error),c=Jt(Xt,g,t,x)){if(x.readyState=1,m&&y.trigger("ajaxSend",[x,g]),f)return x;g.async&&0<g.timeout&&(h=C.setTimeout(function(){x.abort("timeout")},g.timeout));try{f=!1,c.send(r,d)}catch(e){if(f)throw e;d(-1,e)}}else d(-1,"No Transport");function d(e,t,i,n){var s,o,r,a,l,d=t;f||(f=!0,h&&C.clearTimeout(h),c=void 0,p=n||"",x.readyState=0<e?4:0,s=200<=e&&e<300||304===e,i&&(a=function(e,t,i){for(var n,s,o,r,a=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=e.mimeType||t.getResponseHeader("Content-Type"));if(n)for(s in a)if(a[s]&&a[s].test(n)){l.unshift(s);break}if(l[0]in i)o=l[0];else{for(s in i){if(!l[0]||e.converters[s+" "+l[0]]){o=s;break}r=r||s}o=o||r}if(o)return o!==l[0]&&l.unshift(o),i[o]}(g,x,i)),a=function(e,t,i,n){var s,o,r,a,l,d={},c=e.dataTypes.slice();if(c[1])for(r in e.converters)d[r.toLowerCase()]=e.converters[r];for(o=c.shift();o;)if(e.responseFields[o]&&(i[e.responseFields[o]]=t),!l&&n&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(!(r=d[l+" "+o]||d["* "+o]))for(s in d)if((a=s.split(" "))[1]===o&&(r=d[l+" "+a[0]]||d["* "+a[0]])){!0===r?r=d[s]:!0!==d[s]&&(o=a[0],c.unshift(a[1]));break}if(!0!==r)if(r&&e.throws)t=r(t);else try{t=r(t)}catch(e){return{state:"parsererror",error:r?e:"No conversion from "+l+" to "+o}}}return{state:"success",data:t}}(g,a,x,s),s?(g.ifModified&&((l=x.getResponseHeader("Last-Modified"))&&(S.lastModified[u]=l),(l=x.getResponseHeader("etag"))&&(S.etag[u]=l)),204===e||"HEAD"===g.type?d="nocontent":304===e?d="notmodified":(d=a.state,o=a.data,s=!(r=a.error))):(r=d,!e&&d||(d="error",e<0&&(e=0))),x.status=e,x.statusText=(t||d)+"",s?w.resolveWith(v,[o,d,x]):w.rejectWith(v,[x,d,r]),x.statusCode(k),k=void 0,m&&y.trigger(s?"ajaxSuccess":"ajaxError",[x,g,s?o:r]),b.fireWith(v,[x,d]),m&&(y.trigger("ajaxComplete",[x,g]),--S.active||S.event.trigger("ajaxStop")))}return x},getJSON:function(e,t,i){return S.get(e,t,i,"json")},getScript:function(e,t){return S.get(e,void 0,t,"script")}}),S.each(["get","post"],function(e,s){S[s]=function(e,t,i,n){return w(t)&&(n=n||i,i=t,t=void 0),S.ajax(S.extend({url:e,type:s,dataType:n,data:t,success:i},S.isPlainObject(e)&&e))}}),S._evalUrl=function(e,t){return S.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){S.globalEval(e,t)}})},S.fn.extend({wrapAll:function(e){var t;return this[0]&&(w(e)&&(e=e.call(this[0])),t=S(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(i){return w(i)?this.each(function(e){S(this).wrapInner(i.call(this,e))}):this.each(function(){var e=S(this),t=e.contents();t.length?t.wrapAll(i):e.append(i)})},wrap:function(t){var i=w(t);return this.each(function(e){S(this).wrapAll(i?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){S(this).replaceWith(this.childNodes)}),this}}),S.expr.pseudos.hidden=function(e){return!S.expr.pseudos.visible(e)},S.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},S.ajaxSettings.xhr=function(){try{return new C.XMLHttpRequest}catch(e){}};var ei={0:200,1223:204},ti=S.ajaxSettings.xhr();y.cors=!!ti&&"withCredentials"in ti,y.ajax=ti=!!ti,S.ajaxTransport(function(s){var o,r;if(y.cors||ti&&!s.crossDomain)return{send:function(e,t){var i,n=s.xhr();if(n.open(s.type,s.url,s.async,s.username,s.password),s.xhrFields)for(i in s.xhrFields)n[i]=s.xhrFields[i];for(i in s.mimeType&&n.overrideMimeType&&n.overrideMimeType(s.mimeType),s.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)n.setRequestHeader(i,e[i]);o=function(e){return function(){o&&(o=r=n.onload=n.onerror=n.onabort=n.ontimeout=n.onreadystatechange=null,"abort"===e?n.abort():"error"===e?"number"!=typeof n.status?t(0,"error"):t(n.status,n.statusText):t(ei[n.status]||n.status,n.statusText,"text"!==(n.responseType||"text")||"string"!=typeof n.responseText?{binary:n.response}:{text:n.responseText},n.getAllResponseHeaders()))}},n.onload=o(),r=n.onerror=n.ontimeout=o("error"),void 0!==n.onabort?n.onabort=r:n.onreadystatechange=function(){4===n.readyState&&C.setTimeout(function(){o&&r()})},o=o("abort");try{n.send(s.hasContent&&s.data||null)}catch(e){if(o)throw e}},abort:function(){o&&o()}}}),S.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),S.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return S.globalEval(e),e}}}),S.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),S.ajaxTransport("script",function(i){var n,s;if(i.crossDomain||i.scriptAttrs)return{send:function(e,t){n=S("<script>").attr(i.scriptAttrs||{}).prop({charset:i.scriptCharset,src:i.url}).on("load error",s=function(e){n.remove(),s=null,e&&t("error"===e.type?404:200,e.type)}),T.head.appendChild(n[0])},abort:function(){s&&s()}}});var ii,ni=[],si=/(=)\?(?=&|$)|\?\?/;S.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=ni.pop()||S.expando+"_"+Nt++;return this[e]=!0,e}}),S.ajaxPrefilter("json jsonp",function(e,t,i){var n,s,o,r=!1!==e.jsonp&&(si.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&si.test(e.data)&&"data");if(r||"jsonp"===e.dataTypes[0])return n=e.jsonpCallback=w(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,r?e[r]=e[r].replace(si,"$1"+n):!1!==e.jsonp&&(e.url+=(Pt.test(e.url)?"&":"?")+e.jsonp+"="+n),e.converters["script json"]=function(){return o||S.error(n+" was not called"),o[0]},e.dataTypes[0]="json",s=C[n],C[n]=function(){o=arguments},i.always(function(){void 0===s?S(C).removeProp(n):C[n]=s,e[n]&&(e.jsonpCallback=t.jsonpCallback,ni.push(n)),o&&w(s)&&s(o[0]),o=s=void 0}),"script"}),y.createHTMLDocument=((ii=T.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===ii.childNodes.length),S.parseHTML=function(e,t,i){return"string"!=typeof e?[]:("boolean"==typeof t&&(i=t,t=!1),t||(y.createHTMLDocument?((n=(t=T.implementation.createHTMLDocument("")).createElement("base")).href=T.location.href,t.head.appendChild(n)):t=T),o=!i&&[],(s=A.exec(e))?[t.createElement(s[1])]:(s=ke([e],t,o),o&&o.length&&S(o).remove(),S.merge([],s.childNodes)));var n,s,o},S.fn.load=function(e,t,i){var n,s,o,r=this,a=e.indexOf(" ");return-1<a&&(n=$t(e.slice(a)),e=e.slice(0,a)),w(t)?(i=t,t=void 0):t&&"object"==typeof t&&(s="POST"),0<r.length&&S.ajax({url:e,type:s||"GET",dataType:"html",data:t}).done(function(e){o=arguments,r.html(n?S("<div>").append(S.parseHTML(e)).find(n):e)}).always(i&&function(e,t){r.each(function(){i.apply(this,o||[e.responseText,t,e])})}),this},S.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){S.fn[t]=function(e){return this.on(t,e)}}),S.expr.pseudos.animated=function(t){return S.grep(S.timers,function(e){return t===e.elem}).length},S.offset={setOffset:function(e,t,i){var n,s,o,r,a,l,d=S.css(e,"position"),c=S(e),u={};"static"===d&&(e.style.position="relative"),a=c.offset(),o=S.css(e,"top"),l=S.css(e,"left"),s=("absolute"===d||"fixed"===d)&&-1<(o+l).indexOf("auto")?(r=(n=c.position()).top,n.left):(r=parseFloat(o)||0,parseFloat(l)||0),w(t)&&(t=t.call(e,i,S.extend({},a))),null!=t.top&&(u.top=t.top-a.top+r),null!=t.left&&(u.left=t.left-a.left+s),"using"in t?t.using.call(e,u):c.css(u)}},S.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){S.offset.setOffset(this,t,e)});var e,i,n=this[0];return n?n.getClientRects().length?(e=n.getBoundingClientRect(),i=n.ownerDocument.defaultView,{top:e.top+i.pageYOffset,left:e.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,i,n=this[0],s={top:0,left:0};if("fixed"===S.css(n,"position"))t=n.getBoundingClientRect();else{for(t=this.offset(),i=n.ownerDocument,e=n.offsetParent||i.documentElement;e&&(e===i.body||e===i.documentElement)&&"static"===S.css(e,"position");)e=e.parentNode;e&&e!==n&&1===e.nodeType&&((s=S(e).offset()).top+=S.css(e,"borderTopWidth",!0),s.left+=S.css(e,"borderLeftWidth",!0))}return{top:t.top-s.top-S.css(n,"marginTop",!0),left:t.left-s.left-S.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===S.css(e,"position");)e=e.offsetParent;return e||se})}}),S.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,s){var o="pageYOffset"===s;S.fn[t]=function(e){return z(this,function(e,t,i){var n;if(m(e)?n=e:9===e.nodeType&&(n=e.defaultView),void 0===i)return n?n[s]:e[t];n?n.scrollTo(o?n.pageXOffset:i,o?i:n.pageYOffset):e[t]=i},t,e,arguments.length)}}),S.each(["top","left"],function(e,i){S.cssHooks[i]=Ze(y.pixelPosition,function(e,t){if(t)return t=Je(e,i),Ye.test(t)?S(e).position()[i]+"px":t})}),S.each({Height:"height",Width:"width"},function(r,a){S.each({padding:"inner"+r,content:a,"":"outer"+r},function(n,o){S.fn[o]=function(e,t){var i=arguments.length&&(n||"boolean"!=typeof e),s=n||(!0===e||!0===t?"margin":"border");return z(this,function(e,t,i){var n;return m(e)?0===o.indexOf("outer")?e["inner"+r]:e.document.documentElement["client"+r]:9===e.nodeType?(n=e.documentElement,Math.max(e.body["scroll"+r],n["scroll"+r],e.body["offset"+r],n["offset"+r],n["client"+r])):void 0===i?S.css(e,t,s):S.style(e,t,i,s)},a,i?e:void 0,i)}})}),S.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,i){S.fn[i]=function(e,t){return 0<arguments.length?this.on(i,null,e,t):this.trigger(i)}}),S.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),S.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,n){return this.on(t,e,i,n)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)}}),S.proxy=function(e,t){var i,n,s;if("string"==typeof t&&(i=e[t],t=e,e=i),w(e))return n=a.call(arguments,2),(s=function(){return e.apply(t||this,n.concat(a.call(arguments)))}).guid=e.guid=e.guid||S.guid++,s},S.holdReady=function(e){e?S.readyWait++:S.ready(!0)},S.isArray=Array.isArray,S.parseJSON=JSON.parse,S.nodeName=_,S.isFunction=w,S.isWindow=m,S.camelCase=Y,S.type=k,S.now=Date.now,S.isNumeric=function(e){var t=S.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},"function"==typeof define&&define.amd&&define("jquery",[],function(){return S});var oi=C.jQuery,ri=C.$;return S.noConflict=function(e){return C.$===S&&(C.$=ri),e&&C.jQuery===S&&(C.jQuery=oi),S},e||(C.jQuery=C.$=S),S}),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(d){"use strict";var s,r=window.Slick||{};(s=0,r=function(e,t){var i,n=this;n.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:d(e),appendDots:d(e),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return d('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},n.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},d.extend(n,n.initials),n.activeBreakpoint=null,n.animType=null,n.animProp=null,n.breakpoints=[],n.breakpointSettings=[],n.cssTransitions=!1,n.focussed=!1,n.interrupted=!1,n.hidden="hidden",n.paused=!0,n.positionProp=null,n.respondTo=null,n.rowCount=1,n.shouldClick=!0,n.$slider=d(e),n.$slidesCache=null,n.transformType=null,n.transitionType=null,n.visibilityChange="visibilitychange",n.windowWidth=0,n.windowTimer=null,i=d(e).data("slick")||{},n.options=d.extend({},n.defaults,t,i),n.currentSlide=n.options.initialSlide,n.originalSettings=n.options,void 0!==document.mozHidden?(n.hidden="mozHidden",n.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(n.hidden="webkitHidden",n.visibilityChange="webkitvisibilitychange"),n.autoPlay=d.proxy(n.autoPlay,n),n.autoPlayClear=d.proxy(n.autoPlayClear,n),n.autoPlayIterator=d.proxy(n.autoPlayIterator,n),n.changeSlide=d.proxy(n.changeSlide,n),n.clickHandler=d.proxy(n.clickHandler,n),n.selectHandler=d.proxy(n.selectHandler,n),n.setPosition=d.proxy(n.setPosition,n),n.swipeHandler=d.proxy(n.swipeHandler,n),n.dragHandler=d.proxy(n.dragHandler,n),n.keyHandler=d.proxy(n.keyHandler,n),n.instanceUid=s++,n.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,n.registerBreakpoints(),n.init(!0)}).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},r.prototype.addSlide=r.prototype.slickAdd=function(e,t,i){var n=this;if("boolean"==typeof t)i=t,t=null;else if(t<0||t>=n.slideCount)return!1;n.unload(),"number"==typeof t?0===t&&0===n.$slides.length?d(e).appendTo(n.$slideTrack):i?d(e).insertBefore(n.$slides.eq(t)):d(e).insertAfter(n.$slides.eq(t)):!0===i?d(e).prependTo(n.$slideTrack):d(e).appendTo(n.$slideTrack),n.$slides=n.$slideTrack.children(this.options.slide),n.$slideTrack.children(this.options.slide).detach(),n.$slideTrack.append(n.$slides),n.$slides.each(function(e,t){d(t).attr("data-slick-index",e)}),n.$slidesCache=n.$slides,n.reinit()},r.prototype.animateHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.animate({height:t},e.options.speed)}},r.prototype.animateSlide=function(e,t){var i={},n=this;n.animateHeight(),!0===n.options.rtl&&!1===n.options.vertical&&(e=-e),!1===n.transformsEnabled?!1===n.options.vertical?n.$slideTrack.animate({left:e},n.options.speed,n.options.easing,t):n.$slideTrack.animate({top:e},n.options.speed,n.options.easing,t):!1===n.cssTransitions?(!0===n.options.rtl&&(n.currentLeft=-n.currentLeft),d({animStart:n.currentLeft}).animate({animStart:e},{duration:n.options.speed,easing:n.options.easing,step:function(e){e=Math.ceil(e),!1===n.options.vertical?i[n.animType]="translate("+e+"px, 0px)":i[n.animType]="translate(0px,"+e+"px)",n.$slideTrack.css(i)},complete:function(){t&&t.call()}})):(n.applyTransition(),e=Math.ceil(e),!1===n.options.vertical?i[n.animType]="translate3d("+e+"px, 0px, 0px)":i[n.animType]="translate3d(0px,"+e+"px, 0px)",n.$slideTrack.css(i),t&&setTimeout(function(){n.disableTransition(),t.call()},n.options.speed))},r.prototype.getNavTarget=function(){var e=this.options.asNavFor;return e&&null!==e&&(e=d(e).not(this.$slider)),e},r.prototype.asNavFor=function(t){var e=this.getNavTarget();null!==e&&"object"==typeof e&&e.each(function(){var e=d(this).slick("getSlick");e.unslicked||e.slideHandler(t,!0)})},r.prototype.applyTransition=function(e){var t=this,i={};!1===t.options.fade?i[t.transitionType]=t.transformType+" "+t.options.speed+"ms "+t.options.cssEase:i[t.transitionType]="opacity "+t.options.speed+"ms "+t.options.cssEase,!1===t.options.fade?t.$slideTrack.css(i):t.$slides.eq(e).css(i)},r.prototype.autoPlay=function(){var e=this;e.autoPlayClear(),e.slideCount>e.options.slidesToShow&&(e.autoPlayTimer=setInterval(e.autoPlayIterator,e.options.autoplaySpeed))},r.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},r.prototype.autoPlayIterator=function(){var e=this,t=e.currentSlide+e.options.slidesToScroll;e.paused||e.interrupted||e.focussed||(!1===e.options.infinite&&(1===e.direction&&e.currentSlide+1===e.slideCount-1?e.direction=0:0===e.direction&&(t=e.currentSlide-e.options.slidesToScroll,e.currentSlide-1==0&&(e.direction=1))),e.slideHandler(t))},r.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=d(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=d(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},r.prototype.buildDots=function(){var e,t,i=this;if(!0===i.options.dots){for(i.$slider.addClass("slick-dotted"),t=d("<ul />").addClass(i.options.dotsClass),e=0;e<=i.getDotCount();e+=1)t.append(d("<li />").append(i.options.customPaging.call(this,i,e)));i.$dots=t.appendTo(i.options.appendDots),i.$dots.find("li").first().addClass("slick-active")}},r.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){d(t).attr("data-slick-index",e).data("originalStyling",d(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?d('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),d("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},r.prototype.buildRows=function(){var e,t,i,n,s,o,r,a=this;if(n=document.createDocumentFragment(),o=a.$slider.children(),1<a.options.rows){for(r=a.options.slidesPerRow*a.options.rows,s=Math.ceil(o.length/r),e=0;e<s;e++){var l=document.createElement("div");for(t=0;t<a.options.rows;t++){var d=document.createElement("div");for(i=0;i<a.options.slidesPerRow;i++){var c=e*r+(t*a.options.slidesPerRow+i);o.get(c)&&d.appendChild(o.get(c))}l.appendChild(d)}n.appendChild(l)}a.$slider.empty().append(n),a.$slider.children().children().children().css({width:100/a.options.slidesPerRow+"%",display:"inline-block"})}},r.prototype.checkResponsive=function(e,t){var i,n,s,o=this,r=!1,a=o.$slider.width(),l=window.innerWidth||d(window).width();if("window"===o.respondTo?s=l:"slider"===o.respondTo?s=a:"min"===o.respondTo&&(s=Math.min(l,a)),o.options.responsive&&o.options.responsive.length&&null!==o.options.responsive){for(i in n=null,o.breakpoints)o.breakpoints.hasOwnProperty(i)&&(!1===o.originalSettings.mobileFirst?s<o.breakpoints[i]&&(n=o.breakpoints[i]):s>o.breakpoints[i]&&(n=o.breakpoints[i]));null!==n?null!==o.activeBreakpoint?n===o.activeBreakpoint&&!t||(o.activeBreakpoint=n,"unslick"===o.breakpointSettings[n]?o.unslick(n):(o.options=d.extend({},o.originalSettings,o.breakpointSettings[n]),!0===e&&(o.currentSlide=o.options.initialSlide),o.refresh(e)),r=n):(o.activeBreakpoint=n,"unslick"===o.breakpointSettings[n]?o.unslick(n):(o.options=d.extend({},o.originalSettings,o.breakpointSettings[n]),!0===e&&(o.currentSlide=o.options.initialSlide),o.refresh(e)),r=n):null!==o.activeBreakpoint&&(o.activeBreakpoint=null,o.options=o.originalSettings,!0===e&&(o.currentSlide=o.options.initialSlide),o.refresh(e),r=n),e||!1===r||o.$slider.trigger("breakpoint",[o,r])}},r.prototype.changeSlide=function(e,t){var i,n,s=this,o=d(e.currentTarget);switch(o.is("a")&&e.preventDefault(),o.is("li")||(o=o.closest("li")),i=s.slideCount%s.options.slidesToScroll!=0?0:(s.slideCount-s.currentSlide)%s.options.slidesToScroll,e.data.message){case"previous":n=0==i?s.options.slidesToScroll:s.options.slidesToShow-i,s.slideCount>s.options.slidesToShow&&s.slideHandler(s.currentSlide-n,!1,t);break;case"next":n=0==i?s.options.slidesToScroll:i,s.slideCount>s.options.slidesToShow&&s.slideHandler(s.currentSlide+n,!1,t);break;case"index":var r=0===e.data.index?0:e.data.index||o.index()*s.options.slidesToScroll;s.slideHandler(s.checkNavigable(r),!1,t),o.children().trigger("focus");break;default:return}},r.prototype.checkNavigable=function(e){var t,i;if(i=0,e>(t=this.getNavigableIndexes())[t.length-1])e=t[t.length-1];else for(var n in t){if(e<t[n]){e=i;break}i=t[n]}return e},r.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(d("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",d.proxy(e.interrupt,e,!0)).off("mouseleave.slick",d.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),d(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().off("click.slick",e.selectHandler),d(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),d(window).off("resize.slick.slick-"+e.instanceUid,e.resize),d("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),d(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},r.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",d.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",d.proxy(e.interrupt,e,!1))},r.prototype.cleanUpRows=function(){var e;1<this.options.rows&&((e=this.$slides.children().children()).removeAttr("style"),this.$slider.empty().append(e))},r.prototype.clickHandler=function(e){!1===this.shouldClick&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},r.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),d(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){d(this).attr("style",d(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},r.prototype.disableTransition=function(e){var t={};t[this.transitionType]="",!1===this.options.fade?this.$slideTrack.css(t):this.$slides.eq(e).css(t)},r.prototype.fadeSlide=function(e,t){var i=this;!1===i.cssTransitions?(i.$slides.eq(e).css({zIndex:i.options.zIndex}),i.$slides.eq(e).animate({opacity:1},i.options.speed,i.options.easing,t)):(i.applyTransition(e),i.$slides.eq(e).css({opacity:1,zIndex:i.options.zIndex}),t&&setTimeout(function(){i.disableTransition(e),t.call()},i.options.speed))},r.prototype.fadeSlideOut=function(e){var t=this;!1===t.cssTransitions?t.$slides.eq(e).animate({opacity:0,zIndex:t.options.zIndex-2},t.options.speed,t.options.easing):(t.applyTransition(e),t.$slides.eq(e).css({opacity:0,zIndex:t.options.zIndex-2}))},r.prototype.filterSlides=r.prototype.slickFilter=function(e){var t=this;null!==e&&(t.$slidesCache=t.$slides,t.unload(),t.$slideTrack.children(this.options.slide).detach(),t.$slidesCache.filter(e).appendTo(t.$slideTrack),t.reinit())},r.prototype.focusHandler=function(){var i=this;i.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(e){e.stopImmediatePropagation();var t=d(this);setTimeout(function(){i.options.pauseOnFocus&&(i.focussed=t.is(":focus"),i.autoPlay())},0)})},r.prototype.getCurrent=r.prototype.slickCurrentSlide=function(){return this.currentSlide},r.prototype.getDotCount=function(){var e=this,t=0,i=0,n=0;if(!0===e.options.infinite)if(e.slideCount<=e.options.slidesToShow)++n;else for(;t<e.slideCount;)++n,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(!0===e.options.centerMode)n=e.slideCount;else if(e.options.asNavFor)for(;t<e.slideCount;)++n,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else n=1+Math.ceil((e.slideCount-e.options.slidesToShow)/e.options.slidesToScroll);return n-1},r.prototype.getLeft=function(e){var t,i,n,s,o=this,r=0;return o.slideOffset=0,i=o.$slides.first().outerHeight(!0),!0===o.options.infinite?(o.slideCount>o.options.slidesToShow&&(o.slideOffset=o.slideWidth*o.options.slidesToShow*-1,s=-1,!0===o.options.vertical&&!0===o.options.centerMode&&(2===o.options.slidesToShow?s=-1.5:1===o.options.slidesToShow&&(s=-2)),r=i*o.options.slidesToShow*s),o.slideCount%o.options.slidesToScroll!=0&&e+o.options.slidesToScroll>o.slideCount&&o.slideCount>o.options.slidesToShow&&(r=e>o.slideCount?(o.slideOffset=(o.options.slidesToShow-(e-o.slideCount))*o.slideWidth*-1,(o.options.slidesToShow-(e-o.slideCount))*i*-1):(o.slideOffset=o.slideCount%o.options.slidesToScroll*o.slideWidth*-1,o.slideCount%o.options.slidesToScroll*i*-1))):e+o.options.slidesToShow>o.slideCount&&(o.slideOffset=(e+o.options.slidesToShow-o.slideCount)*o.slideWidth,r=(e+o.options.slidesToShow-o.slideCount)*i),o.slideCount<=o.options.slidesToShow&&(r=o.slideOffset=0),!0===o.options.centerMode&&o.slideCount<=o.options.slidesToShow?o.slideOffset=o.slideWidth*Math.floor(o.options.slidesToShow)/2-o.slideWidth*o.slideCount/2:!0===o.options.centerMode&&!0===o.options.infinite?o.slideOffset+=o.slideWidth*Math.floor(o.options.slidesToShow/2)-o.slideWidth:!0===o.options.centerMode&&(o.slideOffset=0,o.slideOffset+=o.slideWidth*Math.floor(o.options.slidesToShow/2)),t=!1===o.options.vertical?e*o.slideWidth*-1+o.slideOffset:e*i*-1+r,!0===o.options.variableWidth&&(n=o.slideCount<=o.options.slidesToShow||!1===o.options.infinite?o.$slideTrack.children(".slick-slide").eq(e):o.$slideTrack.children(".slick-slide").eq(e+o.options.slidesToShow),t=!0===o.options.rtl?n[0]?-1*(o.$slideTrack.width()-n[0].offsetLeft-n.width()):0:n[0]?-1*n[0].offsetLeft:0,!0===o.options.centerMode&&(n=o.slideCount<=o.options.slidesToShow||!1===o.options.infinite?o.$slideTrack.children(".slick-slide").eq(e):o.$slideTrack.children(".slick-slide").eq(e+o.options.slidesToShow+1),t=!0===o.options.rtl?n[0]?-1*(o.$slideTrack.width()-n[0].offsetLeft-n.width()):0:n[0]?-1*n[0].offsetLeft:0,t+=(o.$list.width()-n.outerWidth())/2)),t},r.prototype.getOption=r.prototype.slickGetOption=function(e){return this.options[e]},r.prototype.getNavigableIndexes=function(){var e,t=this,i=0,n=0,s=[];for(e=!1===t.options.infinite?t.slideCount:(i=-1*t.options.slidesToScroll,n=-1*t.options.slidesToScroll,2*t.slideCount);i<e;)s.push(i),i=n+t.options.slidesToScroll,n+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;return s},r.prototype.getSlick=function(){return this},r.prototype.getSlideCount=function(){var i,n,s=this;return n=!0===s.options.centerMode?s.slideWidth*Math.floor(s.options.slidesToShow/2):0,!0===s.options.swipeToSlide?(s.$slideTrack.find(".slick-slide").each(function(e,t){if(t.offsetLeft-n+d(t).outerWidth()/2>-1*s.swipeLeft)return i=t,!1}),Math.abs(d(i).attr("data-slick-index")-s.currentSlide)||1):s.options.slidesToScroll},r.prototype.goTo=r.prototype.slickGoTo=function(e,t){this.changeSlide({data:{message:"index",index:parseInt(e)}},t)},r.prototype.init=function(e){var t=this;d(t.$slider).hasClass("slick-initialized")||(d(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},r.prototype.initADA=function(){var i=this,n=Math.ceil(i.slideCount/i.options.slidesToShow),s=i.getNavigableIndexes().filter(function(e){return 0<=e&&e<i.slideCount});i.$slides.add(i.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==i.$dots&&(i.$slides.not(i.$slideTrack.find(".slick-cloned")).each(function(e){var t=s.indexOf(e);d(this).attr({role:"tabpanel",id:"slick-slide"+i.instanceUid+e,tabindex:-1}),-1!==t&&d(this).attr({"aria-describedby":"slick-slide-control"+i.instanceUid+t})}),i.$dots.attr("role","tablist").find("li").each(function(e){var t=s[e];d(this).attr({role:"presentation"}),d(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+i.instanceUid+e,"aria-controls":"slick-slide"+i.instanceUid+t,"aria-label":e+1+" of "+n,"aria-selected":null,tabindex:"-1"})}).eq(i.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var e=i.currentSlide,t=e+i.options.slidesToShow;e<t;e++)i.$slides.eq(e).attr("tabindex",0);i.activateADA()},r.prototype.initArrowEvents=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.off("click.slick").on("click.slick",{message:"next"},e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow.on("keydown.slick",e.keyHandler),e.$nextArrow.on("keydown.slick",e.keyHandler)))},r.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&(d("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&d("li",e.$dots).on("mouseenter.slick",d.proxy(e.interrupt,e,!0)).on("mouseleave.slick",d.proxy(e.interrupt,e,!1))},r.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",d.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",d.proxy(e.interrupt,e,!1)))},r.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),d(document).on(e.visibilityChange,d.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().on("click.slick",e.selectHandler),d(window).on("orientationchange.slick.slick-"+e.instanceUid,d.proxy(e.orientationChange,e)),d(window).on("resize.slick.slick-"+e.instanceUid,d.proxy(e.resize,e)),d("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),d(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),d(e.setPosition)},r.prototype.initUI=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.show(),e.$nextArrow.show()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.show()},r.prototype.keyHandler=function(e){var t=this;e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&!0===t.options.accessibility?t.changeSlide({data:{message:!0===t.options.rtl?"next":"previous"}}):39===e.keyCode&&!0===t.options.accessibility&&t.changeSlide({data:{message:!0===t.options.rtl?"previous":"next"}}))},r.prototype.lazyLoad=function(){function e(e){d("img[data-lazy]",e).each(function(){var e=d(this),t=d(this).attr("data-lazy"),i=d(this).attr("data-srcset"),n=d(this).attr("data-sizes")||o.$slider.attr("data-sizes"),s=document.createElement("img");s.onload=function(){e.animate({opacity:0},100,function(){i&&(e.attr("srcset",i),n&&e.attr("sizes",n)),e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),o.$slider.trigger("lazyLoaded",[o,e,t])})},s.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),o.$slider.trigger("lazyLoadError",[o,e,t])},s.src=t})}var t,i,n,o=this;if(!0===o.options.centerMode?n=!0===o.options.infinite?(i=o.currentSlide+(o.options.slidesToShow/2+1))+o.options.slidesToShow+2:(i=Math.max(0,o.currentSlide-(o.options.slidesToShow/2+1)),o.options.slidesToShow/2+1+2+o.currentSlide):(i=o.options.infinite?o.options.slidesToShow+o.currentSlide:o.currentSlide,n=Math.ceil(i+o.options.slidesToShow),!0===o.options.fade&&(0<i&&i--,n<=o.slideCount&&n++)),t=o.$slider.find(".slick-slide").slice(i,n),"anticipated"===o.options.lazyLoad)for(var s=i-1,r=n,a=o.$slider.find(".slick-slide"),l=0;l<o.options.slidesToScroll;l++)s<0&&(s=o.slideCount-1),t=(t=t.add(a.eq(s))).add(a.eq(r)),s--,r++;e(t),o.slideCount<=o.options.slidesToShow?e(o.$slider.find(".slick-slide")):o.currentSlide>=o.slideCount-o.options.slidesToShow?e(o.$slider.find(".slick-cloned").slice(0,o.options.slidesToShow)):0===o.currentSlide&&e(o.$slider.find(".slick-cloned").slice(-1*o.options.slidesToShow))},r.prototype.loadSlider=function(){var e=this;e.setPosition(),e.$slideTrack.css({opacity:1}),e.$slider.removeClass("slick-loading"),e.initUI(),"progressive"===e.options.lazyLoad&&e.progressiveLazyLoad()},r.prototype.next=r.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},r.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},r.prototype.pause=r.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},r.prototype.play=r.prototype.slickPlay=function(){var e=this;e.autoPlay(),e.options.autoplay=!0,e.paused=!1,e.focussed=!1,e.interrupted=!1},r.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&d(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},r.prototype.prev=r.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},r.prototype.preventDefault=function(e){e.preventDefault()},r.prototype.progressiveLazyLoad=function(e){e=e||1;var t,i,n,s,o,r=this,a=d("img[data-lazy]",r.$slider);a.length?(t=a.first(),i=t.attr("data-lazy"),n=t.attr("data-srcset"),s=t.attr("data-sizes")||r.$slider.attr("data-sizes"),(o=document.createElement("img")).onload=function(){n&&(t.attr("srcset",n),s&&t.attr("sizes",s)),t.attr("src",i).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===r.options.adaptiveHeight&&r.setPosition(),r.$slider.trigger("lazyLoaded",[r,t,i]),r.progressiveLazyLoad()},o.onerror=function(){e<3?setTimeout(function(){r.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),r.$slider.trigger("lazyLoadError",[r,t,i]),r.progressiveLazyLoad())},o.src=i):r.$slider.trigger("allImagesLoaded",[r])},r.prototype.refresh=function(e){var t,i,n=this;i=n.slideCount-n.options.slidesToShow,!n.options.infinite&&n.currentSlide>i&&(n.currentSlide=i),n.slideCount<=n.options.slidesToShow&&(n.currentSlide=0),t=n.currentSlide,n.destroy(!0),d.extend(n,n.initials,{currentSlide:t}),n.init(),e||n.changeSlide({data:{message:"index",index:t}},!1)},r.prototype.registerBreakpoints=function(){var e,t,i,n=this,s=n.options.responsive||null;if("array"===d.type(s)&&s.length){for(e in n.respondTo=n.options.respondTo||"window",s)if(i=n.breakpoints.length-1,s.hasOwnProperty(e)){for(t=s[e].breakpoint;0<=i;)n.breakpoints[i]&&n.breakpoints[i]===t&&n.breakpoints.splice(i,1),i--;n.breakpoints.push(t),n.breakpointSettings[t]=s[e].settings}n.breakpoints.sort(function(e,t){return n.options.mobileFirst?e-t:t-e})}},r.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},r.prototype.resize=function(){var e=this;d(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=d(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},r.prototype.removeSlide=r.prototype.slickRemove=function(e,t,i){var n=this;if(e="boolean"==typeof e?!0===(t=e)?0:n.slideCount-1:!0===t?--e:e,n.slideCount<1||e<0||e>n.slideCount-1)return!1;n.unload(),!0===i?n.$slideTrack.children().remove():n.$slideTrack.children(this.options.slide).eq(e).remove(),n.$slides=n.$slideTrack.children(this.options.slide),n.$slideTrack.children(this.options.slide).detach(),n.$slideTrack.append(n.$slides),n.$slidesCache=n.$slides,n.reinit()},r.prototype.setCSS=function(e){var t,i,n=this,s={};!0===n.options.rtl&&(e=-e),t="left"==n.positionProp?Math.ceil(e)+"px":"0px",i="top"==n.positionProp?Math.ceil(e)+"px":"0px",s[n.positionProp]=e,!1===n.transformsEnabled||(!(s={})===n.cssTransitions?s[n.animType]="translate("+t+", "+i+")":s[n.animType]="translate3d("+t+", "+i+", 0px)"),n.$slideTrack.css(s)},r.prototype.setDimensions=function(){var e=this;!1===e.options.vertical?!0===e.options.centerMode&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),!0===e.options.centerMode&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),!1===e.options.vertical&&!1===e.options.variableWidth?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):!0===e.options.variableWidth?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var t=e.$slides.first().outerWidth(!0)-e.$slides.first().width();!1===e.options.variableWidth&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-t)},r.prototype.setFade=function(){var i,n=this;n.$slides.each(function(e,t){i=n.slideWidth*e*-1,!0===n.options.rtl?d(t).css({position:"relative",right:i,top:0,zIndex:n.options.zIndex-2,opacity:0}):d(t).css({position:"relative",left:i,top:0,zIndex:n.options.zIndex-2,opacity:0})}),n.$slides.eq(n.currentSlide).css({zIndex:n.options.zIndex-1,opacity:1})},r.prototype.setHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.css("height",t)}},r.prototype.setOption=r.prototype.slickSetOption=function(){var e,t,i,n,s,o=this,r=!1;if("object"===d.type(arguments[0])?(i=arguments[0],r=arguments[1],s="multiple"):"string"===d.type(arguments[0])&&(n=arguments[1],r=arguments[2],"responsive"===(i=arguments[0])&&"array"===d.type(arguments[1])?s="responsive":void 0!==arguments[1]&&(s="single")),"single"===s)o.options[i]=n;else if("multiple"===s)d.each(i,function(e,t){o.options[e]=t});else if("responsive"===s)for(t in n)if("array"!==d.type(o.options.responsive))o.options.responsive=[n[t]];else{for(e=o.options.responsive.length-1;0<=e;)o.options.responsive[e].breakpoint===n[t].breakpoint&&o.options.responsive.splice(e,1),e--;o.options.responsive.push(n[t])}r&&(o.unload(),o.reinit())},r.prototype.setPosition=function(){var e=this;e.setDimensions(),e.setHeight(),!1===e.options.fade?e.setCSS(e.getLeft(e.currentSlide)):e.setFade(),e.$slider.trigger("setPosition",[e])},r.prototype.setProps=function(){var e=this,t=document.body.style;e.positionProp=!0===e.options.vertical?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),void 0===t.WebkitTransition&&void 0===t.MozTransition&&void 0===t.msTransition||!0===e.options.useCSS&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),void 0!==t.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===t.perspectiveProperty&&void 0===t.MozPerspective&&(e.animType=!1)),void 0!==t.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===t.msTransform&&(e.animType=!1)),void 0!==t.transform&&!1!==e.animType&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&!1!==e.animType},r.prototype.setSlideClasses=function(e){var t,i,n,s,o=this;if(i=o.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),o.$slides.eq(e).addClass("slick-current"),!0===o.options.centerMode){var r=o.options.slidesToShow%2==0?1:0;t=Math.floor(o.options.slidesToShow/2),!0===o.options.infinite&&(t<=e&&e<=o.slideCount-1-t?o.$slides.slice(e-t+r,e+t+1).addClass("slick-active").attr("aria-hidden","false"):(n=o.options.slidesToShow+e,i.slice(n-t+1+r,n+t+2).addClass("slick-active").attr("aria-hidden","false")),0===e?i.eq(i.length-1-o.options.slidesToShow).addClass("slick-center"):e===o.slideCount-1&&i.eq(o.options.slidesToShow).addClass("slick-center")),o.$slides.eq(e).addClass("slick-center")}else 0<=e&&e<=o.slideCount-o.options.slidesToShow?o.$slides.slice(e,e+o.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):i.length<=o.options.slidesToShow?i.addClass("slick-active").attr("aria-hidden","false"):(s=o.slideCount%o.options.slidesToShow,n=!0===o.options.infinite?o.options.slidesToShow+e:e,o.options.slidesToShow==o.options.slidesToScroll&&o.slideCount-e<o.options.slidesToShow?i.slice(n-(o.options.slidesToShow-s),n+s).addClass("slick-active").attr("aria-hidden","false"):i.slice(n,n+o.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==o.options.lazyLoad&&"anticipated"!==o.options.lazyLoad||o.lazyLoad()},r.prototype.setupInfinite=function(){var e,t,i,n=this;if(!0===n.options.fade&&(n.options.centerMode=!1),!0===n.options.infinite&&!1===n.options.fade&&(t=null,n.slideCount>n.options.slidesToShow)){for(i=!0===n.options.centerMode?n.options.slidesToShow+1:n.options.slidesToShow,e=n.slideCount;e>n.slideCount-i;e-=1)t=e-1,d(n.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-n.slideCount).prependTo(n.$slideTrack).addClass("slick-cloned");for(e=0;e<i+n.slideCount;e+=1)t=e,d(n.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+n.slideCount).appendTo(n.$slideTrack).addClass("slick-cloned");n.$slideTrack.find(".slick-cloned").find("[id]").each(function(){d(this).attr("id","")})}},r.prototype.interrupt=function(e){e||this.autoPlay(),this.interrupted=e},r.prototype.selectHandler=function(e){var t=d(e.target).is(".slick-slide")?d(e.target):d(e.target).parents(".slick-slide"),i=parseInt(t.attr("data-slick-index"));i=i||0,this.slideCount<=this.options.slidesToShow?this.slideHandler(i,!1,!0):this.slideHandler(i)},r.prototype.slideHandler=function(e,t,i){var n,s,o,r,a,l=null,d=this;if(t=t||!1,!(!0===d.animating&&!0===d.options.waitForAnimate||!0===d.options.fade&&d.currentSlide===e))if(!1===t&&d.asNavFor(e),n=e,l=d.getLeft(n),r=d.getLeft(d.currentSlide),d.currentLeft=null===d.swipeLeft?r:d.swipeLeft,!1===d.options.infinite&&!1===d.options.centerMode&&(e<0||e>d.getDotCount()*d.options.slidesToScroll))!1===d.options.fade&&(n=d.currentSlide,!0!==i?d.animateSlide(r,function(){d.postSlide(n)}):d.postSlide(n));else if(!1===d.options.infinite&&!0===d.options.centerMode&&(e<0||e>d.slideCount-d.options.slidesToScroll))!1===d.options.fade&&(n=d.currentSlide,!0!==i?d.animateSlide(r,function(){d.postSlide(n)}):d.postSlide(n));else{if(d.options.autoplay&&clearInterval(d.autoPlayTimer),s=n<0?d.slideCount%d.options.slidesToScroll!=0?d.slideCount-d.slideCount%d.options.slidesToScroll:d.slideCount+n:n>=d.slideCount?d.slideCount%d.options.slidesToScroll!=0?0:n-d.slideCount:n,d.animating=!0,d.$slider.trigger("beforeChange",[d,d.currentSlide,s]),o=d.currentSlide,d.currentSlide=s,d.setSlideClasses(d.currentSlide),d.options.asNavFor&&(a=(a=d.getNavTarget()).slick("getSlick")).slideCount<=a.options.slidesToShow&&a.setSlideClasses(d.currentSlide),d.updateDots(),d.updateArrows(),!0===d.options.fade)return!0!==i?(d.fadeSlideOut(o),d.fadeSlide(s,function(){d.postSlide(s)})):d.postSlide(s),void d.animateHeight();!0!==i?d.animateSlide(l,function(){d.postSlide(s)}):d.postSlide(s)}},r.prototype.startLoad=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},r.prototype.swipeDirection=function(){var e,t,i,n,s=this;return e=s.touchObject.startX-s.touchObject.curX,t=s.touchObject.startY-s.touchObject.curY,i=Math.atan2(t,e),(n=Math.round(180*i/Math.PI))<0&&(n=360-Math.abs(n)),n<=45&&0<=n?!1===s.options.rtl?"left":"right":n<=360&&315<=n?!1===s.options.rtl?"left":"right":135<=n&&n<=225?!1===s.options.rtl?"right":"left":!0===s.options.verticalSwiping?35<=n&&n<=135?"down":"up":"vertical"},r.prototype.swipeEnd=function(e){var t,i,n=this;if(n.dragging=!1,n.swiping=!1,n.scrolling)return n.scrolling=!1;if(n.interrupted=!1,n.shouldClick=!(10<n.touchObject.swipeLength),void 0===n.touchObject.curX)return!1;if(!0===n.touchObject.edgeHit&&n.$slider.trigger("edge",[n,n.swipeDirection()]),n.touchObject.swipeLength>=n.touchObject.minSwipe){switch(i=n.swipeDirection()){case"left":case"down":t=n.options.swipeToSlide?n.checkNavigable(n.currentSlide+n.getSlideCount()):n.currentSlide+n.getSlideCount(),n.currentDirection=0;break;case"right":case"up":t=n.options.swipeToSlide?n.checkNavigable(n.currentSlide-n.getSlideCount()):n.currentSlide-n.getSlideCount(),n.currentDirection=1}"vertical"!=i&&(n.slideHandler(t),n.touchObject={},n.$slider.trigger("swipe",[n,i]))}else n.touchObject.startX!==n.touchObject.curX&&(n.slideHandler(n.currentSlide),n.touchObject={})},r.prototype.swipeHandler=function(e){var t=this;if(!(!1===t.options.swipe||"ontouchend"in document&&!1===t.options.swipe||!1===t.options.draggable&&-1!==e.type.indexOf("mouse")))switch(t.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,t.touchObject.minSwipe=t.listWidth/t.options.touchThreshold,!0===t.options.verticalSwiping&&(t.touchObject.minSwipe=t.listHeight/t.options.touchThreshold),e.data.action){case"start":t.swipeStart(e);break;case"move":t.swipeMove(e);break;case"end":t.swipeEnd(e)}},r.prototype.swipeMove=function(e){var t,i,n,s,o,r,a=this;return o=void 0!==e.originalEvent?e.originalEvent.touches:null,!(!a.dragging||a.scrolling||o&&1!==o.length)&&(t=a.getLeft(a.currentSlide),a.touchObject.curX=void 0!==o?o[0].pageX:e.clientX,a.touchObject.curY=void 0!==o?o[0].pageY:e.clientY,a.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(a.touchObject.curX-a.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(a.touchObject.curY-a.touchObject.startY,2))),!a.options.verticalSwiping&&!a.swiping&&4<r?!(a.scrolling=!0):(!0===a.options.verticalSwiping&&(a.touchObject.swipeLength=r),i=a.swipeDirection(),void 0!==e.originalEvent&&4<a.touchObject.swipeLength&&(a.swiping=!0,e.preventDefault()),s=(!1===a.options.rtl?1:-1)*(a.touchObject.curX>a.touchObject.startX?1:-1),!0===a.options.verticalSwiping&&(s=a.touchObject.curY>a.touchObject.startY?1:-1),n=a.touchObject.swipeLength,(a.touchObject.edgeHit=!1)===a.options.infinite&&(0===a.currentSlide&&"right"===i||a.currentSlide>=a.getDotCount()&&"left"===i)&&(n=a.touchObject.swipeLength*a.options.edgeFriction,a.touchObject.edgeHit=!0),!1===a.options.vertical?a.swipeLeft=t+n*s:a.swipeLeft=t+n*(a.$list.height()/a.listWidth)*s,!0===a.options.verticalSwiping&&(a.swipeLeft=t+n*s),!0!==a.options.fade&&!1!==a.options.touchMove&&(!0===a.animating?(a.swipeLeft=null,!1):void a.setCSS(a.swipeLeft))))},r.prototype.swipeStart=function(e){var t,i=this;if(i.interrupted=!0,1!==i.touchObject.fingerCount||i.slideCount<=i.options.slidesToShow)return!(i.touchObject={});void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(t=e.originalEvent.touches[0]),i.touchObject.startX=i.touchObject.curX=void 0!==t?t.pageX:e.clientX,i.touchObject.startY=i.touchObject.curY=void 0!==t?t.pageY:e.clientY,i.dragging=!0},r.prototype.unfilterSlides=r.prototype.slickUnfilter=function(){var e=this;null!==e.$slidesCache&&(e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.appendTo(e.$slideTrack),e.reinit())},r.prototype.unload=function(){var e=this;d(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},r.prototype.unslick=function(e){this.$slider.trigger("unslick",[this,e]),this.destroy()},r.prototype.updateArrows=function(){var e=this;Math.floor(e.options.slidesToShow/2),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&!e.options.infinite&&(e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===e.currentSlide?(e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-e.options.slidesToShow&&!1===e.options.centerMode?(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-1&&!0===e.options.centerMode&&(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},r.prototype.updateDots=function(){var e=this;null!==e.$dots&&(e.$dots.find("li").removeClass("slick-active").end(),e.$dots.find("li").eq(Math.floor(e.currentSlide/e.options.slidesToScroll)).addClass("slick-active"))},r.prototype.visibility=function(){this.options.autoplay&&(document[this.hidden]?this.interrupted=!0:this.interrupted=!1)},d.fn.slick=function(){var e,t,i=this,n=arguments[0],s=Array.prototype.slice.call(arguments,1),o=i.length;for(e=0;e<o;e++)if("object"==typeof n||void 0===n?i[e].slick=new r(i[e],n):t=i[e].slick[n].apply(i[e].slick,s),void 0!==t)return t;return i}}),function(e,r,o){var t,s,i,a,n,l,p,d,c,f,u,h,m,g;function v(e,t){this.el=e,this.$el=r(e),this.opts=r.extend(!0,{},m,t,this.$el.data()),d==o&&(d=r("body")),this.opts.startDate||(this.opts.startDate=new Date),"INPUT"==this.el.nodeName&&(this.elIsInput=!0),this.opts.altField&&(this.$altField="string"==typeof this.opts.altField?r(this.opts.altField):this.opts.altField),this.inited=!1,this.visible=!1,this.silent=!1,this.currentDate=this.opts.startDate,this.currentView=this.opts.view,this._createShortCuts(),this.selectedDates=[],this.views={},this.keys=[],this.minRange="",this.maxRange="",this._prevOnSelectValue="",this.init()}m={classes:"",inline:h=!(u="datepicker"),language:"ru",startDate:new Date,firstDay:"",weekends:[6,0],dateFormat:"",altField:"",altFieldDateFormat:"@",toggleSelected:!0,keyboardNav:!0,position:"bottom left",offset:12,view:"days",minView:"days",showOtherMonths:!0,selectOtherMonths:!0,moveToOtherMonthsOnSelect:!0,showOtherYears:!0,selectOtherYears:!0,moveToOtherYearsOnSelect:!0,minDate:"",maxDate:"",disableNavWhenOutOfRange:!0,multipleDates:!1,multipleDatesSeparator:",",range:!1,todayButton:!1,clearButton:!1,showEvent:"focus",autoClose:!1,monthsField:"monthsShort",prevHtml:'<svg><path d="M 17,12 l -5,5 l 5,5"></path></svg>',nextHtml:'<svg><path d="M 14,12 l 5,5 l -5,5"></path></svg>',navTitles:{days:"MM, <i>yyyy</i>",months:"yyyy",years:"yyyy1 - yyyy2"},timepicker:!1,onlyTimepicker:!1,dateTimeSeparator:" ",timeFormat:"",minHours:0,maxHours:24,minMinutes:0,maxMinutes:59,hoursStep:1,minutesStep:1,onSelect:"",onShow:"",onHide:"",onChangeMonth:"",onChangeYear:"",onChangeDecade:"",onChangeView:"",onRenderCell:""},g={ctrlRight:[17,39],ctrlUp:[17,38],ctrlLeft:[17,37],ctrlDown:[17,40],shiftRight:[16,39],shiftUp:[16,38],shiftLeft:[16,37],shiftDown:[16,40],altUp:[18,38],altRight:[18,39],altLeft:[18,37],altDown:[18,40],ctrlShiftUp:[16,17,38]},(f=v).prototype={VERSION:"2.2.3",viewIndexes:["days","months","years"],init:function(){h||this.opts.inline||!this.elIsInput||this._buildDatepickersContainer(),this._buildBaseHtml(),this._defineLocale(this.opts.language),this._syncWithMinMaxDates(),this.elIsInput&&(this.opts.inline||(this._setPositionClasses(this.opts.position),this._bindEvents()),this.opts.keyboardNav&&!this.opts.onlyTimepicker&&this._bindKeyboardEvents(),this.$datepicker.on("mousedown",this._onMouseDownDatepicker.bind(this)),this.$datepicker.on("mouseup",this._onMouseUpDatepicker.bind(this))),this.opts.classes&&this.$datepicker.addClass(this.opts.classes),this.opts.timepicker&&(this.timepicker=new r.fn.datepicker.Timepicker(this,this.opts),this._bindTimepickerEvents()),this.opts.onlyTimepicker&&this.$datepicker.addClass("-only-timepicker-"),this.views[this.currentView]=new r.fn.datepicker.Body(this,this.currentView,this.opts),this.views[this.currentView].show(),this.nav=new r.fn.datepicker.Navigation(this,this.opts),this.view=this.currentView,this.$el.on("clickCell.adp",this._onClickCell.bind(this)),this.$datepicker.on("mouseenter",".datepicker--cell",this._onMouseEnterCell.bind(this)),this.$datepicker.on("mouseleave",".datepicker--cell",this._onMouseLeaveCell.bind(this)),this.inited=!0},_createShortCuts:function(){this.minDate=this.opts.minDate?this.opts.minDate:new Date(-86399999136e5),this.maxDate=this.opts.maxDate?this.opts.maxDate:new Date(86399999136e5)},_bindEvents:function(){this.$el.on(this.opts.showEvent+".adp",this._onShowEvent.bind(this)),this.$el.on("mouseup.adp",this._onMouseUpEl.bind(this)),this.$el.on("blur.adp",this._onBlur.bind(this)),this.$el.on("keyup.adp",this._onKeyUpGeneral.bind(this)),r(e).on("resize.adp",this._onResize.bind(this)),r("body").on("mouseup.adp",this._onMouseUpBody.bind(this))},_bindKeyboardEvents:function(){this.$el.on("keydown.adp",this._onKeyDown.bind(this)),this.$el.on("keyup.adp",this._onKeyUp.bind(this)),this.$el.on("hotKey.adp",this._onHotKey.bind(this))},_bindTimepickerEvents:function(){this.$el.on("timeChange.adp",this._onTimeChange.bind(this))},isWeekend:function(e){return-1!==this.opts.weekends.indexOf(e)},_defineLocale:function(e){"string"==typeof e?(this.loc=r.fn.datepicker.language[e],this.loc||(console.warn("Can't find language \""+e+'" in Datepicker.language, will use "ru" instead'),this.loc=r.extend(!0,{},r.fn.datepicker.language.ru)),this.loc=r.extend(!0,{},r.fn.datepicker.language.ru,r.fn.datepicker.language[e])):this.loc=r.extend(!0,{},r.fn.datepicker.language.ru,e),this.opts.dateFormat&&(this.loc.dateFormat=this.opts.dateFormat),this.opts.timeFormat&&(this.loc.timeFormat=this.opts.timeFormat),""!==this.opts.firstDay&&(this.loc.firstDay=this.opts.firstDay),this.opts.timepicker&&(this.loc.dateFormat=[this.loc.dateFormat,this.loc.timeFormat].join(this.opts.dateTimeSeparator)),this.opts.onlyTimepicker&&(this.loc.dateFormat=this.loc.timeFormat);var t=this._getWordBoundaryRegExp;(this.loc.timeFormat.match(t("aa"))||this.loc.timeFormat.match(t("AA")))&&(this.ampm=!0)},_buildDatepickersContainer:function(){h=!0,d.append('<div class="datepickers-container" id="datepickers-container"></div>'),c=r("#datepickers-container")},_buildBaseHtml:function(){var e,t=r('<div class="datepicker-inline">');e="INPUT"==this.el.nodeName?this.opts.inline?t.insertAfter(this.$el):c:t.appendTo(this.$el),this.$datepicker=r('<div class="datepicker"><i class="datepicker--pointer"></i><nav class="datepicker--nav"></nav><div class="datepicker--content"></div></div>').appendTo(e),this.$content=r(".datepicker--content",this.$datepicker),this.$nav=r(".datepicker--nav",this.$datepicker)},_triggerOnChange:function(){if(!this.selectedDates.length){if(""===this._prevOnSelectValue)return;return this._prevOnSelectValue="",this.opts.onSelect("","",this)}var e,t=this.selectedDates,i=f.getParsedDate(t[0]),n=this,s=new Date(i.year,i.month,i.date,i.hours,i.minutes);e=t.map(function(e){return n.formatDate(n.loc.dateFormat,e)}).join(this.opts.multipleDatesSeparator),(this.opts.multipleDates||this.opts.range)&&(s=t.map(function(e){var t=f.getParsedDate(e);return new Date(t.year,t.month,t.date,t.hours,t.minutes)})),this._prevOnSelectValue=e,this.opts.onSelect(e,s,this)},next:function(){var e=this.parsedDate,t=this.opts;switch(this.view){case"days":this.date=new Date(e.year,e.month+1,1),t.onChangeMonth&&t.onChangeMonth(this.parsedDate.month,this.parsedDate.year);break;case"months":this.date=new Date(e.year+1,e.month,1),t.onChangeYear&&t.onChangeYear(this.parsedDate.year);break;case"years":this.date=new Date(e.year+10,0,1),t.onChangeDecade&&t.onChangeDecade(this.curDecade)}},prev:function(){var e=this.parsedDate,t=this.opts;switch(this.view){case"days":this.date=new Date(e.year,e.month-1,1),t.onChangeMonth&&t.onChangeMonth(this.parsedDate.month,this.parsedDate.year);break;case"months":this.date=new Date(e.year-1,e.month,1),t.onChangeYear&&t.onChangeYear(this.parsedDate.year);break;case"years":this.date=new Date(e.year-10,0,1),t.onChangeDecade&&t.onChangeDecade(this.curDecade)}},formatDate:function(e,t){t=t||this.date;var i,n=e,s=this._getWordBoundaryRegExp,o=this.loc,r=f.getLeadingZeroNum,a=f.getDecade(t),l=f.getParsedDate(t),d=l.fullHours,c=l.hours,u=e.match(s("aa"))||e.match(s("AA")),p="am",h=this._replacer;switch(this.opts.timepicker&&this.timepicker&&u&&(d=r((i=this.timepicker._getValidHoursFromDate(t,u)).hours),c=i.hours,p=i.dayPeriod),!0){case/@/.test(n):n=n.replace(/@/,t.getTime());case/aa/.test(n):n=h(n,s("aa"),p);case/AA/.test(n):n=h(n,s("AA"),p.toUpperCase());case/dd/.test(n):n=h(n,s("dd"),l.fullDate);case/d/.test(n):n=h(n,s("d"),l.date);case/DD/.test(n):n=h(n,s("DD"),o.days[l.day]);case/D/.test(n):n=h(n,s("D"),o.daysShort[l.day]);case/mm/.test(n):n=h(n,s("mm"),l.fullMonth);case/m/.test(n):n=h(n,s("m"),l.month+1);case/MM/.test(n):n=h(n,s("MM"),this.loc.months[l.month]);case/M/.test(n):n=h(n,s("M"),o.monthsShort[l.month]);case/ii/.test(n):n=h(n,s("ii"),l.fullMinutes);case/i/.test(n):n=h(n,s("i"),l.minutes);case/hh/.test(n):n=h(n,s("hh"),d);case/h/.test(n):n=h(n,s("h"),c);case/yyyy/.test(n):n=h(n,s("yyyy"),l.year);case/yyyy1/.test(n):n=h(n,s("yyyy1"),a[0]);case/yyyy2/.test(n):n=h(n,s("yyyy2"),a[1]);case/yy/.test(n):n=h(n,s("yy"),l.year.toString().slice(-2))}return n},_replacer:function(e,t,s){return e.replace(t,function(e,t,i,n){return t+s+n})},_getWordBoundaryRegExp:function(e){var t="\\s|\\.|-|/|\\\\|,|\\$|\\!|\\?|:|;";return new RegExp("(^|>|"+t+")("+e+")($|<|"+t+")","g")},selectDate:function(e){var t=this,i=t.opts,n=t.parsedDate,s=t.selectedDates.length,o="";if(Array.isArray(e))e.forEach(function(e){t.selectDate(e)});else if(e instanceof Date){if(this.lastSelectedDate=e,this.timepicker&&this.timepicker._setTime(e),t._trigger("selectDate",e),this.timepicker&&(e.setHours(this.timepicker.hours),e.setMinutes(this.timepicker.minutes)),"days"==t.view&&e.getMonth()!=n.month&&i.moveToOtherMonthsOnSelect&&(o=new Date(e.getFullYear(),e.getMonth(),1)),"years"==t.view&&e.getFullYear()!=n.year&&i.moveToOtherYearsOnSelect&&(o=new Date(e.getFullYear(),0,1)),o&&(t.silent=!0,t.date=o,t.silent=!1,t.nav._render()),i.multipleDates&&!i.range){if(s===i.multipleDates)return;t._isSelected(e)||t.selectedDates.push(e)}else i.range?2==s?(t.selectedDates=[e],t.minRange=e,t.maxRange=""):1==s?(t.selectedDates.push(e),t.maxRange?t.minRange=e:t.maxRange=e,f.bigger(t.maxRange,t.minRange)&&(t.maxRange=t.minRange,t.minRange=e),t.selectedDates=[t.minRange,t.maxRange]):(t.selectedDates=[e],t.minRange=e):t.selectedDates=[e];t._setInputValue(),i.onSelect&&t._triggerOnChange(),i.autoClose&&!this.timepickerIsActive&&(i.multipleDates||i.range?i.range&&2==t.selectedDates.length&&t.hide():t.hide()),t.views[this.currentView]._render()}},removeDate:function(i){var n=this.selectedDates,s=this;if(i instanceof Date)return n.some(function(e,t){return f.isSame(e,i)?(n.splice(t,1),s.selectedDates.length?s.lastSelectedDate=s.selectedDates[s.selectedDates.length-1]:(s.minRange="",s.maxRange="",s.lastSelectedDate=""),s.views[s.currentView]._render(),s._setInputValue(),s.opts.onSelect&&s._triggerOnChange(),!0):void 0})},today:function(){this.silent=!0,this.view=this.opts.minView,this.silent=!1,this.date=new Date,this.opts.todayButton instanceof Date&&this.selectDate(this.opts.todayButton)},clear:function(){this.selectedDates=[],this.minRange="",this.maxRange="",this.views[this.currentView]._render(),this._setInputValue(),this.opts.onSelect&&this._triggerOnChange()},update:function(e,t){var i=arguments.length,n=this.lastSelectedDate;return 2==i?this.opts[e]=t:1==i&&"object"==typeof e&&(this.opts=r.extend(!0,this.opts,e)),this._createShortCuts(),this._syncWithMinMaxDates(),this._defineLocale(this.opts.language),this.nav._addButtonsIfNeed(),this.opts.onlyTimepicker||this.nav._render(),this.views[this.currentView]._render(),this.elIsInput&&!this.opts.inline&&(this._setPositionClasses(this.opts.position),this.visible&&this.setPosition(this.opts.position)),this.opts.classes&&this.$datepicker.addClass(this.opts.classes),this.opts.onlyTimepicker&&this.$datepicker.addClass("-only-timepicker-"),this.opts.timepicker&&(n&&this.timepicker._handleDate(n),this.timepicker._updateRanges(),this.timepicker._updateCurrentTime(),n&&(n.setHours(this.timepicker.hours),n.setMinutes(this.timepicker.minutes))),this._setInputValue(),this},_syncWithMinMaxDates:function(){var e=this.date.getTime();this.silent=!0,this.minTime>e&&(this.date=this.minDate),this.maxTime<e&&(this.date=this.maxDate),this.silent=!1},_isSelected:function(t,i){var n=!1;return this.selectedDates.some(function(e){return f.isSame(e,t,i)?(n=e,!0):void 0}),n},_setInputValue:function(){var e,t=this,i=t.opts,n=t.loc.dateFormat,s=i.altFieldDateFormat,o=t.selectedDates.map(function(e){return t.formatDate(n,e)});i.altField&&t.$altField.length&&(e=(e=this.selectedDates.map(function(e){return t.formatDate(s,e)})).join(this.opts.multipleDatesSeparator),this.$altField.val(e)),o=o.join(this.opts.multipleDatesSeparator),this.$el.val(o)},_isInRange:function(e,t){var i=e.getTime(),n=f.getParsedDate(e),s=f.getParsedDate(this.minDate),o=f.getParsedDate(this.maxDate),r=new Date(n.year,n.month,s.date).getTime(),a=new Date(n.year,n.month,o.date).getTime(),l={day:i>=this.minTime&&i<=this.maxTime,month:r>=this.minTime&&a<=this.maxTime,year:n.year>=s.year&&n.year<=o.year};return t?l[t]:l.day},_getDimensions:function(e){var t=e.offset();return{width:e.outerWidth(),height:e.outerHeight(),left:t.left,top:t.top}},_getDateFromCell:function(e){var t=this.parsedDate,i=e.data("year")||t.year,n=e.data("month")==o?t.month:e.data("month"),s=e.data("date")||1;return new Date(i,n,s)},_setPositionClasses:function(e){var t=(e=e.split(" "))[0],i="datepicker -"+t+"-"+e[1]+"- -from-"+t+"-";this.visible&&(i+=" active"),this.$datepicker.removeAttr("class").addClass(i)},setPosition:function(e){e=e||this.opts.position;var t,i,n=this._getDimensions(this.$el),s=this._getDimensions(this.$datepicker),o=e.split(" "),r=this.opts.offset,a=o[0],l=o[1];switch(a){case"top":t=n.top-s.height-r;break;case"right":i=n.left+n.width+r;break;case"bottom":t=n.top+n.height+r;break;case"left":i=n.left-s.width-r}switch(l){case"top":t=n.top;break;case"right":i=n.left+n.width-s.width;break;case"bottom":t=n.top+n.height-s.height;break;case"left":i=n.left;break;case"center":/left|right/.test(a)?t=n.top+n.height/2-s.height/2:i=n.left+n.width/2-s.width/2}this.$datepicker.css({left:i,top:t})},show:function(){var e=this.opts.onShow;this.setPosition(this.opts.position),this.$datepicker.addClass("active"),this.visible=!0,e&&this._bindVisionEvents(e)},hide:function(){var e=this.opts.onHide;this.$datepicker.removeClass("active").css({left:"-100000px"}),this.focused="",this.keys=[],this.inFocus=!1,this.visible=!1,this.$el.blur(),e&&this._bindVisionEvents(e)},down:function(e){this._changeView(e,"down")},up:function(e){this._changeView(e,"up")},_bindVisionEvents:function(e){this.$datepicker.off("transitionend.dp"),e(this,!1),this.$datepicker.one("transitionend.dp",e.bind(this,this,!0))},_changeView:function(e,t){e=e||this.focused||this.date;var i="up"==t?this.viewIndex+1:this.viewIndex-1;2<i&&(i=2),i<0&&(i=0),this.silent=!0,this.date=new Date(e.getFullYear(),e.getMonth(),1),this.silent=!1,this.view=this.viewIndexes[i]},_handleHotKey:function(e){var t,i,n,s=f.getParsedDate(this._getFocusedDate()),o=this.opts,r=!1,a=!1,l=!1,d=s.year,c=s.month,u=s.date;switch(e){case"ctrlRight":case"ctrlUp":c+=1,r=!0;break;case"ctrlLeft":case"ctrlDown":c-=1,r=!0;break;case"shiftRight":case"shiftUp":a=!0,d+=1;break;case"shiftLeft":case"shiftDown":a=!0,d-=1;break;case"altRight":case"altUp":l=!0,d+=10;break;case"altLeft":case"altDown":l=!0,d-=10;break;case"ctrlShiftUp":this.up()}n=f.getDaysCount(new Date(d,c)),i=new Date(d,c,u),n<u&&(u=n),i.getTime()<this.minTime?i=this.minDate:i.getTime()>this.maxTime&&(i=this.maxDate),this.focused=i,t=f.getParsedDate(i),r&&o.onChangeMonth&&o.onChangeMonth(t.month,t.year),a&&o.onChangeYear&&o.onChangeYear(t.year),l&&o.onChangeDecade&&o.onChangeDecade(this.curDecade)},_registerKey:function(t){this.keys.some(function(e){return e==t})||this.keys.push(t)},_unRegisterKey:function(e){var t=this.keys.indexOf(e);this.keys.splice(t,1)},_isHotKeyPressed:function(){var e,t=!1,i=this.keys.sort();for(var n in g)e=g[n],i.length==e.length&&e.every(function(e,t){return e==i[t]})&&(this._trigger("hotKey",n),t=!0);return t},_trigger:function(e,t){this.$el.trigger(e,t)},_focusNextCell:function(e,t){t=t||this.cellType;var i=f.getParsedDate(this._getFocusedDate()),n=i.year,s=i.month,o=i.date;if(!this._isHotKeyPressed()){switch(e){case 37:"day"==t&&(o-=1),"month"==t&&(s-=1),"year"==t&&(n-=1);break;case 38:"day"==t&&(o-=7),"month"==t&&(s-=3),"year"==t&&(n-=4);break;case 39:"day"==t&&(o+=1),"month"==t&&(s+=1),"year"==t&&(n+=1);break;case 40:"day"==t&&(o+=7),"month"==t&&(s+=3),"year"==t&&(n+=4)}var r=new Date(n,s,o);r.getTime()<this.minTime?r=this.minDate:r.getTime()>this.maxTime&&(r=this.maxDate),this.focused=r}},_getFocusedDate:function(){var e=this.focused||this.selectedDates[this.selectedDates.length-1],t=this.parsedDate;if(!e)switch(this.view){case"days":e=new Date(t.year,t.month,(new Date).getDate());break;case"months":e=new Date(t.year,t.month,1);break;case"years":e=new Date(t.year,0,1)}return e},_getCell:function(e,t){t=t||this.cellType;var i,n=f.getParsedDate(e),s='.datepicker--cell[data-year="'+n.year+'"]';switch(t){case"month":s='[data-month="'+n.month+'"]';break;case"day":s+='[data-month="'+n.month+'"][data-date="'+n.date+'"]'}return(i=this.views[this.currentView].$el.find(s)).length?i:r("")},destroy:function(){var e=this;e.$el.off(".adp").data("datepicker",""),e.selectedDates=[],e.focused="",e.views={},e.keys=[],e.minRange="",e.maxRange="",e.opts.inline||!e.elIsInput?e.$datepicker.closest(".datepicker-inline").remove():e.$datepicker.remove()},_handleAlreadySelectedDates:function(e,t){this.opts.range?this.opts.toggleSelected?this.removeDate(t):2!=this.selectedDates.length&&this._trigger("clickCell",t):this.opts.toggleSelected&&this.removeDate(t),this.opts.toggleSelected||(this.lastSelectedDate=e,this.opts.timepicker&&(this.timepicker._setTime(e),this.timepicker.update()))},_onShowEvent:function(e){this.visible||this.show()},_onBlur:function(){!this.inFocus&&this.visible&&this.hide()},_onMouseDownDatepicker:function(e){this.inFocus=!0},_onMouseUpDatepicker:function(e){this.inFocus=!1,e.originalEvent.inFocus=!0,e.originalEvent.timepickerFocus||this.$el.focus()},_onKeyUpGeneral:function(e){this.$el.val()||this.clear()},_onResize:function(){this.visible&&this.setPosition()},_onMouseUpBody:function(e){e.originalEvent.inFocus||this.visible&&!this.inFocus&&this.hide()},_onMouseUpEl:function(e){e.originalEvent.inFocus=!0,setTimeout(this._onKeyUpGeneral.bind(this),4)},_onKeyDown:function(e){var t=e.which;if(this._registerKey(t),37<=t&&t<=40&&(e.preventDefault(),this._focusNextCell(t)),13==t&&this.focused){if(this._getCell(this.focused).hasClass("-disabled-"))return;if(this.view!=this.opts.minView)this.down();else{var i=this._isSelected(this.focused,this.cellType);if(!i)return this.timepicker&&(this.focused.setHours(this.timepicker.hours),this.focused.setMinutes(this.timepicker.minutes)),void this.selectDate(this.focused);this._handleAlreadySelectedDates(i,this.focused)}}27==t&&this.hide()},_onKeyUp:function(e){var t=e.which;this._unRegisterKey(t)},_onHotKey:function(e,t){this._handleHotKey(t)},_onMouseEnterCell:function(e){var t=r(e.target).closest(".datepicker--cell"),i=this._getDateFromCell(t);this.silent=!0,this.focused&&(this.focused=""),t.addClass("-focus-"),this.focused=i,this.silent=!1,this.opts.range&&1==this.selectedDates.length&&(this.minRange=this.selectedDates[0],this.maxRange="",f.less(this.minRange,this.focused)&&(this.maxRange=this.minRange,this.minRange=""),this.views[this.currentView]._update())},_onMouseLeaveCell:function(e){r(e.target).closest(".datepicker--cell").removeClass("-focus-"),this.silent=!0,this.focused="",this.silent=!1},_onTimeChange:function(e,t,i){var n=new Date,s=!1;this.selectedDates.length&&(s=!0,n=this.lastSelectedDate),n.setHours(t),n.setMinutes(i),s||this._getCell(n).hasClass("-disabled-")?(this._setInputValue(),this.opts.onSelect&&this._triggerOnChange()):this.selectDate(n)},_onClickCell:function(e,t){this.timepicker&&(t.setHours(this.timepicker.hours),t.setMinutes(this.timepicker.minutes)),this.selectDate(t)},set focused(e){if(!e&&this.focused){var t=this._getCell(this.focused);t.length&&t.removeClass("-focus-")}this._focused=e,this.opts.range&&1==this.selectedDates.length&&(this.minRange=this.selectedDates[0],this.maxRange="",f.less(this.minRange,this._focused)&&(this.maxRange=this.minRange,this.minRange="")),this.silent||(this.date=e)},get focused(){return this._focused},get parsedDate(){return f.getParsedDate(this.date)},set date(e){return e instanceof Date?(this.currentDate=e,this.inited&&!this.silent&&(this.views[this.view]._render(),this.nav._render(),this.visible&&this.elIsInput&&this.setPosition()),e):void 0},get date(){return this.currentDate},set view(e){return this.viewIndex=this.viewIndexes.indexOf(e),this.viewIndex<0?void 0:(this.prevView=this.currentView,this.currentView=e,this.inited&&(this.views[e]?this.views[e]._render():this.views[e]=new r.fn.datepicker.Body(this,e,this.opts),this.views[this.prevView].hide(),this.views[e].show(),this.nav._render(),this.opts.onChangeView&&this.opts.onChangeView(e),this.elIsInput&&this.visible&&this.setPosition()),e)},get view(){return this.currentView},get cellType(){return this.view.substring(0,this.view.length-1)},get minTime(){var e=f.getParsedDate(this.minDate);return new Date(e.year,e.month,e.date).getTime()},get maxTime(){var e=f.getParsedDate(this.maxDate);return new Date(e.year,e.month,e.date).getTime()},get curDecade(){return f.getDecade(this.date)}},f.getDaysCount=function(e){return new Date(e.getFullYear(),e.getMonth()+1,0).getDate()},f.getParsedDate=function(e){return{year:e.getFullYear(),month:e.getMonth(),fullMonth:e.getMonth()+1<10?"0"+(e.getMonth()+1):e.getMonth()+1,date:e.getDate(),fullDate:e.getDate()<10?"0"+e.getDate():e.getDate(),day:e.getDay(),hours:e.getHours(),fullHours:e.getHours()<10?"0"+e.getHours():e.getHours(),minutes:e.getMinutes(),fullMinutes:e.getMinutes()<10?"0"+e.getMinutes():e.getMinutes()}},f.getDecade=function(e){var t=10*Math.floor(e.getFullYear()/10);return[t,9+t]},f.template=function(e,i){return e.replace(/#\{([\w]+)\}/g,function(e,t){return i[t]||0===i[t]?i[t]:void 0})},f.isSame=function(e,t,i){if(!e||!t)return!1;var n=f.getParsedDate(e),s=f.getParsedDate(t),o=i||"day";return{day:n.date==s.date&&n.month==s.month&&n.year==s.year,month:n.month==s.month&&n.year==s.year,year:n.year==s.year}[o]},f.less=function(e,t,i){return!(!e||!t)&&t.getTime()<e.getTime()},f.bigger=function(e,t,i){return!(!e||!t)&&t.getTime()>e.getTime()},f.getLeadingZeroNum=function(e){return parseInt(e)<10?"0"+e:e},f.resetTime=function(e){return"object"==typeof e?(e=f.getParsedDate(e),new Date(e.year,e.month,e.date)):void 0},r.fn.datepicker=function(t){return this.each(function(){if(r.data(this,u)){var e=r.data(this,u);e.opts=r.extend(!0,e.opts,t),e.update()}else r.data(this,u,new v(this,t))})},r.fn.datepicker.Constructor=v,r.fn.datepicker.language={ru:{days:["ÐÐ¾ÑÐºÑÐµÑÐµÐ½ÑÐµ","ÐÐ¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº","ÐÑÐ¾ÑÐ½Ð¸Ðº","Ð¡ÑÐµÐ´Ð°","Ð§ÐµÑÐ²ÐµÑÐ³","ÐÑÑÐ½Ð¸ÑÐ°","Ð¡ÑÐ±Ð±Ð¾ÑÐ°"],daysShort:["ÐÐ¾Ñ","ÐÐ¾Ð½","ÐÑÐ¾","Ð¡ÑÐµ","Ð§ÐµÑ","ÐÑÑ","Ð¡ÑÐ±"],daysMin:["ÐÑ","ÐÐ½","ÐÑ","Ð¡Ñ","Ð§Ñ","ÐÑ","Ð¡Ð±"],months:["Ð¯Ð½Ð²Ð°ÑÑ","Ð¤ÐµÐ²ÑÐ°Ð»Ñ","ÐÐ°ÑÑ","ÐÐ¿ÑÐµÐ»Ñ","ÐÐ°Ð¹","ÐÑÐ½Ñ","ÐÑÐ»Ñ","ÐÐ²Ð³ÑÑÑ","Ð¡ÐµÐ½ÑÑÐ±ÑÑ","ÐÐºÑÑÐ±ÑÑ","ÐÐ¾ÑÐ±ÑÑ","ÐÐµÐºÐ°Ð±ÑÑ"],monthsShort:["Ð¯Ð½Ð²","Ð¤ÐµÐ²","ÐÐ°Ñ","ÐÐ¿Ñ","ÐÐ°Ð¹","ÐÑÐ½","ÐÑÐ»","ÐÐ²Ð³","Ð¡ÐµÐ½","ÐÐºÑ","ÐÐ¾Ñ","ÐÐµÐº"],today:"Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ",clear:"ÐÑÐ¸ÑÑÐ¸ÑÑ",dateFormat:"dd.mm.yyyy",timeFormat:"hh:ii",firstDay:1}},r(function(){r(".datepicker-here").datepicker()}),n={days:'<div class="datepicker--days datepicker--body"><div class="datepicker--days-names"></div><div class="datepicker--cells datepicker--cells-days"></div></div>',months:'<div class="datepicker--months datepicker--body"><div class="datepicker--cells datepicker--cells-months"></div></div>',years:'<div class="datepicker--years datepicker--body"><div class="datepicker--cells datepicker--cells-years"></div></div>'},l=r.fn.datepicker,p=l.Constructor,l.Body=function(e,t,i){this.d=e,this.type=t,this.opts=i,this.$el=r(""),this.opts.onlyTimepicker||this.init()},l.Body.prototype={init:function(){this._buildBaseHtml(),this._render(),this._bindEvents()},_bindEvents:function(){this.$el.on("click",".datepicker--cell",r.proxy(this._onClickCell,this))},_buildBaseHtml:function(){this.$el=r(n[this.type]).appendTo(this.d.$content),this.$names=r(".datepicker--days-names",this.$el),this.$cells=r(".datepicker--cells",this.$el)},_getDayNamesHtml:function(e,t,i,n){return t=t!=o?t:e,i=i||"",7<(n=n!=o?n:0)?i:7==t?this._getDayNamesHtml(e,0,i,++n):(i+='<div class="datepicker--day-name'+(this.d.isWeekend(t)?" -weekend-":"")+'">'+this.d.loc.daysMin[t]+"</div>",this._getDayNamesHtml(e,++t,i,++n))},_getCellContents:function(e,t){var i="datepicker--cell datepicker--cell-"+t,n=new Date,s=this.d,o=p.resetTime(s.minRange),r=p.resetTime(s.maxRange),a=s.opts,l=p.getParsedDate(e),d={},c=l.date;switch(t){case"day":s.isWeekend(l.day)&&(i+=" -weekend-"),l.month!=this.d.parsedDate.month&&(i+=" -other-month-",a.selectOtherMonths||(i+=" -disabled-"),a.showOtherMonths||(c=""));break;case"month":c=s.loc[s.opts.monthsField][l.month];break;case"year":var u=s.curDecade;c=l.year,(l.year<u[0]||l.year>u[1])&&(i+=" -other-decade-",a.selectOtherYears||(i+=" -disabled-"),a.showOtherYears||(c=""))}return a.onRenderCell&&(c=(d=a.onRenderCell(e,t)||{}).html?d.html:c,i+=d.classes?" "+d.classes:""),a.range&&(p.isSame(o,e,t)&&(i+=" -range-from-"),p.isSame(r,e,t)&&(i+=" -range-to-"),1==s.selectedDates.length&&s.focused?((p.bigger(o,e)&&p.less(s.focused,e)||p.less(r,e)&&p.bigger(s.focused,e))&&(i+=" -in-range-"),p.less(r,e)&&p.isSame(s.focused,e)&&(i+=" -range-from-"),p.bigger(o,e)&&p.isSame(s.focused,e)&&(i+=" -range-to-")):2==s.selectedDates.length&&p.bigger(o,e)&&p.less(r,e)&&(i+=" -in-range-")),p.isSame(n,e,t)&&(i+=" -current-"),s.focused&&p.isSame(e,s.focused,t)&&(i+=" -focus-"),s._isSelected(e,t)&&(i+=" -selected-"),s._isInRange(e,t)&&!d.disabled||(i+=" -disabled-"),{html:c,classes:i}},_getDaysHtml:function(e){for(var t,i,n=p.getDaysCount(e),s=new Date(e.getFullYear(),e.getMonth(),1).getDay(),o=new Date(e.getFullYear(),e.getMonth(),n).getDay(),r=s-this.d.loc.firstDay,a=6-o+this.d.loc.firstDay,l="",d=1-(r=r<0?r+7:r),c=n+(a=6<a?a-7:a);d<=c;d++)i=e.getFullYear(),t=e.getMonth(),l+=this._getDayHtml(new Date(i,t,d));return l},_getDayHtml:function(e){var t=this._getCellContents(e,"day");return'<div class="'+t.classes+'" data-date="'+e.getDate()+'" data-month="'+e.getMonth()+'" data-year="'+e.getFullYear()+'">'+t.html+"</div>"},_getMonthsHtml:function(e){for(var t="",i=p.getParsedDate(e),n=0;n<12;)t+=this._getMonthHtml(new Date(i.year,n)),n++;return t},_getMonthHtml:function(e){var t=this._getCellContents(e,"month");return'<div class="'+t.classes+'" data-month="'+e.getMonth()+'">'+t.html+"</div>"},_getYearsHtml:function(e){for(var t=(p.getParsedDate(e),p.getDecade(e)),i="",n=t[0]-1;n<=t[1]+1;n++)i+=this._getYearHtml(new Date(n,0));return i},_getYearHtml:function(e){var t=this._getCellContents(e,"year");return'<div class="'+t.classes+'" data-year="'+e.getFullYear()+'">'+t.html+"</div>"},_renderTypes:{days:function(){var e=this._getDayNamesHtml(this.d.loc.firstDay),t=this._getDaysHtml(this.d.currentDate);this.$cells.html(t),this.$names.html(e)},months:function(){var e=this._getMonthsHtml(this.d.currentDate);this.$cells.html(e)},years:function(){var e=this._getYearsHtml(this.d.currentDate);this.$cells.html(e)}},_render:function(){this.opts.onlyTimepicker||this._renderTypes[this.type].bind(this)()},_update:function(){var i,n,s,e=r(".datepicker--cell",this.$cells),o=this;e.each(function(e,t){n=r(this),s=o.d._getDateFromCell(r(this)),i=o._getCellContents(s,o.d.cellType),n.attr("class",i.classes)})},show:function(){this.opts.onlyTimepicker||(this.$el.addClass("active"),this.acitve=!0)},hide:function(){this.$el.removeClass("active"),this.active=!1},_handleClick:function(e){var t=e.data("date")||1,i=e.data("month")||0,n=e.data("year")||this.d.parsedDate.year,s=this.d;if(s.view==this.opts.minView){var o=new Date(n,i,t),r=this.d._isSelected(o,this.d.cellType);return r?void s._handleAlreadySelectedDates.bind(s,r,o)():void s._trigger("clickCell",o)}s.down(new Date(n,i,t))},_onClickCell:function(e){var t=r(e.target).closest(".datepicker--cell");t.hasClass("-disabled-")||this._handleClick.bind(this)(t)}},i=r.fn.datepicker,a=i.Constructor,i.Navigation=function(e,t){this.d=e,this.opts=t,this.$buttonsContainer="",this.init()},i.Navigation.prototype={init:function(){this._buildBaseHtml(),this._bindEvents()},_bindEvents:function(){this.d.$nav.on("click",".datepicker--nav-action",r.proxy(this._onClickNavButton,this)),this.d.$nav.on("click",".datepicker--nav-title",r.proxy(this._onClickNavTitle,this)),this.d.$datepicker.on("click",".datepicker--button",r.proxy(this._onClickNavButton,this))},_buildBaseHtml:function(){this.opts.onlyTimepicker||this._render(),this._addButtonsIfNeed()},_addButtonsIfNeed:function(){this.opts.todayButton&&this._addButton("today"),this.opts.clearButton&&this._addButton("clear")},_render:function(){var e=this._getTitle(this.d.currentDate),t=a.template('<div class="datepicker--nav-action" data-action="prev">#{prevHtml}</div><div class="datepicker--nav-title">#{title}</div><div class="datepicker--nav-action" data-action="next">#{nextHtml}</div>',r.extend({title:e},this.opts));this.d.$nav.html(t),"years"==this.d.view&&r(".datepicker--nav-title",this.d.$nav).addClass("-disabled-"),this.setNavStatus()},_getTitle:function(e){return this.d.formatDate(this.opts.navTitles[this.d.view],e)},_addButton:function(e){this.$buttonsContainer.length||this._addButtonsContainer();var t={action:e,label:this.d.loc[e]},i=a.template('<span class="datepicker--button" data-action="#{action}">#{label}</span>',t);r("[data-action="+e+"]",this.$buttonsContainer).length||this.$buttonsContainer.append(i)},_addButtonsContainer:function(){this.d.$datepicker.append('<div class="datepicker--buttons"></div>'),this.$buttonsContainer=r(".datepicker--buttons",this.d.$datepicker)},setNavStatus:function(){if((this.opts.minDate||this.opts.maxDate)&&this.opts.disableNavWhenOutOfRange){var e=this.d.parsedDate,t=e.month,i=e.year,n=e.date;switch(this.d.view){case"days":this.d._isInRange(new Date(i,t-1,1),"month")||this._disableNav("prev"),this.d._isInRange(new Date(i,t+1,1),"month")||this._disableNav("next");break;case"months":this.d._isInRange(new Date(i-1,t,n),"year")||this._disableNav("prev"),this.d._isInRange(new Date(i+1,t,n),"year")||this._disableNav("next");break;case"years":var s=a.getDecade(this.d.date);this.d._isInRange(new Date(s[0]-1,0,1),"year")||this._disableNav("prev"),this.d._isInRange(new Date(s[1]+1,0,1),"year")||this._disableNav("next")}}},_disableNav:function(e){r('[data-action="'+e+'"]',this.d.$nav).addClass("-disabled-")},_activateNav:function(e){r('[data-action="'+e+'"]',this.d.$nav).removeClass("-disabled-")},_onClickNavButton:function(e){var t=r(e.target).closest("[data-action]").data("action");this.d[t]()},_onClickNavTitle:function(e){return r(e.target).hasClass("-disabled-")?void 0:"days"==this.d.view?this.d.view="months":void(this.d.view="years")}},t=r.fn.datepicker,s=t.Constructor,t.Timepicker=function(e,t){this.d=e,this.opts=t,this.init()},t.Timepicker.prototype={init:function(){var e="input";this._setTime(this.d.date),this._buildHTML(),navigator.userAgent.match(/trident/gi)&&(e="change"),this.d.$el.on("selectDate",this._onSelectDate.bind(this)),this.$ranges.on(e,this._onChangeRange.bind(this)),this.$ranges.on("mouseup",this._onMouseUpRange.bind(this)),this.$ranges.on("mousemove focus ",this._onMouseEnterRange.bind(this)),this.$ranges.on("mouseout blur",this._onMouseOutRange.bind(this))},_setTime:function(e){var t=s.getParsedDate(e);this._handleDate(e),this.hours=t.hours<this.minHours?this.minHours:t.hours,this.minutes=t.minutes<this.minMinutes?this.minMinutes:t.minutes},_setMinTimeFromDate:function(e){this.minHours=e.getHours(),this.minMinutes=e.getMinutes(),this.d.lastSelectedDate&&this.d.lastSelectedDate.getHours()>e.getHours()&&(this.minMinutes=this.opts.minMinutes)},_setMaxTimeFromDate:function(e){this.maxHours=e.getHours(),this.maxMinutes=e.getMinutes(),this.d.lastSelectedDate&&this.d.lastSelectedDate.getHours()<e.getHours()&&(this.maxMinutes=this.opts.maxMinutes)},_setDefaultMinMaxTime:function(){var e=this.opts;this.minHours=e.minHours<0||23<e.minHours?0:e.minHours,this.minMinutes=e.minMinutes<0||59<e.minMinutes?0:e.minMinutes,this.maxHours=e.maxHours<0||23<e.maxHours?23:e.maxHours,this.maxMinutes=e.maxMinutes<0||59<e.maxMinutes?59:e.maxMinutes},_validateHoursMinutes:function(e){this.hours<this.minHours?this.hours=this.minHours:this.hours>this.maxHours&&(this.hours=this.maxHours),this.minutes<this.minMinutes?this.minutes=this.minMinutes:this.minutes>this.maxMinutes&&(this.minutes=this.maxMinutes)},_buildHTML:function(){var e=s.getLeadingZeroNum,t={hourMin:this.minHours,hourMax:e(this.maxHours),hourStep:this.opts.hoursStep,hourValue:this.hours,hourVisible:e(this.displayHours),minMin:this.minMinutes,minMax:e(this.maxMinutes),minStep:this.opts.minutesStep,minValue:e(this.minutes)},i=s.template('<div class="datepicker--time"><div class="datepicker--time-current">   <span class="datepicker--time-current-hours">#{hourVisible}</span>   <span class="datepicker--time-current-colon">:</span>   <span class="datepicker--time-current-minutes">#{minValue}</span></div><div class="datepicker--time-sliders">   <div class="datepicker--time-row">      <input type="range" name="hours" value="#{hourValue}" min="#{hourMin}" max="#{hourMax}" step="#{hourStep}"/>   </div>   <div class="datepicker--time-row">      <input type="range" name="minutes" value="#{minValue}" min="#{minMin}" max="#{minMax}" step="#{minStep}"/>   </div></div></div>',t);this.$timepicker=r(i).appendTo(this.d.$datepicker),this.$ranges=r('[type="range"]',this.$timepicker),this.$hours=r('[name="hours"]',this.$timepicker),this.$minutes=r('[name="minutes"]',this.$timepicker),this.$hoursText=r(".datepicker--time-current-hours",this.$timepicker),this.$minutesText=r(".datepicker--time-current-minutes",this.$timepicker),this.d.ampm&&(this.$ampm=r('<span class="datepicker--time-current-ampm">').appendTo(r(".datepicker--time-current",this.$timepicker)).html(this.dayPeriod),this.$timepicker.addClass("-am-pm-"))},_updateCurrentTime:function(){var e=s.getLeadingZeroNum(this.displayHours),t=s.getLeadingZeroNum(this.minutes);this.$hoursText.html(e),this.$minutesText.html(t),this.d.ampm&&this.$ampm.html(this.dayPeriod)},_updateRanges:function(){this.$hours.attr({min:this.minHours,max:this.maxHours}).val(this.hours),this.$minutes.attr({min:this.minMinutes,max:this.maxMinutes}).val(this.minutes)},_handleDate:function(e){this._setDefaultMinMaxTime(),e&&(s.isSame(e,this.d.opts.minDate)?this._setMinTimeFromDate(this.d.opts.minDate):s.isSame(e,this.d.opts.maxDate)&&this._setMaxTimeFromDate(this.d.opts.maxDate)),this._validateHoursMinutes(e)},update:function(){this._updateRanges(),this._updateCurrentTime()},_getValidHoursFromDate:function(e,t){var i=e;e instanceof Date&&(i=s.getParsedDate(e).hours);var n="am";if(t||this.d.ampm)switch(!0){case 0==i:i=12;break;case 12==i:n="pm";break;case 11<i:i-=12,n="pm"}return{hours:i,dayPeriod:n}},set hours(e){this._hours=e;var t=this._getValidHoursFromDate(e);this.displayHours=t.hours,this.dayPeriod=t.dayPeriod},get hours(){return this._hours},_onChangeRange:function(e){var t=r(e.target),i=t.attr("name");this.d.timepickerIsActive=!0,this[i]=t.val(),this._updateCurrentTime(),this.d._trigger("timeChange",[this.hours,this.minutes]),this._handleDate(this.d.lastSelectedDate),this.update()},_onSelectDate:function(e,t){this._handleDate(t),this.update()},_onMouseEnterRange:function(e){var t=r(e.target).attr("name");r(".datepicker--time-current-"+t,this.$timepicker).addClass("-focus-")},_onMouseOutRange:function(e){var t=r(e.target).attr("name");this.d.inFocus||r(".datepicker--time-current-"+t,this.$timepicker).removeClass("-focus-")},_onMouseUpRange:function(e){this.d.timepickerIsActive=!1}}}(window,jQuery),function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?module.exports=e($||require("jquery")):e(jQuery)}(function(q){"use strict";var s="styler",n={idSuffix:"-styler",filePlaceholder:"Ð¤Ð°Ð¹Ð» Ð½Ðµ Ð²ÑÐ±ÑÐ°Ð½",fileBrowse:"ÐÐ±Ð·Ð¾Ñ...",fileNumber:"ÐÑÐ±ÑÐ°Ð½Ð¾ ÑÐ°Ð¹Ð»Ð¾Ð²: %s",selectPlaceholder:"ÐÑÐ±ÐµÑÐ¸ÑÐµ...",selectSearch:!1,selectSearchLimit:10,selectSearchNotFound:"Ð¡Ð¾Ð²Ð¿Ð°Ð´ÐµÐ½Ð¸Ð¹ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ð¾",selectSearchPlaceholder:"ÐÐ¾Ð¸ÑÐº...",selectVisibleOptions:0,selectSmartPositioning:!0,locale:"ru",locales:{en:{filePlaceholder:"No file selected",fileBrowse:"Browse...",fileNumber:"Selected files: %s",selectPlaceholder:"Select...",selectSearchNotFound:"No matches found",selectSearchPlaceholder:"Search..."}},onSelectOpened:function(){},onSelectClosed:function(){},onFormStyled:function(){}};function o(e,t){this.element=e,this.options=q.extend({},n,t);var i=this.options.locale;void 0!==this.options.locales[i]&&q.extend(this.options,this.options.locales[i]),this.init()}function O(e){if(!q(e.target).parents().hasClass("jq-selectbox")&&"OPTION"!=e.target.nodeName&&q("div.jq-selectbox.opened").length){var t=q("div.jq-selectbox.opened"),i=q("div.jq-selectbox__search input",t),n=q("div.jq-selectbox__dropdown",t);t.find("select").data("_"+s).options.onSelectClosed.call(t),i.length&&i.val("").keyup(),n.hide().find("li.sel").addClass("selected"),t.removeClass("focused opened dropup dropdown")}}o.prototype={init:function(){var H=q(this.element),j=this.options,N=!(!navigator.userAgent.match(/(iPad|iPhone|iPod)/i)||navigator.userAgent.match(/(Windows\sPhone)/i)),e=!(!navigator.userAgent.match(/Android/i)||navigator.userAgent.match(/(Windows\sPhone)/i));function P(){void 0!==H.attr("id")&&""!==H.attr("id")&&(this.id=H.attr("id")+j.idSuffix),this.title=H.attr("title"),this.classes=H.attr("class"),this.data=H.data()}if(H.is(":checkbox")){var t=function(){var e=new P,t=q('<div class="jq-checkbox"><div class="jq-checkbox__div"></div></div>').attr({id:e.id,title:e.title}).addClass(e.classes).data(e.data);H.after(t).prependTo(t),H.is(":checked")&&t.addClass("checked"),H.is(":disabled")&&t.addClass("disabled"),t.click(function(e){e.preventDefault(),H.triggerHandler("click"),t.is(".disabled")||(H.is(":checked")?(H.prop("checked",!1),t.removeClass("checked")):(H.prop("checked",!0),t.addClass("checked")),H.focus().change())}),H.closest("label").add('label[for="'+H.attr("id")+'"]').on("click.styler",function(e){q(e.target).is("a")||q(e.target).closest(t).length||(t.triggerHandler("click"),e.preventDefault())}),H.on("change.styler",function(){H.is(":checked")?t.addClass("checked"):t.removeClass("checked")}).on("keydown.styler",function(e){32==e.which&&t.click()}).on("focus.styler",function(){t.is(".disabled")||t.addClass("focused")}).on("blur.styler",function(){t.removeClass("focused")})};t(),H.on("refresh",function(){H.closest("label").add('label[for="'+H.attr("id")+'"]').off(".styler"),H.off(".styler").parent().before(H).remove(),t()})}else if(H.is(":radio")){var i=function(){var e=new P,i=q('<div class="jq-radio"><div class="jq-radio__div"></div></div>').attr({id:e.id,title:e.title}).addClass(e.classes).data(e.data);H.after(i).prependTo(i),H.is(":checked")&&i.addClass("checked"),H.is(":disabled")&&i.addClass("disabled"),q.fn.commonParents=function(){var e=this;return e.first().parents().filter(function(){return q(this).find(e).length===e.length})},q.fn.commonParent=function(){return q(this).commonParents().first()},i.click(function(e){if(e.preventDefault(),H.triggerHandler("click"),!i.is(".disabled")){var t=q('input[name="'+H.attr("name")+'"]');t.commonParent().find(t).prop("checked",!1).parent().removeClass("checked"),H.prop("checked",!0).parent().addClass("checked"),H.focus().change()}}),H.closest("label").add('label[for="'+H.attr("id")+'"]').on("click.styler",function(e){q(e.target).is("a")||q(e.target).closest(i).length||(i.triggerHandler("click"),e.preventDefault())}),H.on("change.styler",function(){H.parent().addClass("checked")}).on("focus.styler",function(){i.is(".disabled")||i.addClass("focused")}).on("blur.styler",function(){i.removeClass("focused")})};i(),H.on("refresh",function(){H.closest("label").add('label[for="'+H.attr("id")+'"]').off(".styler"),H.off(".styler").parent().before(H).remove(),i()})}else if(H.is(":file")){var n=function(){var e=new P,n=H.data("placeholder");void 0===n&&(n=j.filePlaceholder);var t=H.data("browse");void 0!==t&&""!==t||(t=j.fileBrowse);var s=q('<div class="jq-file"><div class="jq-file__name">'+n+'</div><div class="jq-file__browse">'+t+"</div></div>").attr({id:e.id,title:e.title}).addClass(e.classes).data(e.data);H.after(s).appendTo(s),H.is(":disabled")&&s.addClass("disabled");var i=H.val(),o=q("div.jq-file__name",s);i&&o.text(i.replace(/.+[\\\/]/,"")),H.on("change.styler",function(){var e=H.val();if(H.is("[multiple]")){e="";var t=H[0].files.length;if(0<t){var i=H.data("number");void 0===i&&(i=j.fileNumber),e=i=i.replace("%s",t)}}o.text(e.replace(/.+[\\\/]/,"")),""===e?(o.text(n),s.removeClass("changed")):s.addClass("changed")}).on("focus.styler",function(){s.addClass("focused")}).on("blur.styler",function(){s.removeClass("focused")}).on("click.styler",function(){s.removeClass("focused")})};n(),H.on("refresh",function(){H.off(".styler").parent().before(H).remove(),n()})}else if(H.is('input[type="number"]')){var s=function(){var e=new P,t=q('<div class="jq-number"><div class="jq-number__spin minus"></div><div class="jq-number__spin plus"></div></div>').attr({id:e.id,title:e.title}).addClass(e.classes).data(e.data);H.after(t).prependTo(t).wrap('<div class="jq-number__field"></div>'),H.is(":disabled")&&t.addClass("disabled");var o,r,a,i=null,n=null;void 0!==H.attr("min")&&(o=H.attr("min")),void 0!==H.attr("max")&&(r=H.attr("max")),a=void 0!==H.attr("step")&&q.isNumeric(H.attr("step"))?Number(H.attr("step")):Number(1);function s(e){var t,i=H.val();q.isNumeric(i)||(i=0,H.val("0")),e.is(".minus")?t=Number(i)-a:e.is(".plus")&&(t=Number(i)+a);var n=(a.toString().split(".")[1]||[]).length;if(0<n){for(var s="1";s.length<=n;)s+="0";t=Math.round(t*s)/s}q.isNumeric(o)&&q.isNumeric(r)?o<=t&&t<=r&&H.val(t):q.isNumeric(o)&&!q.isNumeric(r)?o<=t&&H.val(t):!q.isNumeric(o)&&q.isNumeric(r)?t<=r&&H.val(t):H.val(t)}t.is(".disabled")||(t.on("mousedown","div.jq-number__spin",function(){var e=q(this);s(e),i=setTimeout(function(){n=setInterval(function(){s(e)},40)},350)}).on("mouseup mouseout","div.jq-number__spin",function(){clearTimeout(i),clearInterval(n)}).on("mouseup","div.jq-number__spin",function(){H.change().trigger("input")}),H.on("focus.styler",function(){t.addClass("focused")}).on("blur.styler",function(){t.removeClass("focused")}))};s(),H.on("refresh",function(){H.off(".styler").closest(".jq-number").before(H).remove(),s()})}else if(H.is("select")){var o=function(){function _(t){var i=t.prop("scrollHeight")-t.outerHeight(),n=null,s=null;t.off("mousewheel DOMMouseScroll").on("mousewheel DOMMouseScroll",function(e){n=e.originalEvent.detail<0||0<e.originalEvent.wheelDelta?1:-1,s=t.scrollTop(),(i<=s&&n<0||s<=0&&0<n)&&(e.stopPropagation(),e.preventDefault())})}var A=q("option",H),M="";function E(){for(var e=0;e<A.length;e++){var t=A.eq(e),i="",n="",s="",o="",r="",a="",l="",d="",c="";t.prop("selected")&&(n="selected sel"),t.is(":disabled")&&(n="disabled"),t.is(":selected:disabled")&&(n="selected sel disabled"),void 0!==t.attr("id")&&""!==t.attr("id")&&(o=' id="'+t.attr("id")+j.idSuffix+'"'),void 0!==t.attr("title")&&""!==A.attr("title")&&(r=' title="'+t.attr("title")+'"'),void 0!==t.attr("class")&&(l=" "+t.attr("class"),c=' data-jqfs-class="'+t.attr("class")+'"');var u=t.data();for(var p in u)""!==u[p]&&(a+=" data-"+p+'="'+u[p]+'"');n+l!==""&&(s=' class="'+n+l+'"'),i="<li"+c+a+s+r+o+">"+t.html()+"</li>",t.parent().is("optgroup")&&(void 0!==t.parent().attr("class")&&(d=" "+t.parent().attr("class")),i="<li"+c+a+' class="'+n+l+" option"+d+'"'+r+o+">"+t.html()+"</li>",t.is(":first-child")&&(i='<li class="optgroup'+d+'">'+t.parent().attr("label")+"</li>"+i)),M+=i}}if(H.is("[multiple]")){if(e||N)return;!function(){var e=new P,t=q('<div class="jq-select-multiple jqselect"></div>').attr({id:e.id,title:e.title}).addClass(e.classes).data(e.data);H.after(t),E(),t.append("<ul>"+M+"</ul>");var i=q("ul",t),s=q("li",t),n=H.attr("size"),o=i.outerHeight(),r=s.outerHeight();void 0!==n&&0<n?i.css({height:r*n}):i.css({height:4*r}),o>t.height()&&(i.css("overflowY","scroll"),_(i),s.filter(".selected").length&&i.scrollTop(i.scrollTop()+s.filter(".selected").position().top)),H.prependTo(t),H.is(":disabled")?(t.addClass("disabled"),A.each(function(){q(this).is(":selected")&&s.eq(q(this).index()).addClass("selected")})):(s.filter(":not(.disabled):not(.optgroup)").click(function(e){H.focus();var t=q(this);if(e.ctrlKey||e.metaKey||t.addClass("selected"),e.shiftKey||t.addClass("first"),e.ctrlKey||e.metaKey||e.shiftKey||t.siblings().removeClass("selected first"),(e.ctrlKey||e.metaKey)&&(t.is(".selected")?t.removeClass("selected first"):t.addClass("selected first"),t.siblings().removeClass("first")),e.shiftKey){var i=!1,n=!1;t.siblings().removeClass("selected").siblings(".first").addClass("selected"),t.prevAll().each(function(){q(this).is(".first")&&(i=!0)}),t.nextAll().each(function(){q(this).is(".first")&&(n=!0)}),i&&t.prevAll().each(function(){if(q(this).is(".selected"))return!1;q(this).not(".disabled, .optgroup").addClass("selected")}),n&&t.nextAll().each(function(){if(q(this).is(".selected"))return!1;q(this).not(".disabled, .optgroup").addClass("selected")}),1==s.filter(".selected").length&&t.addClass("first")}A.prop("selected",!1),s.filter(".selected").each(function(){var e=q(this),t=e.index();e.is(".option")&&(t-=e.prevAll(".optgroup").length),A.eq(t).prop("selected",!0)}),H.change()}),A.each(function(e){q(this).data("optionIndex",e)}),H.on("change.styler",function(){s.removeClass("selected");var t=[];A.filter(":selected").each(function(){t.push(q(this).data("optionIndex"))}),s.not(".optgroup").filter(function(e){return-1<q.inArray(e,t)}).addClass("selected")}).on("focus.styler",function(){t.addClass("focused")}).on("blur.styler",function(){t.removeClass("focused")}),o>t.height()&&H.on("keydown.styler",function(e){38!=e.which&&37!=e.which&&33!=e.which||i.scrollTop(i.scrollTop()+s.filter(".selected").position().top-r),40!=e.which&&39!=e.which&&34!=e.which||i.scrollTop(i.scrollTop()+s.filter(".selected:last").position().top-i.innerHeight()+2*r)}))}()}else!function(){var e=new P,t="",i=H.data("placeholder"),n=H.data("search"),s=H.data("search-limit"),o=H.data("search-not-found"),r=H.data("search-placeholder"),l=H.data("smart-positioning");void 0===i&&(i=j.selectPlaceholder),void 0!==n&&""!==n||(n=j.selectSearch),void 0!==s&&""!==s||(s=j.selectSearchLimit),void 0!==o&&""!==o||(o=j.selectSearchNotFound),void 0===r&&(r=j.selectSearchPlaceholder),void 0!==l&&""!==l||(l=j.selectSmartPositioning);var d=q('<div class="jq-selectbox jqselect"><div class="jq-selectbox__select"><div class="jq-selectbox__select-text"></div><div class="jq-selectbox__trigger"><div class="jq-selectbox__trigger-arrow"></div></div></div></div>').attr({id:e.id,title:e.title}).addClass(e.classes).data(e.data);H.after(d).prependTo(d);var c=d.css("z-index");c=0<c?c:1;var a=q("div.jq-selectbox__select",d),u=q("div.jq-selectbox__select-text",d),p=A.filter(":selected");E(),n&&(t='<div class="jq-selectbox__search"><input type="search" autocomplete="off" placeholder="'+r+'"></div><div class="jq-selectbox__not-found">'+o+"</div>");var h=q('<div class="jq-selectbox__dropdown">'+t+"<ul>"+M+"</ul></div>");d.append(h);var f=q("ul",h),m=q("li",h),g=q("input",h),v=q("div.jq-selectbox__not-found",h).hide();m.length<s&&g.parent().hide(),""===A.first().text()&&A.first().is(":selected")&&!1!==i?u.text(i).addClass("placeholder"):u.text(p.text());var y=0,w=0;if(m.css({display:"inline-block"}),m.each(function(){var e=q(this);e.innerWidth()>y&&(y=e.innerWidth(),w=e.width())}),m.css({display:""}),u.is(".placeholder")&&u.width()>y)u.width(u.width());else{var b=d.clone().appendTo("body").width("auto"),k=b.outerWidth();b.remove(),k==d.outerWidth()&&u.width(w)}y>d.width()&&h.width(y),""===A.first().text()&&""!==H.data("placeholder")&&m.first().hide();var x=d.outerHeight(!0),C=g.parent().outerHeight(!0)||0,T=f.css("max-height"),S=m.filter(".selected");if(S.length<1&&m.first().addClass("selected sel"),void 0===m.data("li-height")){var D=m.outerHeight();!1!==i&&(D=m.eq(1).outerHeight()),m.data("li-height",D)}var $=h.css("top");if("auto"==h.css("left")&&h.css({left:0}),"auto"==h.css("top")&&(h.css({top:x}),$=x),h.hide(),S.length&&(A.first().text()!=p.text()&&d.addClass("changed"),d.data("jqfs-class",S.data("jqfs-class")),d.addClass(S.data("jqfs-class"))),H.is(":disabled"))return d.addClass("disabled");a.click(function(){if(q("div.jq-selectbox").filter(".opened").length&&j.onSelectClosed.call(q("div.jq-selectbox").filter(".opened")),H.focus(),!N){var t=q(window),i=m.data("li-height"),n=d.offset().top,s=t.height()-x-(n-t.scrollTop()),e=H.data("visible-options");void 0!==e&&""!==e||(e=j.selectVisibleOptions);var o=5*i,r=i*e;0<e&&e<6&&(o=r),0===e&&(r="auto");var a=function(){h.height("auto").css({bottom:"auto",top:$});function e(){f.css("max-height",Math.floor((s-20-C)/i)*i)}e(),f.css("max-height",r),"none"!=T&&f.css("max-height",T),s<h.outerHeight()+20&&e()};!0===l||1===l?o+C+20<s?(a(),d.removeClass("dropup").addClass("dropdown")):(function(){h.height("auto").css({top:"auto",bottom:$});function e(){f.css("max-height",Math.floor((n-t.scrollTop()-20-C)/i)*i)}e(),f.css("max-height",r),"none"!=T&&f.css("max-height",T),n-t.scrollTop()-20<h.outerHeight()+20&&e()}(),d.removeClass("dropdown").addClass("dropup")):!1===l||0===l?o+C+20<s&&(a(),d.removeClass("dropup").addClass("dropdown")):(h.height("auto").css({bottom:"auto",top:$}),f.css("max-height",r),"none"!=T&&f.css("max-height",T)),d.offset().left+h.outerWidth()>t.width()&&h.css({left:"auto",right:0}),q("div.jqselect").css({zIndex:c-1}).removeClass("opened"),d.css({zIndex:c}),h.is(":hidden")?(q("div.jq-selectbox__dropdown:visible").hide(),h.show(),d.addClass("opened focused"),j.onSelectOpened.call(d)):(h.hide(),d.removeClass("opened dropup dropdown"),q("div.jq-selectbox").filter(".opened").length&&j.onSelectClosed.call(d)),g.length&&(g.val("").keyup(),v.hide(),g.keyup(function(){var e=q(this).val();m.each(function(){q(this).html().match(new RegExp(".*?"+e+".*?","i"))?q(this).show():q(this).hide()}),""===A.first().text()&&""!==H.data("placeholder")&&m.first().hide(),m.filter(":visible").length<1?v.show():v.hide()})),m.filter(".selected").length&&(""===H.val()?f.scrollTop(0):(f.innerHeight()/i%2!=0&&(i/=2),f.scrollTop(f.scrollTop()+m.filter(".selected").position().top-f.innerHeight()/2+i))),_(f)}}),m.hover(function(){q(this).siblings().removeClass("selected")}),m.filter(".selected").text(),m.filter(":not(.disabled):not(.optgroup)").click(function(){H.focus();var e=q(this),t=e.text();if(!e.is(".selected")){var i=e.index();i-=e.prevAll(".optgroup").length,e.addClass("selected sel").siblings().removeClass("selected sel"),A.prop("selected",!1).eq(i).prop("selected",!0),t,u.text(t),d.data("jqfs-class")&&d.removeClass(d.data("jqfs-class")),d.data("jqfs-class",e.data("jqfs-class")),d.addClass(e.data("jqfs-class")),H.change()}h.hide(),d.removeClass("opened dropup dropdown"),j.onSelectClosed.call(d)}),h.mouseout(function(){q("li.sel",h).addClass("selected")}),H.on("change.styler",function(){u.text(A.filter(":selected").text()).removeClass("placeholder"),m.removeClass("selected sel").not(".optgroup").eq(H[0].selectedIndex).addClass("selected sel"),A.first().text()!=m.filter(".selected").text()?d.addClass("changed"):d.removeClass("changed")}).on("focus.styler",function(){d.addClass("focused"),q("div.jqselect").not(".focused").removeClass("opened dropup dropdown").find("div.jq-selectbox__dropdown").hide()}).on("blur.styler",function(){d.removeClass("focused")}).on("keydown.styler keyup.styler",function(e){var t=m.data("li-height");""===H.val()?u.text(i).addClass("placeholder"):u.text(A.filter(":selected").text()),m.removeClass("selected sel").not(".optgroup").eq(H[0].selectedIndex).addClass("selected sel"),38!=e.which&&37!=e.which&&33!=e.which&&36!=e.which||(""===H.val()?f.scrollTop(0):f.scrollTop(f.scrollTop()+m.filter(".selected").position().top)),40!=e.which&&39!=e.which&&34!=e.which&&35!=e.which||f.scrollTop(f.scrollTop()+m.filter(".selected").position().top-f.innerHeight()+t),13==e.which&&(e.preventDefault(),h.hide(),d.removeClass("opened dropup dropdown"),j.onSelectClosed.call(d))}).on("keydown.styler",function(e){32==e.which&&(e.preventDefault(),a.click())}),O.registered||(q(document).on("click",O),O.registered=!0)}()};o(),H.on("refresh",function(){H.off(".styler").parent().before(H).remove(),o()})}else H.is(":reset")&&H.on("click",function(){setTimeout(function(){H.closest("form").find("input, select").trigger("refresh")},1)})},destroy:function(){var e=q(this.element);e.is(":checkbox")||e.is(":radio")?(e.removeData("_"+s).off(".styler refresh").removeAttr("style").parent().before(e).remove(),e.closest("label").add('label[for="'+e.attr("id")+'"]').off(".styler")):e.is('input[type="number"]')?e.removeData("_"+s).off(".styler refresh").closest(".jq-number").before(e).remove():(e.is(":file")||e.is("select"))&&e.removeData("_"+s).off(".styler refresh").removeAttr("style").parent().before(e).remove()}},q.fn[s]=function(t){var i,n=arguments;return void 0===t||"object"==typeof t?(this.each(function(){q.data(this,"_"+s)||q.data(this,"_"+s,new o(this,t))}).promise().done(function(){var e=q(this[0]).data("_"+s);e&&e.options.onFormStyled.call()}),this):"string"==typeof t&&"_"!==t[0]&&"init"!==t?(this.each(function(){var e=q.data(this,"_"+s);e instanceof o&&"function"==typeof e[t]&&(i=e[t].apply(e,Array.prototype.slice.call(n,1)))}),void 0!==i?i:this):void 0},O.registered=!1});var inputData=document.getElementById("date"),inputDataorder=document.getElementById("dateOrder"),inputTime=document.getElementById("time-first"),inputTimeorder=document.getElementById("dateTime");function dataFunction(){inputDataorder.value=inputData.value}$("body").click(function(e){""==!inputData.value&&($(this).onchange=dataFunction())}),document.getElementById("btnChocePrise").onclick=function(){document.getElementById("orderCheckRoom").value=document.getElementById("priseRoom").value};var Children=document.getElementById("children1"),Children2=document.getElementById("children2"),childMiddle=document.getElementById("childMiddle1"),childMiddle2=document.getElementById("childMiddle2"),childMiddle3=document.getElementById("prise-childMiddle"),woman1=document.getElementById("woman1"),womanord2=document.getElementById("woman-ord2"),prisewomen3=document.getElementById("prise-women");function childFunction(){children2.value=Children.value}function childFunction2(){Children.value=Children2.value}function childFunction3(){childMiddle3.value=childMiddle2.value=childMiddle1.value,childMiddle3.value=200*childMiddle.value+"â´"}function childFunction4(){childMiddle3.value=childMiddle.value=childMiddle2.value,childMiddle3.value=200*childMiddle2.value+"â´"}function childFunction5(){prisewomen3.value=womanord2.value=woman1.value,prisewomen3.value=200*woman1.value+"â´"}function childFunction6(){prisewomen3.value=woman1.value=womanord2.value,prisewomen3.value=200*womanord2.value+"â´"}function findTotal(){for(var e=document.getElementsByName("qty"),t=0,i=0;i<e.length;i++)parseInt(e[i].value)&&(t+=parseInt(e[i].value));document.getElementById("total").value=t+"â´"}$(".number-plus-minus").click(function(){$(this).onchange=childFunction()}),$(".order-child1").click(function(){$(this).onchange=childFunction2()}),$(".number-plus-minus").click(function(){$(this).onchange=childFunction3()}),$(".order-child1").click(function(){$(this).onchange=childFunction4()}),$(".number-plus-minus").click(function(){$(this).onchange=childFunction5()}),$(".order-child1").click(function(){$(this).onchange=childFunction6()}),$(".order-child1").click(function(){console.log("nnnnnnnnnnnnnnnnn"),$(this).onchange=findTotal()}),$(".number-plus-minus").click(function(){$(this).onchange=findTotal()}),$("#btnChocePrise").click(function(){$(this).onchange=findTotal()}),function(e){e(function(){e("input").styler()})}(jQuery),$(window).scroll(function(){1<$(this).scrollTop()?$(".order").addClass("sticky-order"):$(".order").removeClass("sticky-order")}),$(window).on("load",function(){/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)?$("body").addClass("ios"):$("body").addClass("web"),$("body").removeClass("loaded")}),function(e,t,o){"use strict";var i=o(".js-tab-widget"),r=function(e,t,i,n){t.attr({tabindex:-1,"aria-selected":"false"}).removeAttr("aria-describedby").removeClass("tab-widget__link--active"),e.attr({tabindex:0,"aria-selected":"true","aria-describedby":"tab-widget-description"}).addClass("tab-widget__link--active"),i.attr("aria-hidden","true").removeClass("tab-widget__tab-content--active"),i.eq(n).attr("aria-hidden","false").addClass("tab-widget__tab-content--active")},a=function(e,t,i,n,s,o){var r=o.which,a=!!e.parent().next().is("li")&&e.parent().next().find("a"),l=!!e.parent().prev().is("li")&&e.parent().prev().find("a"),d=e.parent().parent().find("li:first").find("a"),c=e.parent().parent().find("li:last").find("a");switch(r){case 37:case 38:o.preventDefault(),o.stopPropagation(),l?l.focus():c.focus();break;case 39:case 40:o.preventDefault(),o.stopPropagation(),a?a.focus():d.focus();break;case 36:o.preventDefault(),o.stopPropagation(),d.focus();break;case 35:o.preventDefault(),o.stopPropagation(),c.focus();break;case 13:case 32:o.preventDefault(),o.stopPropagation()}};i.each(function(){var e=o(this),t=e.find("> ul"),i=t.find("li"),n=i.find("a"),s=e.find("> div > div");t.attr("role","tablist"),i.attr("role","presentation"),n.each(function(e){!function(e,t,i,n,s){e.attr({id:"tab-link-"+s,tabindex:"-1",role:"tab","aria-selected":"false","aria-controls":"tab-panel-"+s}),0===s&&e.attr({tabindex:"0","aria-selected":"true","aria-describedby":"tab-widget-description"}).addClass("tab-widget__link--active"),e.on("click",function(e){e.preventDefault(),r(o(this),t,i,s)}),e.on("focus",function(e){r(o(this),t,i,s)}),e.on("keydown",function(e){a(o(this),t,i,n,s,e)})}(o(this),n,s,i,e)}),s.each(function(e){!function(e,t){e.attr({id:"tab-panel-"+t,role:"tabpanel","aria-hidden":"true","aria-labelledby":"tab-link-"+t}),0===t&&e.attr("aria-hidden","false").addClass("tab-widget__tab-content--active")}(o(this),e)})}),o("html").addClass("js").removeClass("no-js")}(document,window,jQuery),$(document).ready(function(){function e(){$(".RoomSlider").not(".slick-initialized").slick({slidesToShow:1,slidesToScroll:1,dots:!0,arrows:!0,speed:500,cssEase:"linear",centerPadding:"10px",prevArrow:'<img src="/dist/svg/left.svg" data-role="none" class="RoomSlider__L" aria-label="Previous" tabindex="0" role="button" />',nextArrow:'<img src="/dist/svg/right.svg" data-role="none"class="RoomSlider__R" aria-label="Next" tabindex="0" role="button" />',focusOnSelect:!0})}e(),$(window).resize(function(){$(window).width()<1100&&e()});var t=$(".time__item input");t.click(function(){return function(e){t.removeClass("time__item--active"),e.addClass("time__item--active")}($(this)),!1}),$("#date-btn").click(function(){$(".holiday").find('input[type="text"]').focus()}),$("#date").datepicker({navTitles:{days:'<h3 style="display:block; color:#E5097F; text-align: center; font-size: 12px;">ÐÑÐ±ÐµÑÐµÑÐµ Ð´Ð°ÑÑ Ð¿ÑÐ¾Ð²ÐµÐ´ÐµÐ½Ð¸Ñ Ð¼ÐµÑÐ¾Ð¿ÑÐ¸ÑÑÐ¸Ñ</h3> MM, yyyy'},autoClose:!0,showEvent:"click"}),$(window).scroll(function(){1<$(this).scrollTop()&&$(".soc").addClass("soc-sticky")}),$(window).scroll(function(){1<$(this).scrollTop()?$("header").addClass("sticky-header"):$("header").removeClass("sticky-header")}),$(window).scroll(function(){1<$(this).scrollTop()?$(".progressbar").addClass("sticky-bar"):$(".progressbar").removeClass("sticky-bar")}),$(".order-list").click(function(e){$(this).toggleClass("color-orderList"),$(".order-section").toggleClass("order-mob")}),$(".menu-mob-click--left").click(function(e){$(this).toggleClass("color-orderList"),$(".progressbar-mob").toggleClass("mob-bar")}),$(".menu-mob-click--right").click(function(e){$(this).toggleClass("color-orderList"),$(".soc").toggleClass("mob-bar2")}),$("body").click(function(e){var t=$(".order"),i=$(".order-list"),n=$(".number-plus-minus");t.is(e.target)||0!==t.has(e.target).length||i.is(e.target)||0!==i.has(e.target).length||n.is(e.target)||0!==n.has(e.target).length||$(".order-section").hasClass("order-mob")&&($(".order-list").toggleClass("color-orderList"),$(".order-section").toggleClass("order-mob"))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
